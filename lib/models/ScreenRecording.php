<?php
/**
 * ScreenRecording
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace ultracart\v2\models;

use \ArrayAccess;
use \ultracart\v2\ObjectSerializer;

/**
 * ScreenRecording Class Doc Comment
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ScreenRecording implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ScreenRecording';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'ad_platform' => '\ultracart\v2\models\ScreenRecordingAdPlatform',
        'analytics_client_oid' => 'int',
        'analytics_session_dts' => 'int',
        'analytics_session_oid' => 'int',
        'communications_campaign_name' => 'string',
        'communications_campaign_uuid' => 'string',
        'communications_email_subject' => 'string',
        'communications_email_uuid' => 'string',
        'communications_flow_name' => 'string',
        'communications_flow_uuid' => 'string',
        'email' => 'string',
        'email_domain' => 'string',
        'end_timestamp' => 'string',
        'esp_customer_uuid' => 'string',
        'events_gz_size' => 'int',
        'events_json_key' => 'string',
        'favorite' => 'bool',
        'favorites' => 'int[]',
        'geolocation' => '\ultracart\v2\models\GeoPoint',
        'geolocation_country' => 'string',
        'geolocation_state' => 'string',
        'language_iso_code' => 'string',
        'merchant_id' => 'string',
        'merchant_notes' => 'string',
        'missing_external_tracking' => 'bool',
        'order_id' => 'string',
        'page_view_count' => 'int',
        'page_views' => '\ultracart\v2\models\ScreenRecordingPageView[]',
        'preferred_language' => 'string',
        'referrer_domain' => 'string',
        'rrweb_version' => 'string',
        'screen_recording_uuid' => 'string',
        'signed_download_url' => 'string',
        'start_timestamp' => 'string',
        'storefront_oids' => 'int[]',
        'storefronts' => '\ultracart\v2\models\ScreenRecordingStoreFront[]',
        'tags' => 'string[]',
        'time_on_site' => 'int',
        'ucacid' => 'string',
        'user_agent' => '\ultracart\v2\models\ScreenRecordingUserAgent',
        'user_agent_raw' => 'string',
        'user_ip' => 'string',
        'user_properties' => '\ultracart\v2\models\ScreenRecordingUserProperty[]',
        'utm_campaign' => 'string',
        'utm_source' => 'string',
        'visitor_first_seen' => 'string',
        'visitor_number' => 'int',
        'watched' => 'bool',
        'window_height' => 'int',
        'window_width' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'ad_platform' => null,
        'analytics_client_oid' => 'int64',
        'analytics_session_dts' => 'int64',
        'analytics_session_oid' => 'int64',
        'communications_campaign_name' => null,
        'communications_campaign_uuid' => null,
        'communications_email_subject' => null,
        'communications_email_uuid' => null,
        'communications_flow_name' => null,
        'communications_flow_uuid' => null,
        'email' => null,
        'email_domain' => null,
        'end_timestamp' => 'dateTime',
        'esp_customer_uuid' => null,
        'events_gz_size' => 'int32',
        'events_json_key' => null,
        'favorite' => null,
        'favorites' => null,
        'geolocation' => null,
        'geolocation_country' => null,
        'geolocation_state' => null,
        'language_iso_code' => null,
        'merchant_id' => null,
        'merchant_notes' => null,
        'missing_external_tracking' => null,
        'order_id' => null,
        'page_view_count' => 'int32',
        'page_views' => null,
        'preferred_language' => null,
        'referrer_domain' => null,
        'rrweb_version' => null,
        'screen_recording_uuid' => null,
        'signed_download_url' => null,
        'start_timestamp' => 'dateTime',
        'storefront_oids' => null,
        'storefronts' => null,
        'tags' => null,
        'time_on_site' => 'int32',
        'ucacid' => null,
        'user_agent' => null,
        'user_agent_raw' => null,
        'user_ip' => null,
        'user_properties' => null,
        'utm_campaign' => null,
        'utm_source' => null,
        'visitor_first_seen' => 'dateTime',
        'visitor_number' => 'int32',
        'watched' => null,
        'window_height' => 'int32',
        'window_width' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'ad_platform' => 'ad_platform',
        'analytics_client_oid' => 'analytics_client_oid',
        'analytics_session_dts' => 'analytics_session_dts',
        'analytics_session_oid' => 'analytics_session_oid',
        'communications_campaign_name' => 'communications_campaign_name',
        'communications_campaign_uuid' => 'communications_campaign_uuid',
        'communications_email_subject' => 'communications_email_subject',
        'communications_email_uuid' => 'communications_email_uuid',
        'communications_flow_name' => 'communications_flow_name',
        'communications_flow_uuid' => 'communications_flow_uuid',
        'email' => 'email',
        'email_domain' => 'email_domain',
        'end_timestamp' => 'end_timestamp',
        'esp_customer_uuid' => 'esp_customer_uuid',
        'events_gz_size' => 'events_gz_size',
        'events_json_key' => 'events_json_key',
        'favorite' => 'favorite',
        'favorites' => 'favorites',
        'geolocation' => 'geolocation',
        'geolocation_country' => 'geolocation_country',
        'geolocation_state' => 'geolocation_state',
        'language_iso_code' => 'language_iso_code',
        'merchant_id' => 'merchant_id',
        'merchant_notes' => 'merchant_notes',
        'missing_external_tracking' => 'missing_external_tracking',
        'order_id' => 'order_id',
        'page_view_count' => 'page_view_count',
        'page_views' => 'page_views',
        'preferred_language' => 'preferred_language',
        'referrer_domain' => 'referrer_domain',
        'rrweb_version' => 'rrweb_version',
        'screen_recording_uuid' => 'screen_recording_uuid',
        'signed_download_url' => 'signed_download_url',
        'start_timestamp' => 'start_timestamp',
        'storefront_oids' => 'storefront_oids',
        'storefronts' => 'storefronts',
        'tags' => 'tags',
        'time_on_site' => 'time_on_site',
        'ucacid' => 'ucacid',
        'user_agent' => 'user_agent',
        'user_agent_raw' => 'user_agent_raw',
        'user_ip' => 'user_ip',
        'user_properties' => 'user_properties',
        'utm_campaign' => 'utm_campaign',
        'utm_source' => 'utm_source',
        'visitor_first_seen' => 'visitor_first_seen',
        'visitor_number' => 'visitor_number',
        'watched' => 'watched',
        'window_height' => 'window_height',
        'window_width' => 'window_width'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'ad_platform' => 'setAdPlatform',
        'analytics_client_oid' => 'setAnalyticsClientOid',
        'analytics_session_dts' => 'setAnalyticsSessionDts',
        'analytics_session_oid' => 'setAnalyticsSessionOid',
        'communications_campaign_name' => 'setCommunicationsCampaignName',
        'communications_campaign_uuid' => 'setCommunicationsCampaignUuid',
        'communications_email_subject' => 'setCommunicationsEmailSubject',
        'communications_email_uuid' => 'setCommunicationsEmailUuid',
        'communications_flow_name' => 'setCommunicationsFlowName',
        'communications_flow_uuid' => 'setCommunicationsFlowUuid',
        'email' => 'setEmail',
        'email_domain' => 'setEmailDomain',
        'end_timestamp' => 'setEndTimestamp',
        'esp_customer_uuid' => 'setEspCustomerUuid',
        'events_gz_size' => 'setEventsGzSize',
        'events_json_key' => 'setEventsJsonKey',
        'favorite' => 'setFavorite',
        'favorites' => 'setFavorites',
        'geolocation' => 'setGeolocation',
        'geolocation_country' => 'setGeolocationCountry',
        'geolocation_state' => 'setGeolocationState',
        'language_iso_code' => 'setLanguageIsoCode',
        'merchant_id' => 'setMerchantId',
        'merchant_notes' => 'setMerchantNotes',
        'missing_external_tracking' => 'setMissingExternalTracking',
        'order_id' => 'setOrderId',
        'page_view_count' => 'setPageViewCount',
        'page_views' => 'setPageViews',
        'preferred_language' => 'setPreferredLanguage',
        'referrer_domain' => 'setReferrerDomain',
        'rrweb_version' => 'setRrwebVersion',
        'screen_recording_uuid' => 'setScreenRecordingUuid',
        'signed_download_url' => 'setSignedDownloadUrl',
        'start_timestamp' => 'setStartTimestamp',
        'storefront_oids' => 'setStorefrontOids',
        'storefronts' => 'setStorefronts',
        'tags' => 'setTags',
        'time_on_site' => 'setTimeOnSite',
        'ucacid' => 'setUcacid',
        'user_agent' => 'setUserAgent',
        'user_agent_raw' => 'setUserAgentRaw',
        'user_ip' => 'setUserIp',
        'user_properties' => 'setUserProperties',
        'utm_campaign' => 'setUtmCampaign',
        'utm_source' => 'setUtmSource',
        'visitor_first_seen' => 'setVisitorFirstSeen',
        'visitor_number' => 'setVisitorNumber',
        'watched' => 'setWatched',
        'window_height' => 'setWindowHeight',
        'window_width' => 'setWindowWidth'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'ad_platform' => 'getAdPlatform',
        'analytics_client_oid' => 'getAnalyticsClientOid',
        'analytics_session_dts' => 'getAnalyticsSessionDts',
        'analytics_session_oid' => 'getAnalyticsSessionOid',
        'communications_campaign_name' => 'getCommunicationsCampaignName',
        'communications_campaign_uuid' => 'getCommunicationsCampaignUuid',
        'communications_email_subject' => 'getCommunicationsEmailSubject',
        'communications_email_uuid' => 'getCommunicationsEmailUuid',
        'communications_flow_name' => 'getCommunicationsFlowName',
        'communications_flow_uuid' => 'getCommunicationsFlowUuid',
        'email' => 'getEmail',
        'email_domain' => 'getEmailDomain',
        'end_timestamp' => 'getEndTimestamp',
        'esp_customer_uuid' => 'getEspCustomerUuid',
        'events_gz_size' => 'getEventsGzSize',
        'events_json_key' => 'getEventsJsonKey',
        'favorite' => 'getFavorite',
        'favorites' => 'getFavorites',
        'geolocation' => 'getGeolocation',
        'geolocation_country' => 'getGeolocationCountry',
        'geolocation_state' => 'getGeolocationState',
        'language_iso_code' => 'getLanguageIsoCode',
        'merchant_id' => 'getMerchantId',
        'merchant_notes' => 'getMerchantNotes',
        'missing_external_tracking' => 'getMissingExternalTracking',
        'order_id' => 'getOrderId',
        'page_view_count' => 'getPageViewCount',
        'page_views' => 'getPageViews',
        'preferred_language' => 'getPreferredLanguage',
        'referrer_domain' => 'getReferrerDomain',
        'rrweb_version' => 'getRrwebVersion',
        'screen_recording_uuid' => 'getScreenRecordingUuid',
        'signed_download_url' => 'getSignedDownloadUrl',
        'start_timestamp' => 'getStartTimestamp',
        'storefront_oids' => 'getStorefrontOids',
        'storefronts' => 'getStorefronts',
        'tags' => 'getTags',
        'time_on_site' => 'getTimeOnSite',
        'ucacid' => 'getUcacid',
        'user_agent' => 'getUserAgent',
        'user_agent_raw' => 'getUserAgentRaw',
        'user_ip' => 'getUserIp',
        'user_properties' => 'getUserProperties',
        'utm_campaign' => 'getUtmCampaign',
        'utm_source' => 'getUtmSource',
        'visitor_first_seen' => 'getVisitorFirstSeen',
        'visitor_number' => 'getVisitorNumber',
        'watched' => 'getWatched',
        'window_height' => 'getWindowHeight',
        'window_width' => 'getWindowWidth'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ad_platform'] = $data['ad_platform'] ?? null;
        $this->container['analytics_client_oid'] = $data['analytics_client_oid'] ?? null;
        $this->container['analytics_session_dts'] = $data['analytics_session_dts'] ?? null;
        $this->container['analytics_session_oid'] = $data['analytics_session_oid'] ?? null;
        $this->container['communications_campaign_name'] = $data['communications_campaign_name'] ?? null;
        $this->container['communications_campaign_uuid'] = $data['communications_campaign_uuid'] ?? null;
        $this->container['communications_email_subject'] = $data['communications_email_subject'] ?? null;
        $this->container['communications_email_uuid'] = $data['communications_email_uuid'] ?? null;
        $this->container['communications_flow_name'] = $data['communications_flow_name'] ?? null;
        $this->container['communications_flow_uuid'] = $data['communications_flow_uuid'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['email_domain'] = $data['email_domain'] ?? null;
        $this->container['end_timestamp'] = $data['end_timestamp'] ?? null;
        $this->container['esp_customer_uuid'] = $data['esp_customer_uuid'] ?? null;
        $this->container['events_gz_size'] = $data['events_gz_size'] ?? null;
        $this->container['events_json_key'] = $data['events_json_key'] ?? null;
        $this->container['favorite'] = $data['favorite'] ?? null;
        $this->container['favorites'] = $data['favorites'] ?? null;
        $this->container['geolocation'] = $data['geolocation'] ?? null;
        $this->container['geolocation_country'] = $data['geolocation_country'] ?? null;
        $this->container['geolocation_state'] = $data['geolocation_state'] ?? null;
        $this->container['language_iso_code'] = $data['language_iso_code'] ?? null;
        $this->container['merchant_id'] = $data['merchant_id'] ?? null;
        $this->container['merchant_notes'] = $data['merchant_notes'] ?? null;
        $this->container['missing_external_tracking'] = $data['missing_external_tracking'] ?? null;
        $this->container['order_id'] = $data['order_id'] ?? null;
        $this->container['page_view_count'] = $data['page_view_count'] ?? null;
        $this->container['page_views'] = $data['page_views'] ?? null;
        $this->container['preferred_language'] = $data['preferred_language'] ?? null;
        $this->container['referrer_domain'] = $data['referrer_domain'] ?? null;
        $this->container['rrweb_version'] = $data['rrweb_version'] ?? null;
        $this->container['screen_recording_uuid'] = $data['screen_recording_uuid'] ?? null;
        $this->container['signed_download_url'] = $data['signed_download_url'] ?? null;
        $this->container['start_timestamp'] = $data['start_timestamp'] ?? null;
        $this->container['storefront_oids'] = $data['storefront_oids'] ?? null;
        $this->container['storefronts'] = $data['storefronts'] ?? null;
        $this->container['tags'] = $data['tags'] ?? null;
        $this->container['time_on_site'] = $data['time_on_site'] ?? null;
        $this->container['ucacid'] = $data['ucacid'] ?? null;
        $this->container['user_agent'] = $data['user_agent'] ?? null;
        $this->container['user_agent_raw'] = $data['user_agent_raw'] ?? null;
        $this->container['user_ip'] = $data['user_ip'] ?? null;
        $this->container['user_properties'] = $data['user_properties'] ?? null;
        $this->container['utm_campaign'] = $data['utm_campaign'] ?? null;
        $this->container['utm_source'] = $data['utm_source'] ?? null;
        $this->container['visitor_first_seen'] = $data['visitor_first_seen'] ?? null;
        $this->container['visitor_number'] = $data['visitor_number'] ?? null;
        $this->container['watched'] = $data['watched'] ?? null;
        $this->container['window_height'] = $data['window_height'] ?? null;
        $this->container['window_width'] = $data['window_width'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets ad_platform
     *
     * @return \ultracart\v2\models\ScreenRecordingAdPlatform|null
     */
    public function getAdPlatform()
    {
        return $this->container['ad_platform'];
    }

    /**
     * Sets ad_platform
     *
     * @param \ultracart\v2\models\ScreenRecordingAdPlatform|null $ad_platform ad_platform
     *
     * @return self
     */
    public function setAdPlatform($ad_platform)
    {
        $this->container['ad_platform'] = $ad_platform;

        return $this;
    }

    /**
     * Gets analytics_client_oid
     *
     * @return int|null
     */
    public function getAnalyticsClientOid()
    {
        return $this->container['analytics_client_oid'];
    }

    /**
     * Sets analytics_client_oid
     *
     * @param int|null $analytics_client_oid analytics_client_oid
     *
     * @return self
     */
    public function setAnalyticsClientOid($analytics_client_oid)
    {
        $this->container['analytics_client_oid'] = $analytics_client_oid;

        return $this;
    }

    /**
     * Gets analytics_session_dts
     *
     * @return int|null
     */
    public function getAnalyticsSessionDts()
    {
        return $this->container['analytics_session_dts'];
    }

    /**
     * Sets analytics_session_dts
     *
     * @param int|null $analytics_session_dts analytics_session_dts
     *
     * @return self
     */
    public function setAnalyticsSessionDts($analytics_session_dts)
    {
        $this->container['analytics_session_dts'] = $analytics_session_dts;

        return $this;
    }

    /**
     * Gets analytics_session_oid
     *
     * @return int|null
     */
    public function getAnalyticsSessionOid()
    {
        return $this->container['analytics_session_oid'];
    }

    /**
     * Sets analytics_session_oid
     *
     * @param int|null $analytics_session_oid analytics_session_oid
     *
     * @return self
     */
    public function setAnalyticsSessionOid($analytics_session_oid)
    {
        $this->container['analytics_session_oid'] = $analytics_session_oid;

        return $this;
    }

    /**
     * Gets communications_campaign_name
     *
     * @return string|null
     */
    public function getCommunicationsCampaignName()
    {
        return $this->container['communications_campaign_name'];
    }

    /**
     * Sets communications_campaign_name
     *
     * @param string|null $communications_campaign_name Campaign Name
     *
     * @return self
     */
    public function setCommunicationsCampaignName($communications_campaign_name)
    {
        $this->container['communications_campaign_name'] = $communications_campaign_name;

        return $this;
    }

    /**
     * Gets communications_campaign_uuid
     *
     * @return string|null
     */
    public function getCommunicationsCampaignUuid()
    {
        return $this->container['communications_campaign_uuid'];
    }

    /**
     * Sets communications_campaign_uuid
     *
     * @param string|null $communications_campaign_uuid Campaign UUID
     *
     * @return self
     */
    public function setCommunicationsCampaignUuid($communications_campaign_uuid)
    {
        $this->container['communications_campaign_uuid'] = $communications_campaign_uuid;

        return $this;
    }

    /**
     * Gets communications_email_subject
     *
     * @return string|null
     */
    public function getCommunicationsEmailSubject()
    {
        return $this->container['communications_email_subject'];
    }

    /**
     * Sets communications_email_subject
     *
     * @param string|null $communications_email_subject Email subject
     *
     * @return self
     */
    public function setCommunicationsEmailSubject($communications_email_subject)
    {
        $this->container['communications_email_subject'] = $communications_email_subject;

        return $this;
    }

    /**
     * Gets communications_email_uuid
     *
     * @return string|null
     */
    public function getCommunicationsEmailUuid()
    {
        return $this->container['communications_email_uuid'];
    }

    /**
     * Sets communications_email_uuid
     *
     * @param string|null $communications_email_uuid Email UUID
     *
     * @return self
     */
    public function setCommunicationsEmailUuid($communications_email_uuid)
    {
        $this->container['communications_email_uuid'] = $communications_email_uuid;

        return $this;
    }

    /**
     * Gets communications_flow_name
     *
     * @return string|null
     */
    public function getCommunicationsFlowName()
    {
        return $this->container['communications_flow_name'];
    }

    /**
     * Sets communications_flow_name
     *
     * @param string|null $communications_flow_name Flow Name
     *
     * @return self
     */
    public function setCommunicationsFlowName($communications_flow_name)
    {
        $this->container['communications_flow_name'] = $communications_flow_name;

        return $this;
    }

    /**
     * Gets communications_flow_uuid
     *
     * @return string|null
     */
    public function getCommunicationsFlowUuid()
    {
        return $this->container['communications_flow_uuid'];
    }

    /**
     * Sets communications_flow_uuid
     *
     * @param string|null $communications_flow_uuid Flow UUID
     *
     * @return self
     */
    public function setCommunicationsFlowUuid($communications_flow_uuid)
    {
        $this->container['communications_flow_uuid'] = $communications_flow_uuid;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets email_domain
     *
     * @return string|null
     */
    public function getEmailDomain()
    {
        return $this->container['email_domain'];
    }

    /**
     * Sets email_domain
     *
     * @param string|null $email_domain email_domain
     *
     * @return self
     */
    public function setEmailDomain($email_domain)
    {
        $this->container['email_domain'] = $email_domain;

        return $this;
    }

    /**
     * Gets end_timestamp
     *
     * @return string|null
     */
    public function getEndTimestamp()
    {
        return $this->container['end_timestamp'];
    }

    /**
     * Sets end_timestamp
     *
     * @param string|null $end_timestamp Ending timestamp
     *
     * @return self
     */
    public function setEndTimestamp($end_timestamp)
    {
        $this->container['end_timestamp'] = $end_timestamp;

        return $this;
    }

    /**
     * Gets esp_customer_uuid
     *
     * @return string|null
     */
    public function getEspCustomerUuid()
    {
        return $this->container['esp_customer_uuid'];
    }

    /**
     * Sets esp_customer_uuid
     *
     * @param string|null $esp_customer_uuid esp_customer_uuid
     *
     * @return self
     */
    public function setEspCustomerUuid($esp_customer_uuid)
    {
        $this->container['esp_customer_uuid'] = $esp_customer_uuid;

        return $this;
    }

    /**
     * Gets events_gz_size
     *
     * @return int|null
     */
    public function getEventsGzSize()
    {
        return $this->container['events_gz_size'];
    }

    /**
     * Sets events_gz_size
     *
     * @param int|null $events_gz_size events_gz_size
     *
     * @return self
     */
    public function setEventsGzSize($events_gz_size)
    {
        $this->container['events_gz_size'] = $events_gz_size;

        return $this;
    }

    /**
     * Gets events_json_key
     *
     * @return string|null
     */
    public function getEventsJsonKey()
    {
        return $this->container['events_json_key'];
    }

    /**
     * Sets events_json_key
     *
     * @param string|null $events_json_key events_json_key
     *
     * @return self
     */
    public function setEventsJsonKey($events_json_key)
    {
        $this->container['events_json_key'] = $events_json_key;

        return $this;
    }

    /**
     * Gets favorite
     *
     * @return bool|null
     */
    public function getFavorite()
    {
        return $this->container['favorite'];
    }

    /**
     * Sets favorite
     *
     * @param bool|null $favorite True if the user calling the API has favorited this particular screen recording.
     *
     * @return self
     */
    public function setFavorite($favorite)
    {
        $this->container['favorite'] = $favorite;

        return $this;
    }

    /**
     * Gets favorites
     *
     * @return int[]|null
     */
    public function getFavorites()
    {
        return $this->container['favorites'];
    }

    /**
     * Sets favorites
     *
     * @param int[]|null $favorites Array of user ids that favorited this particular screen recording.
     *
     * @return self
     */
    public function setFavorites($favorites)
    {
        $this->container['favorites'] = $favorites;

        return $this;
    }

    /**
     * Gets geolocation
     *
     * @return \ultracart\v2\models\GeoPoint|null
     */
    public function getGeolocation()
    {
        return $this->container['geolocation'];
    }

    /**
     * Sets geolocation
     *
     * @param \ultracart\v2\models\GeoPoint|null $geolocation geolocation
     *
     * @return self
     */
    public function setGeolocation($geolocation)
    {
        $this->container['geolocation'] = $geolocation;

        return $this;
    }

    /**
     * Gets geolocation_country
     *
     * @return string|null
     */
    public function getGeolocationCountry()
    {
        return $this->container['geolocation_country'];
    }

    /**
     * Sets geolocation_country
     *
     * @param string|null $geolocation_country geolocation_country
     *
     * @return self
     */
    public function setGeolocationCountry($geolocation_country)
    {
        $this->container['geolocation_country'] = $geolocation_country;

        return $this;
    }

    /**
     * Gets geolocation_state
     *
     * @return string|null
     */
    public function getGeolocationState()
    {
        return $this->container['geolocation_state'];
    }

    /**
     * Sets geolocation_state
     *
     * @param string|null $geolocation_state geolocation_state
     *
     * @return self
     */
    public function setGeolocationState($geolocation_state)
    {
        $this->container['geolocation_state'] = $geolocation_state;

        return $this;
    }

    /**
     * Gets language_iso_code
     *
     * @return string|null
     */
    public function getLanguageIsoCode()
    {
        return $this->container['language_iso_code'];
    }

    /**
     * Sets language_iso_code
     *
     * @param string|null $language_iso_code Language ISO code
     *
     * @return self
     */
    public function setLanguageIsoCode($language_iso_code)
    {
        $this->container['language_iso_code'] = $language_iso_code;

        return $this;
    }

    /**
     * Gets merchant_id
     *
     * @return string|null
     */
    public function getMerchantId()
    {
        return $this->container['merchant_id'];
    }

    /**
     * Sets merchant_id
     *
     * @param string|null $merchant_id merchant_id
     *
     * @return self
     */
    public function setMerchantId($merchant_id)
    {
        $this->container['merchant_id'] = $merchant_id;

        return $this;
    }

    /**
     * Gets merchant_notes
     *
     * @return string|null
     */
    public function getMerchantNotes()
    {
        return $this->container['merchant_notes'];
    }

    /**
     * Sets merchant_notes
     *
     * @param string|null $merchant_notes merchant_notes
     *
     * @return self
     */
    public function setMerchantNotes($merchant_notes)
    {
        $this->container['merchant_notes'] = $merchant_notes;

        return $this;
    }

    /**
     * Gets missing_external_tracking
     *
     * @return bool|null
     */
    public function getMissingExternalTracking()
    {
        return $this->container['missing_external_tracking'];
    }

    /**
     * Sets missing_external_tracking
     *
     * @param bool|null $missing_external_tracking True if external page view was not tracked
     *
     * @return self
     */
    public function setMissingExternalTracking($missing_external_tracking)
    {
        $this->container['missing_external_tracking'] = $missing_external_tracking;

        return $this;
    }

    /**
     * Gets order_id
     *
     * @return string|null
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param string|null $order_id order_id
     *
     * @return self
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets page_view_count
     *
     * @return int|null
     */
    public function getPageViewCount()
    {
        return $this->container['page_view_count'];
    }

    /**
     * Sets page_view_count
     *
     * @param int|null $page_view_count page_view_count
     *
     * @return self
     */
    public function setPageViewCount($page_view_count)
    {
        $this->container['page_view_count'] = $page_view_count;

        return $this;
    }

    /**
     * Gets page_views
     *
     * @return \ultracart\v2\models\ScreenRecordingPageView[]|null
     */
    public function getPageViews()
    {
        return $this->container['page_views'];
    }

    /**
     * Sets page_views
     *
     * @param \ultracart\v2\models\ScreenRecordingPageView[]|null $page_views page_views
     *
     * @return self
     */
    public function setPageViews($page_views)
    {
        $this->container['page_views'] = $page_views;

        return $this;
    }

    /**
     * Gets preferred_language
     *
     * @return string|null
     */
    public function getPreferredLanguage()
    {
        return $this->container['preferred_language'];
    }

    /**
     * Sets preferred_language
     *
     * @param string|null $preferred_language ISO 3 Letter language code that the customer would prefer
     *
     * @return self
     */
    public function setPreferredLanguage($preferred_language)
    {
        $this->container['preferred_language'] = $preferred_language;

        return $this;
    }

    /**
     * Gets referrer_domain
     *
     * @return string|null
     */
    public function getReferrerDomain()
    {
        return $this->container['referrer_domain'];
    }

    /**
     * Sets referrer_domain
     *
     * @param string|null $referrer_domain referrer_domain
     *
     * @return self
     */
    public function setReferrerDomain($referrer_domain)
    {
        $this->container['referrer_domain'] = $referrer_domain;

        return $this;
    }

    /**
     * Gets rrweb_version
     *
     * @return string|null
     */
    public function getRrwebVersion()
    {
        return $this->container['rrweb_version'];
    }

    /**
     * Sets rrweb_version
     *
     * @param string|null $rrweb_version rrweb_version
     *
     * @return self
     */
    public function setRrwebVersion($rrweb_version)
    {
        $this->container['rrweb_version'] = $rrweb_version;

        return $this;
    }

    /**
     * Gets screen_recording_uuid
     *
     * @return string|null
     */
    public function getScreenRecordingUuid()
    {
        return $this->container['screen_recording_uuid'];
    }

    /**
     * Sets screen_recording_uuid
     *
     * @param string|null $screen_recording_uuid screen_recording_uuid
     *
     * @return self
     */
    public function setScreenRecordingUuid($screen_recording_uuid)
    {
        $this->container['screen_recording_uuid'] = $screen_recording_uuid;

        return $this;
    }

    /**
     * Gets signed_download_url
     *
     * @return string|null
     */
    public function getSignedDownloadUrl()
    {
        return $this->container['signed_download_url'];
    }

    /**
     * Sets signed_download_url
     *
     * @param string|null $signed_download_url signed_download_url
     *
     * @return self
     */
    public function setSignedDownloadUrl($signed_download_url)
    {
        $this->container['signed_download_url'] = $signed_download_url;

        return $this;
    }

    /**
     * Gets start_timestamp
     *
     * @return string|null
     */
    public function getStartTimestamp()
    {
        return $this->container['start_timestamp'];
    }

    /**
     * Sets start_timestamp
     *
     * @param string|null $start_timestamp Starting timestamp
     *
     * @return self
     */
    public function setStartTimestamp($start_timestamp)
    {
        $this->container['start_timestamp'] = $start_timestamp;

        return $this;
    }

    /**
     * Gets storefront_oids
     *
     * @return int[]|null
     */
    public function getStorefrontOids()
    {
        return $this->container['storefront_oids'];
    }

    /**
     * Sets storefront_oids
     *
     * @param int[]|null $storefront_oids storefront_oids
     *
     * @return self
     */
    public function setStorefrontOids($storefront_oids)
    {
        $this->container['storefront_oids'] = $storefront_oids;

        return $this;
    }

    /**
     * Gets storefronts
     *
     * @return \ultracart\v2\models\ScreenRecordingStoreFront[]|null
     */
    public function getStorefronts()
    {
        return $this->container['storefronts'];
    }

    /**
     * Sets storefronts
     *
     * @param \ultracart\v2\models\ScreenRecordingStoreFront[]|null $storefronts storefronts
     *
     * @return self
     */
    public function setStorefronts($storefronts)
    {
        $this->container['storefronts'] = $storefronts;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return string[]|null
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param string[]|null $tags tags
     *
     * @return self
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets time_on_site
     *
     * @return int|null
     */
    public function getTimeOnSite()
    {
        return $this->container['time_on_site'];
    }

    /**
     * Sets time_on_site
     *
     * @param int|null $time_on_site time_on_site
     *
     * @return self
     */
    public function setTimeOnSite($time_on_site)
    {
        $this->container['time_on_site'] = $time_on_site;

        return $this;
    }

    /**
     * Gets ucacid
     *
     * @return string|null
     */
    public function getUcacid()
    {
        return $this->container['ucacid'];
    }

    /**
     * Sets ucacid
     *
     * @param string|null $ucacid ucacid
     *
     * @return self
     */
    public function setUcacid($ucacid)
    {
        $this->container['ucacid'] = $ucacid;

        return $this;
    }

    /**
     * Gets user_agent
     *
     * @return \ultracart\v2\models\ScreenRecordingUserAgent|null
     */
    public function getUserAgent()
    {
        return $this->container['user_agent'];
    }

    /**
     * Sets user_agent
     *
     * @param \ultracart\v2\models\ScreenRecordingUserAgent|null $user_agent user_agent
     *
     * @return self
     */
    public function setUserAgent($user_agent)
    {
        $this->container['user_agent'] = $user_agent;

        return $this;
    }

    /**
     * Gets user_agent_raw
     *
     * @return string|null
     */
    public function getUserAgentRaw()
    {
        return $this->container['user_agent_raw'];
    }

    /**
     * Sets user_agent_raw
     *
     * @param string|null $user_agent_raw user_agent_raw
     *
     * @return self
     */
    public function setUserAgentRaw($user_agent_raw)
    {
        $this->container['user_agent_raw'] = $user_agent_raw;

        return $this;
    }

    /**
     * Gets user_ip
     *
     * @return string|null
     */
    public function getUserIp()
    {
        return $this->container['user_ip'];
    }

    /**
     * Sets user_ip
     *
     * @param string|null $user_ip user_ip
     *
     * @return self
     */
    public function setUserIp($user_ip)
    {
        $this->container['user_ip'] = $user_ip;

        return $this;
    }

    /**
     * Gets user_properties
     *
     * @return \ultracart\v2\models\ScreenRecordingUserProperty[]|null
     */
    public function getUserProperties()
    {
        return $this->container['user_properties'];
    }

    /**
     * Sets user_properties
     *
     * @param \ultracart\v2\models\ScreenRecordingUserProperty[]|null $user_properties user_properties
     *
     * @return self
     */
    public function setUserProperties($user_properties)
    {
        $this->container['user_properties'] = $user_properties;

        return $this;
    }

    /**
     * Gets utm_campaign
     *
     * @return string|null
     */
    public function getUtmCampaign()
    {
        return $this->container['utm_campaign'];
    }

    /**
     * Sets utm_campaign
     *
     * @param string|null $utm_campaign UTM Campaign
     *
     * @return self
     */
    public function setUtmCampaign($utm_campaign)
    {
        $this->container['utm_campaign'] = $utm_campaign;

        return $this;
    }

    /**
     * Gets utm_source
     *
     * @return string|null
     */
    public function getUtmSource()
    {
        return $this->container['utm_source'];
    }

    /**
     * Sets utm_source
     *
     * @param string|null $utm_source UTM Source
     *
     * @return self
     */
    public function setUtmSource($utm_source)
    {
        $this->container['utm_source'] = $utm_source;

        return $this;
    }

    /**
     * Gets visitor_first_seen
     *
     * @return string|null
     */
    public function getVisitorFirstSeen()
    {
        return $this->container['visitor_first_seen'];
    }

    /**
     * Sets visitor_first_seen
     *
     * @param string|null $visitor_first_seen Timestamp this visitor was first seen
     *
     * @return self
     */
    public function setVisitorFirstSeen($visitor_first_seen)
    {
        $this->container['visitor_first_seen'] = $visitor_first_seen;

        return $this;
    }

    /**
     * Gets visitor_number
     *
     * @return int|null
     */
    public function getVisitorNumber()
    {
        return $this->container['visitor_number'];
    }

    /**
     * Sets visitor_number
     *
     * @param int|null $visitor_number visitor_number
     *
     * @return self
     */
    public function setVisitorNumber($visitor_number)
    {
        $this->container['visitor_number'] = $visitor_number;

        return $this;
    }

    /**
     * Gets watched
     *
     * @return bool|null
     */
    public function getWatched()
    {
        return $this->container['watched'];
    }

    /**
     * Sets watched
     *
     * @param bool|null $watched watched
     *
     * @return self
     */
    public function setWatched($watched)
    {
        $this->container['watched'] = $watched;

        return $this;
    }

    /**
     * Gets window_height
     *
     * @return int|null
     */
    public function getWindowHeight()
    {
        return $this->container['window_height'];
    }

    /**
     * Sets window_height
     *
     * @param int|null $window_height window_height
     *
     * @return self
     */
    public function setWindowHeight($window_height)
    {
        $this->container['window_height'] = $window_height;

        return $this;
    }

    /**
     * Gets window_width
     *
     * @return int|null
     */
    public function getWindowWidth()
    {
        return $this->container['window_width'];
    }

    /**
     * Sets window_width
     *
     * @param int|null $window_width window_width
     *
     * @return self
     */
    public function setWindowWidth($window_width)
    {
        $this->container['window_width'] = $window_width;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


