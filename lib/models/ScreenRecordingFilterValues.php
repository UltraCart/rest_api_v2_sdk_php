<?php
/**
 * ScreenRecordingFilterValues
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace ultracart\v2\models;

use \ArrayAccess;
use \ultracart\v2\ObjectSerializer;

/**
 * ScreenRecordingFilterValues Class Doc Comment
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ScreenRecordingFilterValues implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ScreenRecordingFilterValues';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'communications_campaign_names' => 'string[]',
        'communications_email_subjects' => 'string[]',
        'communications_flow_names' => 'string[]',
        'email_domains' => 'string[]',
        'geolocation_countries' => 'string[]',
        'geolocation_states' => 'string[]',
        'language_iso_codes' => 'string[]',
        'max_values' => 'int',
        'page_views' => '\ultracart\v2\models\ScreenRecordingFilterValuesPageView[]',
        'preferred_languages' => 'string[]',
        'referrer_domains' => 'string[]',
        'time_on_site_max' => 'int',
        'time_on_site_min' => 'int',
        'urls' => 'string[]',
        'user_agent_device_names' => 'string[]',
        'user_agent_device_os_names' => 'string[]',
        'user_agent_device_os_versions' => 'string[]',
        'user_agent_names' => 'string[]',
        'user_agent_originals' => 'string[]',
        'utm_campaigns' => 'string[]',
        'utm_sources' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'communications_campaign_names' => null,
        'communications_email_subjects' => null,
        'communications_flow_names' => null,
        'email_domains' => null,
        'geolocation_countries' => null,
        'geolocation_states' => null,
        'language_iso_codes' => null,
        'max_values' => 'int32',
        'page_views' => null,
        'preferred_languages' => null,
        'referrer_domains' => null,
        'time_on_site_max' => 'int32',
        'time_on_site_min' => 'int32',
        'urls' => null,
        'user_agent_device_names' => null,
        'user_agent_device_os_names' => null,
        'user_agent_device_os_versions' => null,
        'user_agent_names' => null,
        'user_agent_originals' => null,
        'utm_campaigns' => null,
        'utm_sources' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'communications_campaign_names' => 'communications_campaign_names',
        'communications_email_subjects' => 'communications_email_subjects',
        'communications_flow_names' => 'communications_flow_names',
        'email_domains' => 'email_domains',
        'geolocation_countries' => 'geolocation_countries',
        'geolocation_states' => 'geolocation_states',
        'language_iso_codes' => 'language_iso_codes',
        'max_values' => 'max_values',
        'page_views' => 'page_views',
        'preferred_languages' => 'preferred_languages',
        'referrer_domains' => 'referrer_domains',
        'time_on_site_max' => 'time_on_site_max',
        'time_on_site_min' => 'time_on_site_min',
        'urls' => 'urls',
        'user_agent_device_names' => 'user_agent_device_names',
        'user_agent_device_os_names' => 'user_agent_device_os_names',
        'user_agent_device_os_versions' => 'user_agent_device_os_versions',
        'user_agent_names' => 'user_agent_names',
        'user_agent_originals' => 'user_agent_originals',
        'utm_campaigns' => 'utm_campaigns',
        'utm_sources' => 'utm_sources'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'communications_campaign_names' => 'setCommunicationsCampaignNames',
        'communications_email_subjects' => 'setCommunicationsEmailSubjects',
        'communications_flow_names' => 'setCommunicationsFlowNames',
        'email_domains' => 'setEmailDomains',
        'geolocation_countries' => 'setGeolocationCountries',
        'geolocation_states' => 'setGeolocationStates',
        'language_iso_codes' => 'setLanguageIsoCodes',
        'max_values' => 'setMaxValues',
        'page_views' => 'setPageViews',
        'preferred_languages' => 'setPreferredLanguages',
        'referrer_domains' => 'setReferrerDomains',
        'time_on_site_max' => 'setTimeOnSiteMax',
        'time_on_site_min' => 'setTimeOnSiteMin',
        'urls' => 'setUrls',
        'user_agent_device_names' => 'setUserAgentDeviceNames',
        'user_agent_device_os_names' => 'setUserAgentDeviceOsNames',
        'user_agent_device_os_versions' => 'setUserAgentDeviceOsVersions',
        'user_agent_names' => 'setUserAgentNames',
        'user_agent_originals' => 'setUserAgentOriginals',
        'utm_campaigns' => 'setUtmCampaigns',
        'utm_sources' => 'setUtmSources'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'communications_campaign_names' => 'getCommunicationsCampaignNames',
        'communications_email_subjects' => 'getCommunicationsEmailSubjects',
        'communications_flow_names' => 'getCommunicationsFlowNames',
        'email_domains' => 'getEmailDomains',
        'geolocation_countries' => 'getGeolocationCountries',
        'geolocation_states' => 'getGeolocationStates',
        'language_iso_codes' => 'getLanguageIsoCodes',
        'max_values' => 'getMaxValues',
        'page_views' => 'getPageViews',
        'preferred_languages' => 'getPreferredLanguages',
        'referrer_domains' => 'getReferrerDomains',
        'time_on_site_max' => 'getTimeOnSiteMax',
        'time_on_site_min' => 'getTimeOnSiteMin',
        'urls' => 'getUrls',
        'user_agent_device_names' => 'getUserAgentDeviceNames',
        'user_agent_device_os_names' => 'getUserAgentDeviceOsNames',
        'user_agent_device_os_versions' => 'getUserAgentDeviceOsVersions',
        'user_agent_names' => 'getUserAgentNames',
        'user_agent_originals' => 'getUserAgentOriginals',
        'utm_campaigns' => 'getUtmCampaigns',
        'utm_sources' => 'getUtmSources'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['communications_campaign_names'] = $data['communications_campaign_names'] ?? null;
        $this->container['communications_email_subjects'] = $data['communications_email_subjects'] ?? null;
        $this->container['communications_flow_names'] = $data['communications_flow_names'] ?? null;
        $this->container['email_domains'] = $data['email_domains'] ?? null;
        $this->container['geolocation_countries'] = $data['geolocation_countries'] ?? null;
        $this->container['geolocation_states'] = $data['geolocation_states'] ?? null;
        $this->container['language_iso_codes'] = $data['language_iso_codes'] ?? null;
        $this->container['max_values'] = $data['max_values'] ?? null;
        $this->container['page_views'] = $data['page_views'] ?? null;
        $this->container['preferred_languages'] = $data['preferred_languages'] ?? null;
        $this->container['referrer_domains'] = $data['referrer_domains'] ?? null;
        $this->container['time_on_site_max'] = $data['time_on_site_max'] ?? null;
        $this->container['time_on_site_min'] = $data['time_on_site_min'] ?? null;
        $this->container['urls'] = $data['urls'] ?? null;
        $this->container['user_agent_device_names'] = $data['user_agent_device_names'] ?? null;
        $this->container['user_agent_device_os_names'] = $data['user_agent_device_os_names'] ?? null;
        $this->container['user_agent_device_os_versions'] = $data['user_agent_device_os_versions'] ?? null;
        $this->container['user_agent_names'] = $data['user_agent_names'] ?? null;
        $this->container['user_agent_originals'] = $data['user_agent_originals'] ?? null;
        $this->container['utm_campaigns'] = $data['utm_campaigns'] ?? null;
        $this->container['utm_sources'] = $data['utm_sources'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets communications_campaign_names
     *
     * @return string[]|null
     */
    public function getCommunicationsCampaignNames()
    {
        return $this->container['communications_campaign_names'];
    }

    /**
     * Sets communications_campaign_names
     *
     * @param string[]|null $communications_campaign_names communications_campaign_names
     *
     * @return self
     */
    public function setCommunicationsCampaignNames($communications_campaign_names)
    {
        $this->container['communications_campaign_names'] = $communications_campaign_names;

        return $this;
    }

    /**
     * Gets communications_email_subjects
     *
     * @return string[]|null
     */
    public function getCommunicationsEmailSubjects()
    {
        return $this->container['communications_email_subjects'];
    }

    /**
     * Sets communications_email_subjects
     *
     * @param string[]|null $communications_email_subjects communications_email_subjects
     *
     * @return self
     */
    public function setCommunicationsEmailSubjects($communications_email_subjects)
    {
        $this->container['communications_email_subjects'] = $communications_email_subjects;

        return $this;
    }

    /**
     * Gets communications_flow_names
     *
     * @return string[]|null
     */
    public function getCommunicationsFlowNames()
    {
        return $this->container['communications_flow_names'];
    }

    /**
     * Sets communications_flow_names
     *
     * @param string[]|null $communications_flow_names communications_flow_names
     *
     * @return self
     */
    public function setCommunicationsFlowNames($communications_flow_names)
    {
        $this->container['communications_flow_names'] = $communications_flow_names;

        return $this;
    }

    /**
     * Gets email_domains
     *
     * @return string[]|null
     */
    public function getEmailDomains()
    {
        return $this->container['email_domains'];
    }

    /**
     * Sets email_domains
     *
     * @param string[]|null $email_domains email_domains
     *
     * @return self
     */
    public function setEmailDomains($email_domains)
    {
        $this->container['email_domains'] = $email_domains;

        return $this;
    }

    /**
     * Gets geolocation_countries
     *
     * @return string[]|null
     */
    public function getGeolocationCountries()
    {
        return $this->container['geolocation_countries'];
    }

    /**
     * Sets geolocation_countries
     *
     * @param string[]|null $geolocation_countries geolocation_countries
     *
     * @return self
     */
    public function setGeolocationCountries($geolocation_countries)
    {
        $this->container['geolocation_countries'] = $geolocation_countries;

        return $this;
    }

    /**
     * Gets geolocation_states
     *
     * @return string[]|null
     */
    public function getGeolocationStates()
    {
        return $this->container['geolocation_states'];
    }

    /**
     * Sets geolocation_states
     *
     * @param string[]|null $geolocation_states geolocation_states
     *
     * @return self
     */
    public function setGeolocationStates($geolocation_states)
    {
        $this->container['geolocation_states'] = $geolocation_states;

        return $this;
    }

    /**
     * Gets language_iso_codes
     *
     * @return string[]|null
     */
    public function getLanguageIsoCodes()
    {
        return $this->container['language_iso_codes'];
    }

    /**
     * Sets language_iso_codes
     *
     * @param string[]|null $language_iso_codes language_iso_codes
     *
     * @return self
     */
    public function setLanguageIsoCodes($language_iso_codes)
    {
        $this->container['language_iso_codes'] = $language_iso_codes;

        return $this;
    }

    /**
     * Gets max_values
     *
     * @return int|null
     */
    public function getMaxValues()
    {
        return $this->container['max_values'];
    }

    /**
     * Sets max_values
     *
     * @param int|null $max_values max_values
     *
     * @return self
     */
    public function setMaxValues($max_values)
    {
        $this->container['max_values'] = $max_values;

        return $this;
    }

    /**
     * Gets page_views
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterValuesPageView[]|null
     */
    public function getPageViews()
    {
        return $this->container['page_views'];
    }

    /**
     * Sets page_views
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterValuesPageView[]|null $page_views page_views
     *
     * @return self
     */
    public function setPageViews($page_views)
    {
        $this->container['page_views'] = $page_views;

        return $this;
    }

    /**
     * Gets preferred_languages
     *
     * @return string[]|null
     */
    public function getPreferredLanguages()
    {
        return $this->container['preferred_languages'];
    }

    /**
     * Sets preferred_languages
     *
     * @param string[]|null $preferred_languages preferred_languages
     *
     * @return self
     */
    public function setPreferredLanguages($preferred_languages)
    {
        $this->container['preferred_languages'] = $preferred_languages;

        return $this;
    }

    /**
     * Gets referrer_domains
     *
     * @return string[]|null
     */
    public function getReferrerDomains()
    {
        return $this->container['referrer_domains'];
    }

    /**
     * Sets referrer_domains
     *
     * @param string[]|null $referrer_domains referrer_domains
     *
     * @return self
     */
    public function setReferrerDomains($referrer_domains)
    {
        $this->container['referrer_domains'] = $referrer_domains;

        return $this;
    }

    /**
     * Gets time_on_site_max
     *
     * @return int|null
     */
    public function getTimeOnSiteMax()
    {
        return $this->container['time_on_site_max'];
    }

    /**
     * Sets time_on_site_max
     *
     * @param int|null $time_on_site_max time_on_site_max
     *
     * @return self
     */
    public function setTimeOnSiteMax($time_on_site_max)
    {
        $this->container['time_on_site_max'] = $time_on_site_max;

        return $this;
    }

    /**
     * Gets time_on_site_min
     *
     * @return int|null
     */
    public function getTimeOnSiteMin()
    {
        return $this->container['time_on_site_min'];
    }

    /**
     * Sets time_on_site_min
     *
     * @param int|null $time_on_site_min time_on_site_min
     *
     * @return self
     */
    public function setTimeOnSiteMin($time_on_site_min)
    {
        $this->container['time_on_site_min'] = $time_on_site_min;

        return $this;
    }

    /**
     * Gets urls
     *
     * @return string[]|null
     */
    public function getUrls()
    {
        return $this->container['urls'];
    }

    /**
     * Sets urls
     *
     * @param string[]|null $urls urls
     *
     * @return self
     */
    public function setUrls($urls)
    {
        $this->container['urls'] = $urls;

        return $this;
    }

    /**
     * Gets user_agent_device_names
     *
     * @return string[]|null
     */
    public function getUserAgentDeviceNames()
    {
        return $this->container['user_agent_device_names'];
    }

    /**
     * Sets user_agent_device_names
     *
     * @param string[]|null $user_agent_device_names user_agent_device_names
     *
     * @return self
     */
    public function setUserAgentDeviceNames($user_agent_device_names)
    {
        $this->container['user_agent_device_names'] = $user_agent_device_names;

        return $this;
    }

    /**
     * Gets user_agent_device_os_names
     *
     * @return string[]|null
     */
    public function getUserAgentDeviceOsNames()
    {
        return $this->container['user_agent_device_os_names'];
    }

    /**
     * Sets user_agent_device_os_names
     *
     * @param string[]|null $user_agent_device_os_names user_agent_device_os_names
     *
     * @return self
     */
    public function setUserAgentDeviceOsNames($user_agent_device_os_names)
    {
        $this->container['user_agent_device_os_names'] = $user_agent_device_os_names;

        return $this;
    }

    /**
     * Gets user_agent_device_os_versions
     *
     * @return string[]|null
     */
    public function getUserAgentDeviceOsVersions()
    {
        return $this->container['user_agent_device_os_versions'];
    }

    /**
     * Sets user_agent_device_os_versions
     *
     * @param string[]|null $user_agent_device_os_versions user_agent_device_os_versions
     *
     * @return self
     */
    public function setUserAgentDeviceOsVersions($user_agent_device_os_versions)
    {
        $this->container['user_agent_device_os_versions'] = $user_agent_device_os_versions;

        return $this;
    }

    /**
     * Gets user_agent_names
     *
     * @return string[]|null
     */
    public function getUserAgentNames()
    {
        return $this->container['user_agent_names'];
    }

    /**
     * Sets user_agent_names
     *
     * @param string[]|null $user_agent_names user_agent_names
     *
     * @return self
     */
    public function setUserAgentNames($user_agent_names)
    {
        $this->container['user_agent_names'] = $user_agent_names;

        return $this;
    }

    /**
     * Gets user_agent_originals
     *
     * @return string[]|null
     */
    public function getUserAgentOriginals()
    {
        return $this->container['user_agent_originals'];
    }

    /**
     * Sets user_agent_originals
     *
     * @param string[]|null $user_agent_originals user_agent_originals
     *
     * @return self
     */
    public function setUserAgentOriginals($user_agent_originals)
    {
        $this->container['user_agent_originals'] = $user_agent_originals;

        return $this;
    }

    /**
     * Gets utm_campaigns
     *
     * @return string[]|null
     */
    public function getUtmCampaigns()
    {
        return $this->container['utm_campaigns'];
    }

    /**
     * Sets utm_campaigns
     *
     * @param string[]|null $utm_campaigns utm_campaigns
     *
     * @return self
     */
    public function setUtmCampaigns($utm_campaigns)
    {
        $this->container['utm_campaigns'] = $utm_campaigns;

        return $this;
    }

    /**
     * Gets utm_sources
     *
     * @return string[]|null
     */
    public function getUtmSources()
    {
        return $this->container['utm_sources'];
    }

    /**
     * Sets utm_sources
     *
     * @param string[]|null $utm_sources utm_sources
     *
     * @return self
     */
    public function setUtmSources($utm_sources)
    {
        $this->container['utm_sources'] = $utm_sources;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


