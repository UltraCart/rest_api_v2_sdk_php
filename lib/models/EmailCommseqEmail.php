<?php
/**
 * EmailCommseqEmail
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace ultracart\v2\models;

use \ArrayAccess;
use \ultracart\v2\ObjectSerializer;

/**
 * EmailCommseqEmail Class Doc Comment
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EmailCommseqEmail implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'EmailCommseqEmail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'deleted' => 'bool',
        'edited_by_user' => 'string',
        'email_communication_sequence_email_uuid' => 'string',
        'email_communication_sequence_uuid' => 'string',
        'email_container_cjson' => 'string',
        'email_container_cjson_last_modified_dts' => 'string',
        'email_template_vm_path' => 'string',
        'external_generation' => 'bool',
        'external_generation_authentication' => 'string',
        'external_generation_basic_password' => 'string',
        'external_generation_basic_username' => 'string',
        'external_generation_header_name' => 'string',
        'external_generation_header_value' => 'string',
        'external_generation_id' => 'string',
        'external_generation_url' => 'string',
        'filter_profile_equation_json' => 'string',
        'individually_render' => 'bool',
        'library_item_oid' => 'int',
        'magic_link' => 'bool',
        'merchant_id' => 'string',
        'pending_review' => 'bool',
        'preview_text' => 'string',
        'rejected' => 'bool',
        'requires_review' => 'bool',
        'screenshot_large_full_url' => 'string',
        'screenshot_large_viewport_url' => 'string',
        'screenshot_small_full_url' => 'string',
        'screenshot_small_viewport_url' => 'string',
        'smart_sending' => 'bool',
        'storefront_oid' => 'int',
        'subject' => 'string',
        'suspended_for_spam' => 'bool',
        'transactional_email' => 'bool',
        'version' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'deleted' => null,
        'edited_by_user' => null,
        'email_communication_sequence_email_uuid' => null,
        'email_communication_sequence_uuid' => null,
        'email_container_cjson' => null,
        'email_container_cjson_last_modified_dts' => 'dateTime',
        'email_template_vm_path' => null,
        'external_generation' => null,
        'external_generation_authentication' => null,
        'external_generation_basic_password' => null,
        'external_generation_basic_username' => null,
        'external_generation_header_name' => null,
        'external_generation_header_value' => null,
        'external_generation_id' => null,
        'external_generation_url' => null,
        'filter_profile_equation_json' => null,
        'individually_render' => null,
        'library_item_oid' => 'int32',
        'magic_link' => null,
        'merchant_id' => null,
        'pending_review' => null,
        'preview_text' => null,
        'rejected' => null,
        'requires_review' => null,
        'screenshot_large_full_url' => null,
        'screenshot_large_viewport_url' => null,
        'screenshot_small_full_url' => null,
        'screenshot_small_viewport_url' => null,
        'smart_sending' => null,
        'storefront_oid' => 'int32',
        'subject' => null,
        'suspended_for_spam' => null,
        'transactional_email' => null,
        'version' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'deleted' => 'deleted',
        'edited_by_user' => 'edited_by_user',
        'email_communication_sequence_email_uuid' => 'email_communication_sequence_email_uuid',
        'email_communication_sequence_uuid' => 'email_communication_sequence_uuid',
        'email_container_cjson' => 'email_container_cjson',
        'email_container_cjson_last_modified_dts' => 'email_container_cjson_last_modified_dts',
        'email_template_vm_path' => 'email_template_vm_path',
        'external_generation' => 'external_generation',
        'external_generation_authentication' => 'external_generation_authentication',
        'external_generation_basic_password' => 'external_generation_basic_password',
        'external_generation_basic_username' => 'external_generation_basic_username',
        'external_generation_header_name' => 'external_generation_header_name',
        'external_generation_header_value' => 'external_generation_header_value',
        'external_generation_id' => 'external_generation_id',
        'external_generation_url' => 'external_generation_url',
        'filter_profile_equation_json' => 'filter_profile_equation_json',
        'individually_render' => 'individually_render',
        'library_item_oid' => 'library_item_oid',
        'magic_link' => 'magic_link',
        'merchant_id' => 'merchant_id',
        'pending_review' => 'pending_review',
        'preview_text' => 'preview_text',
        'rejected' => 'rejected',
        'requires_review' => 'requires_review',
        'screenshot_large_full_url' => 'screenshot_large_full_url',
        'screenshot_large_viewport_url' => 'screenshot_large_viewport_url',
        'screenshot_small_full_url' => 'screenshot_small_full_url',
        'screenshot_small_viewport_url' => 'screenshot_small_viewport_url',
        'smart_sending' => 'smart_sending',
        'storefront_oid' => 'storefront_oid',
        'subject' => 'subject',
        'suspended_for_spam' => 'suspended_for_spam',
        'transactional_email' => 'transactional_email',
        'version' => 'version'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'deleted' => 'setDeleted',
        'edited_by_user' => 'setEditedByUser',
        'email_communication_sequence_email_uuid' => 'setEmailCommunicationSequenceEmailUuid',
        'email_communication_sequence_uuid' => 'setEmailCommunicationSequenceUuid',
        'email_container_cjson' => 'setEmailContainerCjson',
        'email_container_cjson_last_modified_dts' => 'setEmailContainerCjsonLastModifiedDts',
        'email_template_vm_path' => 'setEmailTemplateVmPath',
        'external_generation' => 'setExternalGeneration',
        'external_generation_authentication' => 'setExternalGenerationAuthentication',
        'external_generation_basic_password' => 'setExternalGenerationBasicPassword',
        'external_generation_basic_username' => 'setExternalGenerationBasicUsername',
        'external_generation_header_name' => 'setExternalGenerationHeaderName',
        'external_generation_header_value' => 'setExternalGenerationHeaderValue',
        'external_generation_id' => 'setExternalGenerationId',
        'external_generation_url' => 'setExternalGenerationUrl',
        'filter_profile_equation_json' => 'setFilterProfileEquationJson',
        'individually_render' => 'setIndividuallyRender',
        'library_item_oid' => 'setLibraryItemOid',
        'magic_link' => 'setMagicLink',
        'merchant_id' => 'setMerchantId',
        'pending_review' => 'setPendingReview',
        'preview_text' => 'setPreviewText',
        'rejected' => 'setRejected',
        'requires_review' => 'setRequiresReview',
        'screenshot_large_full_url' => 'setScreenshotLargeFullUrl',
        'screenshot_large_viewport_url' => 'setScreenshotLargeViewportUrl',
        'screenshot_small_full_url' => 'setScreenshotSmallFullUrl',
        'screenshot_small_viewport_url' => 'setScreenshotSmallViewportUrl',
        'smart_sending' => 'setSmartSending',
        'storefront_oid' => 'setStorefrontOid',
        'subject' => 'setSubject',
        'suspended_for_spam' => 'setSuspendedForSpam',
        'transactional_email' => 'setTransactionalEmail',
        'version' => 'setVersion'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'deleted' => 'getDeleted',
        'edited_by_user' => 'getEditedByUser',
        'email_communication_sequence_email_uuid' => 'getEmailCommunicationSequenceEmailUuid',
        'email_communication_sequence_uuid' => 'getEmailCommunicationSequenceUuid',
        'email_container_cjson' => 'getEmailContainerCjson',
        'email_container_cjson_last_modified_dts' => 'getEmailContainerCjsonLastModifiedDts',
        'email_template_vm_path' => 'getEmailTemplateVmPath',
        'external_generation' => 'getExternalGeneration',
        'external_generation_authentication' => 'getExternalGenerationAuthentication',
        'external_generation_basic_password' => 'getExternalGenerationBasicPassword',
        'external_generation_basic_username' => 'getExternalGenerationBasicUsername',
        'external_generation_header_name' => 'getExternalGenerationHeaderName',
        'external_generation_header_value' => 'getExternalGenerationHeaderValue',
        'external_generation_id' => 'getExternalGenerationId',
        'external_generation_url' => 'getExternalGenerationUrl',
        'filter_profile_equation_json' => 'getFilterProfileEquationJson',
        'individually_render' => 'getIndividuallyRender',
        'library_item_oid' => 'getLibraryItemOid',
        'magic_link' => 'getMagicLink',
        'merchant_id' => 'getMerchantId',
        'pending_review' => 'getPendingReview',
        'preview_text' => 'getPreviewText',
        'rejected' => 'getRejected',
        'requires_review' => 'getRequiresReview',
        'screenshot_large_full_url' => 'getScreenshotLargeFullUrl',
        'screenshot_large_viewport_url' => 'getScreenshotLargeViewportUrl',
        'screenshot_small_full_url' => 'getScreenshotSmallFullUrl',
        'screenshot_small_viewport_url' => 'getScreenshotSmallViewportUrl',
        'smart_sending' => 'getSmartSending',
        'storefront_oid' => 'getStorefrontOid',
        'subject' => 'getSubject',
        'suspended_for_spam' => 'getSuspendedForSpam',
        'transactional_email' => 'getTransactionalEmail',
        'version' => 'getVersion'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['deleted'] = $data['deleted'] ?? null;
        $this->container['edited_by_user'] = $data['edited_by_user'] ?? null;
        $this->container['email_communication_sequence_email_uuid'] = $data['email_communication_sequence_email_uuid'] ?? null;
        $this->container['email_communication_sequence_uuid'] = $data['email_communication_sequence_uuid'] ?? null;
        $this->container['email_container_cjson'] = $data['email_container_cjson'] ?? null;
        $this->container['email_container_cjson_last_modified_dts'] = $data['email_container_cjson_last_modified_dts'] ?? null;
        $this->container['email_template_vm_path'] = $data['email_template_vm_path'] ?? null;
        $this->container['external_generation'] = $data['external_generation'] ?? null;
        $this->container['external_generation_authentication'] = $data['external_generation_authentication'] ?? null;
        $this->container['external_generation_basic_password'] = $data['external_generation_basic_password'] ?? null;
        $this->container['external_generation_basic_username'] = $data['external_generation_basic_username'] ?? null;
        $this->container['external_generation_header_name'] = $data['external_generation_header_name'] ?? null;
        $this->container['external_generation_header_value'] = $data['external_generation_header_value'] ?? null;
        $this->container['external_generation_id'] = $data['external_generation_id'] ?? null;
        $this->container['external_generation_url'] = $data['external_generation_url'] ?? null;
        $this->container['filter_profile_equation_json'] = $data['filter_profile_equation_json'] ?? null;
        $this->container['individually_render'] = $data['individually_render'] ?? null;
        $this->container['library_item_oid'] = $data['library_item_oid'] ?? null;
        $this->container['magic_link'] = $data['magic_link'] ?? null;
        $this->container['merchant_id'] = $data['merchant_id'] ?? null;
        $this->container['pending_review'] = $data['pending_review'] ?? null;
        $this->container['preview_text'] = $data['preview_text'] ?? null;
        $this->container['rejected'] = $data['rejected'] ?? null;
        $this->container['requires_review'] = $data['requires_review'] ?? null;
        $this->container['screenshot_large_full_url'] = $data['screenshot_large_full_url'] ?? null;
        $this->container['screenshot_large_viewport_url'] = $data['screenshot_large_viewport_url'] ?? null;
        $this->container['screenshot_small_full_url'] = $data['screenshot_small_full_url'] ?? null;
        $this->container['screenshot_small_viewport_url'] = $data['screenshot_small_viewport_url'] ?? null;
        $this->container['smart_sending'] = $data['smart_sending'] ?? null;
        $this->container['storefront_oid'] = $data['storefront_oid'] ?? null;
        $this->container['subject'] = $data['subject'] ?? null;
        $this->container['suspended_for_spam'] = $data['suspended_for_spam'] ?? null;
        $this->container['transactional_email'] = $data['transactional_email'] ?? null;
        $this->container['version'] = $data['version'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets deleted
     *
     * @return bool|null
     */
    public function getDeleted()
    {
        return $this->container['deleted'];
    }

    /**
     * Sets deleted
     *
     * @param bool|null $deleted Deleted
     *
     * @return self
     */
    public function setDeleted($deleted)
    {
        $this->container['deleted'] = $deleted;

        return $this;
    }

    /**
     * Gets edited_by_user
     *
     * @return string|null
     */
    public function getEditedByUser()
    {
        return $this->container['edited_by_user'];
    }

    /**
     * Sets edited_by_user
     *
     * @param string|null $edited_by_user Edited by user
     *
     * @return self
     */
    public function setEditedByUser($edited_by_user)
    {
        $this->container['edited_by_user'] = $edited_by_user;

        return $this;
    }

    /**
     * Gets email_communication_sequence_email_uuid
     *
     * @return string|null
     */
    public function getEmailCommunicationSequenceEmailUuid()
    {
        return $this->container['email_communication_sequence_email_uuid'];
    }

    /**
     * Sets email_communication_sequence_email_uuid
     *
     * @param string|null $email_communication_sequence_email_uuid Email communication sequence email uuid
     *
     * @return self
     */
    public function setEmailCommunicationSequenceEmailUuid($email_communication_sequence_email_uuid)
    {
        $this->container['email_communication_sequence_email_uuid'] = $email_communication_sequence_email_uuid;

        return $this;
    }

    /**
     * Gets email_communication_sequence_uuid
     *
     * @return string|null
     */
    public function getEmailCommunicationSequenceUuid()
    {
        return $this->container['email_communication_sequence_uuid'];
    }

    /**
     * Sets email_communication_sequence_uuid
     *
     * @param string|null $email_communication_sequence_uuid Email commseq UUID
     *
     * @return self
     */
    public function setEmailCommunicationSequenceUuid($email_communication_sequence_uuid)
    {
        $this->container['email_communication_sequence_uuid'] = $email_communication_sequence_uuid;

        return $this;
    }

    /**
     * Gets email_container_cjson
     *
     * @return string|null
     */
    public function getEmailContainerCjson()
    {
        return $this->container['email_container_cjson'];
    }

    /**
     * Sets email_container_cjson
     *
     * @param string|null $email_container_cjson Email container cjson
     *
     * @return self
     */
    public function setEmailContainerCjson($email_container_cjson)
    {
        $this->container['email_container_cjson'] = $email_container_cjson;

        return $this;
    }

    /**
     * Gets email_container_cjson_last_modified_dts
     *
     * @return string|null
     */
    public function getEmailContainerCjsonLastModifiedDts()
    {
        return $this->container['email_container_cjson_last_modified_dts'];
    }

    /**
     * Sets email_container_cjson_last_modified_dts
     *
     * @param string|null $email_container_cjson_last_modified_dts Timestamp the last time the container was modified.
     *
     * @return self
     */
    public function setEmailContainerCjsonLastModifiedDts($email_container_cjson_last_modified_dts)
    {
        $this->container['email_container_cjson_last_modified_dts'] = $email_container_cjson_last_modified_dts;

        return $this;
    }

    /**
     * Gets email_template_vm_path
     *
     * @return string|null
     */
    public function getEmailTemplateVmPath()
    {
        return $this->container['email_template_vm_path'];
    }

    /**
     * Sets email_template_vm_path
     *
     * @param string|null $email_template_vm_path Email template virtual path
     *
     * @return self
     */
    public function setEmailTemplateVmPath($email_template_vm_path)
    {
        $this->container['email_template_vm_path'] = $email_template_vm_path;

        return $this;
    }

    /**
     * Gets external_generation
     *
     * @return bool|null
     */
    public function getExternalGeneration()
    {
        return $this->container['external_generation'];
    }

    /**
     * Sets external_generation
     *
     * @param bool|null $external_generation external_generation
     *
     * @return self
     */
    public function setExternalGeneration($external_generation)
    {
        $this->container['external_generation'] = $external_generation;

        return $this;
    }

    /**
     * Gets external_generation_authentication
     *
     * @return string|null
     */
    public function getExternalGenerationAuthentication()
    {
        return $this->container['external_generation_authentication'];
    }

    /**
     * Sets external_generation_authentication
     *
     * @param string|null $external_generation_authentication external_generation_authentication
     *
     * @return self
     */
    public function setExternalGenerationAuthentication($external_generation_authentication)
    {
        $this->container['external_generation_authentication'] = $external_generation_authentication;

        return $this;
    }

    /**
     * Gets external_generation_basic_password
     *
     * @return string|null
     */
    public function getExternalGenerationBasicPassword()
    {
        return $this->container['external_generation_basic_password'];
    }

    /**
     * Sets external_generation_basic_password
     *
     * @param string|null $external_generation_basic_password external_generation_basic_password
     *
     * @return self
     */
    public function setExternalGenerationBasicPassword($external_generation_basic_password)
    {
        $this->container['external_generation_basic_password'] = $external_generation_basic_password;

        return $this;
    }

    /**
     * Gets external_generation_basic_username
     *
     * @return string|null
     */
    public function getExternalGenerationBasicUsername()
    {
        return $this->container['external_generation_basic_username'];
    }

    /**
     * Sets external_generation_basic_username
     *
     * @param string|null $external_generation_basic_username external_generation_basic_username
     *
     * @return self
     */
    public function setExternalGenerationBasicUsername($external_generation_basic_username)
    {
        $this->container['external_generation_basic_username'] = $external_generation_basic_username;

        return $this;
    }

    /**
     * Gets external_generation_header_name
     *
     * @return string|null
     */
    public function getExternalGenerationHeaderName()
    {
        return $this->container['external_generation_header_name'];
    }

    /**
     * Sets external_generation_header_name
     *
     * @param string|null $external_generation_header_name external_generation_header_name
     *
     * @return self
     */
    public function setExternalGenerationHeaderName($external_generation_header_name)
    {
        $this->container['external_generation_header_name'] = $external_generation_header_name;

        return $this;
    }

    /**
     * Gets external_generation_header_value
     *
     * @return string|null
     */
    public function getExternalGenerationHeaderValue()
    {
        return $this->container['external_generation_header_value'];
    }

    /**
     * Sets external_generation_header_value
     *
     * @param string|null $external_generation_header_value external_generation_header_value
     *
     * @return self
     */
    public function setExternalGenerationHeaderValue($external_generation_header_value)
    {
        $this->container['external_generation_header_value'] = $external_generation_header_value;

        return $this;
    }

    /**
     * Gets external_generation_id
     *
     * @return string|null
     */
    public function getExternalGenerationId()
    {
        return $this->container['external_generation_id'];
    }

    /**
     * Sets external_generation_id
     *
     * @param string|null $external_generation_id external_generation_id
     *
     * @return self
     */
    public function setExternalGenerationId($external_generation_id)
    {
        $this->container['external_generation_id'] = $external_generation_id;

        return $this;
    }

    /**
     * Gets external_generation_url
     *
     * @return string|null
     */
    public function getExternalGenerationUrl()
    {
        return $this->container['external_generation_url'];
    }

    /**
     * Sets external_generation_url
     *
     * @param string|null $external_generation_url external_generation_url
     *
     * @return self
     */
    public function setExternalGenerationUrl($external_generation_url)
    {
        $this->container['external_generation_url'] = $external_generation_url;

        return $this;
    }

    /**
     * Gets filter_profile_equation_json
     *
     * @return string|null
     */
    public function getFilterProfileEquationJson()
    {
        return $this->container['filter_profile_equation_json'];
    }

    /**
     * Sets filter_profile_equation_json
     *
     * @param string|null $filter_profile_equation_json Filter profile equation json
     *
     * @return self
     */
    public function setFilterProfileEquationJson($filter_profile_equation_json)
    {
        $this->container['filter_profile_equation_json'] = $filter_profile_equation_json;

        return $this;
    }

    /**
     * Gets individually_render
     *
     * @return bool|null
     */
    public function getIndividuallyRender()
    {
        return $this->container['individually_render'];
    }

    /**
     * Sets individually_render
     *
     * @param bool|null $individually_render Individually render
     *
     * @return self
     */
    public function setIndividuallyRender($individually_render)
    {
        $this->container['individually_render'] = $individually_render;

        return $this;
    }

    /**
     * Gets library_item_oid
     *
     * @return int|null
     */
    public function getLibraryItemOid()
    {
        return $this->container['library_item_oid'];
    }

    /**
     * Sets library_item_oid
     *
     * @param int|null $library_item_oid If this item was ever added to the Code Library, this is the oid for that library item, or 0 if never added before.  This value is used to determine if a library item should be inserted or updated.
     *
     * @return self
     */
    public function setLibraryItemOid($library_item_oid)
    {
        $this->container['library_item_oid'] = $library_item_oid;

        return $this;
    }

    /**
     * Gets magic_link
     *
     * @return bool|null
     */
    public function getMagicLink()
    {
        return $this->container['magic_link'];
    }

    /**
     * Sets magic_link
     *
     * @param bool|null $magic_link True if email links should contain magic link tokens to log the customer in automatically
     *
     * @return self
     */
    public function setMagicLink($magic_link)
    {
        $this->container['magic_link'] = $magic_link;

        return $this;
    }

    /**
     * Gets merchant_id
     *
     * @return string|null
     */
    public function getMerchantId()
    {
        return $this->container['merchant_id'];
    }

    /**
     * Sets merchant_id
     *
     * @param string|null $merchant_id Merchant ID
     *
     * @return self
     */
    public function setMerchantId($merchant_id)
    {
        $this->container['merchant_id'] = $merchant_id;

        return $this;
    }

    /**
     * Gets pending_review
     *
     * @return bool|null
     */
    public function getPendingReview()
    {
        return $this->container['pending_review'];
    }

    /**
     * Sets pending_review
     *
     * @param bool|null $pending_review True if the content of this email is pending review by UltraCart
     *
     * @return self
     */
    public function setPendingReview($pending_review)
    {
        $this->container['pending_review'] = $pending_review;

        return $this;
    }

    /**
     * Gets preview_text
     *
     * @return string|null
     */
    public function getPreviewText()
    {
        return $this->container['preview_text'];
    }

    /**
     * Sets preview_text
     *
     * @param string|null $preview_text Preview text
     *
     * @return self
     */
    public function setPreviewText($preview_text)
    {
        $this->container['preview_text'] = $preview_text;

        return $this;
    }

    /**
     * Gets rejected
     *
     * @return bool|null
     */
    public function getRejected()
    {
        return $this->container['rejected'];
    }

    /**
     * Sets rejected
     *
     * @param bool|null $rejected True if the content of this email was rejected during review by UltraCart
     *
     * @return self
     */
    public function setRejected($rejected)
    {
        $this->container['rejected'] = $rejected;

        return $this;
    }

    /**
     * Gets requires_review
     *
     * @return bool|null
     */
    public function getRequiresReview()
    {
        return $this->container['requires_review'];
    }

    /**
     * Sets requires_review
     *
     * @param bool|null $requires_review True if the content of this email is requires review by UltraCart
     *
     * @return self
     */
    public function setRequiresReview($requires_review)
    {
        $this->container['requires_review'] = $requires_review;

        return $this;
    }

    /**
     * Gets screenshot_large_full_url
     *
     * @return string|null
     */
    public function getScreenshotLargeFullUrl()
    {
        return $this->container['screenshot_large_full_url'];
    }

    /**
     * Sets screenshot_large_full_url
     *
     * @param string|null $screenshot_large_full_url URL to screenshot in large form factor full page
     *
     * @return self
     */
    public function setScreenshotLargeFullUrl($screenshot_large_full_url)
    {
        $this->container['screenshot_large_full_url'] = $screenshot_large_full_url;

        return $this;
    }

    /**
     * Gets screenshot_large_viewport_url
     *
     * @return string|null
     */
    public function getScreenshotLargeViewportUrl()
    {
        return $this->container['screenshot_large_viewport_url'];
    }

    /**
     * Sets screenshot_large_viewport_url
     *
     * @param string|null $screenshot_large_viewport_url URL to screenshot in large form factor viewport
     *
     * @return self
     */
    public function setScreenshotLargeViewportUrl($screenshot_large_viewport_url)
    {
        $this->container['screenshot_large_viewport_url'] = $screenshot_large_viewport_url;

        return $this;
    }

    /**
     * Gets screenshot_small_full_url
     *
     * @return string|null
     */
    public function getScreenshotSmallFullUrl()
    {
        return $this->container['screenshot_small_full_url'];
    }

    /**
     * Sets screenshot_small_full_url
     *
     * @param string|null $screenshot_small_full_url URL to screenshot in small form factor full page
     *
     * @return self
     */
    public function setScreenshotSmallFullUrl($screenshot_small_full_url)
    {
        $this->container['screenshot_small_full_url'] = $screenshot_small_full_url;

        return $this;
    }

    /**
     * Gets screenshot_small_viewport_url
     *
     * @return string|null
     */
    public function getScreenshotSmallViewportUrl()
    {
        return $this->container['screenshot_small_viewport_url'];
    }

    /**
     * Sets screenshot_small_viewport_url
     *
     * @param string|null $screenshot_small_viewport_url URL to screenshot in small form factor viewport
     *
     * @return self
     */
    public function setScreenshotSmallViewportUrl($screenshot_small_viewport_url)
    {
        $this->container['screenshot_small_viewport_url'] = $screenshot_small_viewport_url;

        return $this;
    }

    /**
     * Gets smart_sending
     *
     * @return bool|null
     */
    public function getSmartSending()
    {
        return $this->container['smart_sending'];
    }

    /**
     * Sets smart_sending
     *
     * @param bool|null $smart_sending Smart sending
     *
     * @return self
     */
    public function setSmartSending($smart_sending)
    {
        $this->container['smart_sending'] = $smart_sending;

        return $this;
    }

    /**
     * Gets storefront_oid
     *
     * @return int|null
     */
    public function getStorefrontOid()
    {
        return $this->container['storefront_oid'];
    }

    /**
     * Sets storefront_oid
     *
     * @param int|null $storefront_oid Storefront oid
     *
     * @return self
     */
    public function setStorefrontOid($storefront_oid)
    {
        $this->container['storefront_oid'] = $storefront_oid;

        return $this;
    }

    /**
     * Gets subject
     *
     * @return string|null
     */
    public function getSubject()
    {
        return $this->container['subject'];
    }

    /**
     * Sets subject
     *
     * @param string|null $subject Subject
     *
     * @return self
     */
    public function setSubject($subject)
    {
        $this->container['subject'] = $subject;

        return $this;
    }

    /**
     * Gets suspended_for_spam
     *
     * @return bool|null
     */
    public function getSuspendedForSpam()
    {
        return $this->container['suspended_for_spam'];
    }

    /**
     * Sets suspended_for_spam
     *
     * @param bool|null $suspended_for_spam True if the email was suspended for too high of a spam rate.
     *
     * @return self
     */
    public function setSuspendedForSpam($suspended_for_spam)
    {
        $this->container['suspended_for_spam'] = $suspended_for_spam;

        return $this;
    }

    /**
     * Gets transactional_email
     *
     * @return bool|null
     */
    public function getTransactionalEmail()
    {
        return $this->container['transactional_email'];
    }

    /**
     * Sets transactional_email
     *
     * @param bool|null $transactional_email Transactional email
     *
     * @return self
     */
    public function setTransactionalEmail($transactional_email)
    {
        $this->container['transactional_email'] = $transactional_email;

        return $this;
    }

    /**
     * Gets version
     *
     * @return int|null
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     *
     * @param int|null $version Version
     *
     * @return self
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


