<?php
/**
 * EmailPostcardTracking
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace ultracart\v2\models;

use \ArrayAccess;
use \ultracart\v2\ObjectSerializer;

/**
 * EmailPostcardTracking Class Doc Comment
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EmailPostcardTracking implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'EmailPostcardTracking';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'commseq_postcard_uuid' => 'string',
        'commseq_step_uuid' => 'string',
        'commseq_uuid' => 'string',
        'conversion_dts' => 'string',
        'cost' => 'float',
        'customer_uuid' => 'string',
        'delivered_dts' => 'string',
        'from_address_line1' => 'string',
        'from_address_line2' => 'string',
        'from_city' => 'string',
        'from_name' => 'string',
        'from_state' => 'string',
        'from_zip' => 'string',
        'mailed_dts' => 'string',
        'order_id' => 'string',
        'postcard_tracking_uuid' => 'string',
        'status' => 'string',
        'submit_dts' => 'string',
        'to_address_line1' => 'string',
        'to_address_line2' => 'string',
        'to_city' => 'string',
        'to_name' => 'string',
        'to_state' => 'string',
        'to_zip' => 'string',
        'tracking_description' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'commseq_postcard_uuid' => null,
        'commseq_step_uuid' => null,
        'commseq_uuid' => null,
        'conversion_dts' => 'dateTime',
        'cost' => null,
        'customer_uuid' => null,
        'delivered_dts' => 'dateTime',
        'from_address_line1' => null,
        'from_address_line2' => null,
        'from_city' => null,
        'from_name' => null,
        'from_state' => null,
        'from_zip' => null,
        'mailed_dts' => 'dateTime',
        'order_id' => null,
        'postcard_tracking_uuid' => null,
        'status' => null,
        'submit_dts' => 'dateTime',
        'to_address_line1' => null,
        'to_address_line2' => null,
        'to_city' => null,
        'to_name' => null,
        'to_state' => null,
        'to_zip' => null,
        'tracking_description' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'commseq_postcard_uuid' => 'commseq_postcard_uuid',
        'commseq_step_uuid' => 'commseq_step_uuid',
        'commseq_uuid' => 'commseq_uuid',
        'conversion_dts' => 'conversion_dts',
        'cost' => 'cost',
        'customer_uuid' => 'customer_uuid',
        'delivered_dts' => 'delivered_dts',
        'from_address_line1' => 'from_address_line1',
        'from_address_line2' => 'from_address_line2',
        'from_city' => 'from_city',
        'from_name' => 'from_name',
        'from_state' => 'from_state',
        'from_zip' => 'from_zip',
        'mailed_dts' => 'mailed_dts',
        'order_id' => 'order_id',
        'postcard_tracking_uuid' => 'postcard_tracking_uuid',
        'status' => 'status',
        'submit_dts' => 'submit_dts',
        'to_address_line1' => 'to_address_line1',
        'to_address_line2' => 'to_address_line2',
        'to_city' => 'to_city',
        'to_name' => 'to_name',
        'to_state' => 'to_state',
        'to_zip' => 'to_zip',
        'tracking_description' => 'tracking_description'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'commseq_postcard_uuid' => 'setCommseqPostcardUuid',
        'commseq_step_uuid' => 'setCommseqStepUuid',
        'commseq_uuid' => 'setCommseqUuid',
        'conversion_dts' => 'setConversionDts',
        'cost' => 'setCost',
        'customer_uuid' => 'setCustomerUuid',
        'delivered_dts' => 'setDeliveredDts',
        'from_address_line1' => 'setFromAddressLine1',
        'from_address_line2' => 'setFromAddressLine2',
        'from_city' => 'setFromCity',
        'from_name' => 'setFromName',
        'from_state' => 'setFromState',
        'from_zip' => 'setFromZip',
        'mailed_dts' => 'setMailedDts',
        'order_id' => 'setOrderId',
        'postcard_tracking_uuid' => 'setPostcardTrackingUuid',
        'status' => 'setStatus',
        'submit_dts' => 'setSubmitDts',
        'to_address_line1' => 'setToAddressLine1',
        'to_address_line2' => 'setToAddressLine2',
        'to_city' => 'setToCity',
        'to_name' => 'setToName',
        'to_state' => 'setToState',
        'to_zip' => 'setToZip',
        'tracking_description' => 'setTrackingDescription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'commseq_postcard_uuid' => 'getCommseqPostcardUuid',
        'commseq_step_uuid' => 'getCommseqStepUuid',
        'commseq_uuid' => 'getCommseqUuid',
        'conversion_dts' => 'getConversionDts',
        'cost' => 'getCost',
        'customer_uuid' => 'getCustomerUuid',
        'delivered_dts' => 'getDeliveredDts',
        'from_address_line1' => 'getFromAddressLine1',
        'from_address_line2' => 'getFromAddressLine2',
        'from_city' => 'getFromCity',
        'from_name' => 'getFromName',
        'from_state' => 'getFromState',
        'from_zip' => 'getFromZip',
        'mailed_dts' => 'getMailedDts',
        'order_id' => 'getOrderId',
        'postcard_tracking_uuid' => 'getPostcardTrackingUuid',
        'status' => 'getStatus',
        'submit_dts' => 'getSubmitDts',
        'to_address_line1' => 'getToAddressLine1',
        'to_address_line2' => 'getToAddressLine2',
        'to_city' => 'getToCity',
        'to_name' => 'getToName',
        'to_state' => 'getToState',
        'to_zip' => 'getToZip',
        'tracking_description' => 'getTrackingDescription'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['commseq_postcard_uuid'] = $data['commseq_postcard_uuid'] ?? null;
        $this->container['commseq_step_uuid'] = $data['commseq_step_uuid'] ?? null;
        $this->container['commseq_uuid'] = $data['commseq_uuid'] ?? null;
        $this->container['conversion_dts'] = $data['conversion_dts'] ?? null;
        $this->container['cost'] = $data['cost'] ?? null;
        $this->container['customer_uuid'] = $data['customer_uuid'] ?? null;
        $this->container['delivered_dts'] = $data['delivered_dts'] ?? null;
        $this->container['from_address_line1'] = $data['from_address_line1'] ?? null;
        $this->container['from_address_line2'] = $data['from_address_line2'] ?? null;
        $this->container['from_city'] = $data['from_city'] ?? null;
        $this->container['from_name'] = $data['from_name'] ?? null;
        $this->container['from_state'] = $data['from_state'] ?? null;
        $this->container['from_zip'] = $data['from_zip'] ?? null;
        $this->container['mailed_dts'] = $data['mailed_dts'] ?? null;
        $this->container['order_id'] = $data['order_id'] ?? null;
        $this->container['postcard_tracking_uuid'] = $data['postcard_tracking_uuid'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['submit_dts'] = $data['submit_dts'] ?? null;
        $this->container['to_address_line1'] = $data['to_address_line1'] ?? null;
        $this->container['to_address_line2'] = $data['to_address_line2'] ?? null;
        $this->container['to_city'] = $data['to_city'] ?? null;
        $this->container['to_name'] = $data['to_name'] ?? null;
        $this->container['to_state'] = $data['to_state'] ?? null;
        $this->container['to_zip'] = $data['to_zip'] ?? null;
        $this->container['tracking_description'] = $data['tracking_description'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets commseq_postcard_uuid
     *
     * @return string|null
     */
    public function getCommseqPostcardUuid()
    {
        return $this->container['commseq_postcard_uuid'];
    }

    /**
     * Sets commseq_postcard_uuid
     *
     * @param string|null $commseq_postcard_uuid commseq_postcard_uuid
     *
     * @return self
     */
    public function setCommseqPostcardUuid($commseq_postcard_uuid)
    {
        $this->container['commseq_postcard_uuid'] = $commseq_postcard_uuid;

        return $this;
    }

    /**
     * Gets commseq_step_uuid
     *
     * @return string|null
     */
    public function getCommseqStepUuid()
    {
        return $this->container['commseq_step_uuid'];
    }

    /**
     * Sets commseq_step_uuid
     *
     * @param string|null $commseq_step_uuid commseq_step_uuid
     *
     * @return self
     */
    public function setCommseqStepUuid($commseq_step_uuid)
    {
        $this->container['commseq_step_uuid'] = $commseq_step_uuid;

        return $this;
    }

    /**
     * Gets commseq_uuid
     *
     * @return string|null
     */
    public function getCommseqUuid()
    {
        return $this->container['commseq_uuid'];
    }

    /**
     * Sets commseq_uuid
     *
     * @param string|null $commseq_uuid commseq_uuid
     *
     * @return self
     */
    public function setCommseqUuid($commseq_uuid)
    {
        $this->container['commseq_uuid'] = $commseq_uuid;

        return $this;
    }

    /**
     * Gets conversion_dts
     *
     * @return string|null
     */
    public function getConversionDts()
    {
        return $this->container['conversion_dts'];
    }

    /**
     * Sets conversion_dts
     *
     * @param string|null $conversion_dts Conversion date time.
     *
     * @return self
     */
    public function setConversionDts($conversion_dts)
    {
        $this->container['conversion_dts'] = $conversion_dts;

        return $this;
    }

    /**
     * Gets cost
     *
     * @return float|null
     */
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param float|null $cost cost
     *
     * @return self
     */
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets customer_uuid
     *
     * @return string|null
     */
    public function getCustomerUuid()
    {
        return $this->container['customer_uuid'];
    }

    /**
     * Sets customer_uuid
     *
     * @param string|null $customer_uuid customer_uuid
     *
     * @return self
     */
    public function setCustomerUuid($customer_uuid)
    {
        $this->container['customer_uuid'] = $customer_uuid;

        return $this;
    }

    /**
     * Gets delivered_dts
     *
     * @return string|null
     */
    public function getDeliveredDts()
    {
        return $this->container['delivered_dts'];
    }

    /**
     * Sets delivered_dts
     *
     * @param string|null $delivered_dts Delivered date time.
     *
     * @return self
     */
    public function setDeliveredDts($delivered_dts)
    {
        $this->container['delivered_dts'] = $delivered_dts;

        return $this;
    }

    /**
     * Gets from_address_line1
     *
     * @return string|null
     */
    public function getFromAddressLine1()
    {
        return $this->container['from_address_line1'];
    }

    /**
     * Sets from_address_line1
     *
     * @param string|null $from_address_line1 from_address_line1
     *
     * @return self
     */
    public function setFromAddressLine1($from_address_line1)
    {
        $this->container['from_address_line1'] = $from_address_line1;

        return $this;
    }

    /**
     * Gets from_address_line2
     *
     * @return string|null
     */
    public function getFromAddressLine2()
    {
        return $this->container['from_address_line2'];
    }

    /**
     * Sets from_address_line2
     *
     * @param string|null $from_address_line2 from_address_line2
     *
     * @return self
     */
    public function setFromAddressLine2($from_address_line2)
    {
        $this->container['from_address_line2'] = $from_address_line2;

        return $this;
    }

    /**
     * Gets from_city
     *
     * @return string|null
     */
    public function getFromCity()
    {
        return $this->container['from_city'];
    }

    /**
     * Sets from_city
     *
     * @param string|null $from_city from_city
     *
     * @return self
     */
    public function setFromCity($from_city)
    {
        $this->container['from_city'] = $from_city;

        return $this;
    }

    /**
     * Gets from_name
     *
     * @return string|null
     */
    public function getFromName()
    {
        return $this->container['from_name'];
    }

    /**
     * Sets from_name
     *
     * @param string|null $from_name from_name
     *
     * @return self
     */
    public function setFromName($from_name)
    {
        $this->container['from_name'] = $from_name;

        return $this;
    }

    /**
     * Gets from_state
     *
     * @return string|null
     */
    public function getFromState()
    {
        return $this->container['from_state'];
    }

    /**
     * Sets from_state
     *
     * @param string|null $from_state from_state
     *
     * @return self
     */
    public function setFromState($from_state)
    {
        $this->container['from_state'] = $from_state;

        return $this;
    }

    /**
     * Gets from_zip
     *
     * @return string|null
     */
    public function getFromZip()
    {
        return $this->container['from_zip'];
    }

    /**
     * Sets from_zip
     *
     * @param string|null $from_zip from_zip
     *
     * @return self
     */
    public function setFromZip($from_zip)
    {
        $this->container['from_zip'] = $from_zip;

        return $this;
    }

    /**
     * Gets mailed_dts
     *
     * @return string|null
     */
    public function getMailedDts()
    {
        return $this->container['mailed_dts'];
    }

    /**
     * Sets mailed_dts
     *
     * @param string|null $mailed_dts Mailed date time.
     *
     * @return self
     */
    public function setMailedDts($mailed_dts)
    {
        $this->container['mailed_dts'] = $mailed_dts;

        return $this;
    }

    /**
     * Gets order_id
     *
     * @return string|null
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param string|null $order_id order_id
     *
     * @return self
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets postcard_tracking_uuid
     *
     * @return string|null
     */
    public function getPostcardTrackingUuid()
    {
        return $this->container['postcard_tracking_uuid'];
    }

    /**
     * Sets postcard_tracking_uuid
     *
     * @param string|null $postcard_tracking_uuid postcard_tracking_uuid
     *
     * @return self
     */
    public function setPostcardTrackingUuid($postcard_tracking_uuid)
    {
        $this->container['postcard_tracking_uuid'] = $postcard_tracking_uuid;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets submit_dts
     *
     * @return string|null
     */
    public function getSubmitDts()
    {
        return $this->container['submit_dts'];
    }

    /**
     * Sets submit_dts
     *
     * @param string|null $submit_dts Submit date time.
     *
     * @return self
     */
    public function setSubmitDts($submit_dts)
    {
        $this->container['submit_dts'] = $submit_dts;

        return $this;
    }

    /**
     * Gets to_address_line1
     *
     * @return string|null
     */
    public function getToAddressLine1()
    {
        return $this->container['to_address_line1'];
    }

    /**
     * Sets to_address_line1
     *
     * @param string|null $to_address_line1 to_address_line1
     *
     * @return self
     */
    public function setToAddressLine1($to_address_line1)
    {
        $this->container['to_address_line1'] = $to_address_line1;

        return $this;
    }

    /**
     * Gets to_address_line2
     *
     * @return string|null
     */
    public function getToAddressLine2()
    {
        return $this->container['to_address_line2'];
    }

    /**
     * Sets to_address_line2
     *
     * @param string|null $to_address_line2 to_address_line2
     *
     * @return self
     */
    public function setToAddressLine2($to_address_line2)
    {
        $this->container['to_address_line2'] = $to_address_line2;

        return $this;
    }

    /**
     * Gets to_city
     *
     * @return string|null
     */
    public function getToCity()
    {
        return $this->container['to_city'];
    }

    /**
     * Sets to_city
     *
     * @param string|null $to_city to_city
     *
     * @return self
     */
    public function setToCity($to_city)
    {
        $this->container['to_city'] = $to_city;

        return $this;
    }

    /**
     * Gets to_name
     *
     * @return string|null
     */
    public function getToName()
    {
        return $this->container['to_name'];
    }

    /**
     * Sets to_name
     *
     * @param string|null $to_name to_name
     *
     * @return self
     */
    public function setToName($to_name)
    {
        $this->container['to_name'] = $to_name;

        return $this;
    }

    /**
     * Gets to_state
     *
     * @return string|null
     */
    public function getToState()
    {
        return $this->container['to_state'];
    }

    /**
     * Sets to_state
     *
     * @param string|null $to_state to_state
     *
     * @return self
     */
    public function setToState($to_state)
    {
        $this->container['to_state'] = $to_state;

        return $this;
    }

    /**
     * Gets to_zip
     *
     * @return string|null
     */
    public function getToZip()
    {
        return $this->container['to_zip'];
    }

    /**
     * Sets to_zip
     *
     * @param string|null $to_zip to_zip
     *
     * @return self
     */
    public function setToZip($to_zip)
    {
        $this->container['to_zip'] = $to_zip;

        return $this;
    }

    /**
     * Gets tracking_description
     *
     * @return string|null
     */
    public function getTrackingDescription()
    {
        return $this->container['tracking_description'];
    }

    /**
     * Sets tracking_description
     *
     * @param string|null $tracking_description tracking_description
     *
     * @return self
     */
    public function setTrackingDescription($tracking_description)
    {
        $this->container['tracking_description'] = $tracking_description;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


