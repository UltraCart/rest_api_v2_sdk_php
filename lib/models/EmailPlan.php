<?php
/**
 * EmailPlan
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace ultracart\v2\models;

use \ArrayAccess;
use \ultracart\v2\ObjectSerializer;

/**
 * EmailPlan Class Doc Comment
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EmailPlan implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'EmailPlan';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'additional_customers' => 'int',
        'additional_emails' => 'int',
        'additional_fee' => 'float',
        'allow_list_import' => 'bool',
        'allow_tracking_emails' => 'bool',
        'customer_tiers' => '\ultracart\v2\models\EmailPlanAdditional[]',
        'initial_sending_limits' => 'int',
        'plan_customers' => 'int',
        'plan_emails' => 'int',
        'plan_name' => 'string',
        'plan_name_formatted' => 'string',
        'require_order_within_last_days' => 'int',
        'revenue_percent' => 'int',
        'spam_percent_limit' => 'int',
        'total_customers' => 'int',
        'total_emails' => 'int',
        'upgrade_to' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'additional_customers' => 'int32',
        'additional_emails' => 'int32',
        'additional_fee' => null,
        'allow_list_import' => null,
        'allow_tracking_emails' => null,
        'customer_tiers' => null,
        'initial_sending_limits' => 'int32',
        'plan_customers' => 'int32',
        'plan_emails' => 'int32',
        'plan_name' => null,
        'plan_name_formatted' => null,
        'require_order_within_last_days' => 'int32',
        'revenue_percent' => 'int32',
        'spam_percent_limit' => 'int32',
        'total_customers' => 'int32',
        'total_emails' => 'int32',
        'upgrade_to' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'additional_customers' => 'additional_customers',
        'additional_emails' => 'additional_emails',
        'additional_fee' => 'additional_fee',
        'allow_list_import' => 'allow_list_import',
        'allow_tracking_emails' => 'allow_tracking_emails',
        'customer_tiers' => 'customer_tiers',
        'initial_sending_limits' => 'initial_sending_limits',
        'plan_customers' => 'plan_customers',
        'plan_emails' => 'plan_emails',
        'plan_name' => 'plan_name',
        'plan_name_formatted' => 'plan_name_formatted',
        'require_order_within_last_days' => 'require_order_within_last_days',
        'revenue_percent' => 'revenue_percent',
        'spam_percent_limit' => 'spam_percent_limit',
        'total_customers' => 'total_customers',
        'total_emails' => 'total_emails',
        'upgrade_to' => 'upgrade_to'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'additional_customers' => 'setAdditionalCustomers',
        'additional_emails' => 'setAdditionalEmails',
        'additional_fee' => 'setAdditionalFee',
        'allow_list_import' => 'setAllowListImport',
        'allow_tracking_emails' => 'setAllowTrackingEmails',
        'customer_tiers' => 'setCustomerTiers',
        'initial_sending_limits' => 'setInitialSendingLimits',
        'plan_customers' => 'setPlanCustomers',
        'plan_emails' => 'setPlanEmails',
        'plan_name' => 'setPlanName',
        'plan_name_formatted' => 'setPlanNameFormatted',
        'require_order_within_last_days' => 'setRequireOrderWithinLastDays',
        'revenue_percent' => 'setRevenuePercent',
        'spam_percent_limit' => 'setSpamPercentLimit',
        'total_customers' => 'setTotalCustomers',
        'total_emails' => 'setTotalEmails',
        'upgrade_to' => 'setUpgradeTo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'additional_customers' => 'getAdditionalCustomers',
        'additional_emails' => 'getAdditionalEmails',
        'additional_fee' => 'getAdditionalFee',
        'allow_list_import' => 'getAllowListImport',
        'allow_tracking_emails' => 'getAllowTrackingEmails',
        'customer_tiers' => 'getCustomerTiers',
        'initial_sending_limits' => 'getInitialSendingLimits',
        'plan_customers' => 'getPlanCustomers',
        'plan_emails' => 'getPlanEmails',
        'plan_name' => 'getPlanName',
        'plan_name_formatted' => 'getPlanNameFormatted',
        'require_order_within_last_days' => 'getRequireOrderWithinLastDays',
        'revenue_percent' => 'getRevenuePercent',
        'spam_percent_limit' => 'getSpamPercentLimit',
        'total_customers' => 'getTotalCustomers',
        'total_emails' => 'getTotalEmails',
        'upgrade_to' => 'getUpgradeTo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['additional_customers'] = $data['additional_customers'] ?? null;
        $this->container['additional_emails'] = $data['additional_emails'] ?? null;
        $this->container['additional_fee'] = $data['additional_fee'] ?? null;
        $this->container['allow_list_import'] = $data['allow_list_import'] ?? null;
        $this->container['allow_tracking_emails'] = $data['allow_tracking_emails'] ?? null;
        $this->container['customer_tiers'] = $data['customer_tiers'] ?? null;
        $this->container['initial_sending_limits'] = $data['initial_sending_limits'] ?? null;
        $this->container['plan_customers'] = $data['plan_customers'] ?? null;
        $this->container['plan_emails'] = $data['plan_emails'] ?? null;
        $this->container['plan_name'] = $data['plan_name'] ?? null;
        $this->container['plan_name_formatted'] = $data['plan_name_formatted'] ?? null;
        $this->container['require_order_within_last_days'] = $data['require_order_within_last_days'] ?? null;
        $this->container['revenue_percent'] = $data['revenue_percent'] ?? null;
        $this->container['spam_percent_limit'] = $data['spam_percent_limit'] ?? null;
        $this->container['total_customers'] = $data['total_customers'] ?? null;
        $this->container['total_emails'] = $data['total_emails'] ?? null;
        $this->container['upgrade_to'] = $data['upgrade_to'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets additional_customers
     *
     * @return int|null
     */
    public function getAdditionalCustomers()
    {
        return $this->container['additional_customers'];
    }

    /**
     * Sets additional_customers
     *
     * @param int|null $additional_customers additional_customers
     *
     * @return self
     */
    public function setAdditionalCustomers($additional_customers)
    {
        $this->container['additional_customers'] = $additional_customers;

        return $this;
    }

    /**
     * Gets additional_emails
     *
     * @return int|null
     */
    public function getAdditionalEmails()
    {
        return $this->container['additional_emails'];
    }

    /**
     * Sets additional_emails
     *
     * @param int|null $additional_emails additional_emails
     *
     * @return self
     */
    public function setAdditionalEmails($additional_emails)
    {
        $this->container['additional_emails'] = $additional_emails;

        return $this;
    }

    /**
     * Gets additional_fee
     *
     * @return float|null
     */
    public function getAdditionalFee()
    {
        return $this->container['additional_fee'];
    }

    /**
     * Sets additional_fee
     *
     * @param float|null $additional_fee additional_fee
     *
     * @return self
     */
    public function setAdditionalFee($additional_fee)
    {
        $this->container['additional_fee'] = $additional_fee;

        return $this;
    }

    /**
     * Gets allow_list_import
     *
     * @return bool|null
     */
    public function getAllowListImport()
    {
        return $this->container['allow_list_import'];
    }

    /**
     * Sets allow_list_import
     *
     * @param bool|null $allow_list_import allow_list_import
     *
     * @return self
     */
    public function setAllowListImport($allow_list_import)
    {
        $this->container['allow_list_import'] = $allow_list_import;

        return $this;
    }

    /**
     * Gets allow_tracking_emails
     *
     * @return bool|null
     */
    public function getAllowTrackingEmails()
    {
        return $this->container['allow_tracking_emails'];
    }

    /**
     * Sets allow_tracking_emails
     *
     * @param bool|null $allow_tracking_emails allow_tracking_emails
     *
     * @return self
     */
    public function setAllowTrackingEmails($allow_tracking_emails)
    {
        $this->container['allow_tracking_emails'] = $allow_tracking_emails;

        return $this;
    }

    /**
     * Gets customer_tiers
     *
     * @return \ultracart\v2\models\EmailPlanAdditional[]|null
     */
    public function getCustomerTiers()
    {
        return $this->container['customer_tiers'];
    }

    /**
     * Sets customer_tiers
     *
     * @param \ultracart\v2\models\EmailPlanAdditional[]|null $customer_tiers customer_tiers
     *
     * @return self
     */
    public function setCustomerTiers($customer_tiers)
    {
        $this->container['customer_tiers'] = $customer_tiers;

        return $this;
    }

    /**
     * Gets initial_sending_limits
     *
     * @return int|null
     */
    public function getInitialSendingLimits()
    {
        return $this->container['initial_sending_limits'];
    }

    /**
     * Sets initial_sending_limits
     *
     * @param int|null $initial_sending_limits initial_sending_limits
     *
     * @return self
     */
    public function setInitialSendingLimits($initial_sending_limits)
    {
        $this->container['initial_sending_limits'] = $initial_sending_limits;

        return $this;
    }

    /**
     * Gets plan_customers
     *
     * @return int|null
     */
    public function getPlanCustomers()
    {
        return $this->container['plan_customers'];
    }

    /**
     * Sets plan_customers
     *
     * @param int|null $plan_customers plan_customers
     *
     * @return self
     */
    public function setPlanCustomers($plan_customers)
    {
        $this->container['plan_customers'] = $plan_customers;

        return $this;
    }

    /**
     * Gets plan_emails
     *
     * @return int|null
     */
    public function getPlanEmails()
    {
        return $this->container['plan_emails'];
    }

    /**
     * Sets plan_emails
     *
     * @param int|null $plan_emails plan_emails
     *
     * @return self
     */
    public function setPlanEmails($plan_emails)
    {
        $this->container['plan_emails'] = $plan_emails;

        return $this;
    }

    /**
     * Gets plan_name
     *
     * @return string|null
     */
    public function getPlanName()
    {
        return $this->container['plan_name'];
    }

    /**
     * Sets plan_name
     *
     * @param string|null $plan_name plan_name
     *
     * @return self
     */
    public function setPlanName($plan_name)
    {
        $this->container['plan_name'] = $plan_name;

        return $this;
    }

    /**
     * Gets plan_name_formatted
     *
     * @return string|null
     */
    public function getPlanNameFormatted()
    {
        return $this->container['plan_name_formatted'];
    }

    /**
     * Sets plan_name_formatted
     *
     * @param string|null $plan_name_formatted plan_name_formatted
     *
     * @return self
     */
    public function setPlanNameFormatted($plan_name_formatted)
    {
        $this->container['plan_name_formatted'] = $plan_name_formatted;

        return $this;
    }

    /**
     * Gets require_order_within_last_days
     *
     * @return int|null
     */
    public function getRequireOrderWithinLastDays()
    {
        return $this->container['require_order_within_last_days'];
    }

    /**
     * Sets require_order_within_last_days
     *
     * @param int|null $require_order_within_last_days require_order_within_last_days
     *
     * @return self
     */
    public function setRequireOrderWithinLastDays($require_order_within_last_days)
    {
        $this->container['require_order_within_last_days'] = $require_order_within_last_days;

        return $this;
    }

    /**
     * Gets revenue_percent
     *
     * @return int|null
     */
    public function getRevenuePercent()
    {
        return $this->container['revenue_percent'];
    }

    /**
     * Sets revenue_percent
     *
     * @param int|null $revenue_percent revenue_percent
     *
     * @return self
     */
    public function setRevenuePercent($revenue_percent)
    {
        $this->container['revenue_percent'] = $revenue_percent;

        return $this;
    }

    /**
     * Gets spam_percent_limit
     *
     * @return int|null
     */
    public function getSpamPercentLimit()
    {
        return $this->container['spam_percent_limit'];
    }

    /**
     * Sets spam_percent_limit
     *
     * @param int|null $spam_percent_limit spam_percent_limit
     *
     * @return self
     */
    public function setSpamPercentLimit($spam_percent_limit)
    {
        $this->container['spam_percent_limit'] = $spam_percent_limit;

        return $this;
    }

    /**
     * Gets total_customers
     *
     * @return int|null
     */
    public function getTotalCustomers()
    {
        return $this->container['total_customers'];
    }

    /**
     * Sets total_customers
     *
     * @param int|null $total_customers total_customers
     *
     * @return self
     */
    public function setTotalCustomers($total_customers)
    {
        $this->container['total_customers'] = $total_customers;

        return $this;
    }

    /**
     * Gets total_emails
     *
     * @return int|null
     */
    public function getTotalEmails()
    {
        return $this->container['total_emails'];
    }

    /**
     * Sets total_emails
     *
     * @param int|null $total_emails total_emails
     *
     * @return self
     */
    public function setTotalEmails($total_emails)
    {
        $this->container['total_emails'] = $total_emails;

        return $this;
    }

    /**
     * Gets upgrade_to
     *
     * @return int|null
     */
    public function getUpgradeTo()
    {
        return $this->container['upgrade_to'];
    }

    /**
     * Sets upgrade_to
     *
     * @param int|null $upgrade_to upgrade_to
     *
     * @return self
     */
    public function setUpgradeTo($upgrade_to)
    {
        $this->container['upgrade_to'] = $upgrade_to;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


