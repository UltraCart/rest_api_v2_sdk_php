<?php
/**
 * ItemShipping
 *
 * PHP version 5
 *
 * @category Class
 * @package  ultracart\v2
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ultracart\v2\models;

use \ArrayAccess;

/**
 * ItemShipping Class Doc Comment
 *
 * @category    Class */
/** 
 * @package     ultracart\v2
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ItemShipping implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'ItemShipping';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'allow_back_order' => 'bool',
        'amazon_fba' => 'bool',
        'case_inner_packs' => 'int',
        'case_units' => 'int',
        'cases' => '\ultracart\v2\models\ItemShippingCase[]',
        'country_code_of_origin' => 'string',
        'customs_description' => 'string',
        'customs_value' => 'float',
        'delivery_on_friday' => 'bool',
        'delivery_on_monday' => 'bool',
        'delivery_on_saturday' => 'bool',
        'delivery_on_sunday' => 'bool',
        'delivery_on_thursday' => 'bool',
        'delivery_on_tuesday' => 'bool',
        'delivery_on_wednesday' => 'bool',
        'destination_markups' => '\ultracart\v2\models\ItemShippingDestinationMarkup[]',
        'destination_restrictions' => '\ultracart\v2\models\ItemShippingDestinationRestriction[]',
        'distribution_centers' => '\ultracart\v2\models\ItemShippingDistributionCenter[]',
        'eta' => 'string',
        'free_shipping' => 'bool',
        'freight_class' => 'string',
        'hazmat' => 'bool',
        'made_to_order' => 'bool',
        'made_to_order_lead_time' => 'int',
        'max_days_time_in_transit' => 'int',
        'methods' => '\ultracart\v2\models\ItemShippingMethod[]',
        'no_shipping_discount' => 'bool',
        'package_requirements' => '\ultracart\v2\models\ItemShippingPackageRequirement[]',
        'perishable_class_name' => 'string',
        'perishable_class_oid' => 'int',
        'preorder' => 'bool',
        'require_delivery_date' => 'bool',
        'restrict_shipment_on_friday' => 'bool',
        'restrict_shipment_on_monday' => 'bool',
        'restrict_shipment_on_saturday' => 'bool',
        'restrict_shipment_on_sunday' => 'bool',
        'restrict_shipment_on_thursday' => 'bool',
        'restrict_shipment_on_tuesday' => 'bool',
        'restrict_shipment_on_wednesday' => 'bool',
        'ship_separately' => 'bool',
        'ship_separately_additional_weight' => '\ultracart\v2\models\Weight',
        'ship_separately_height' => '\ultracart\v2\models\Distance',
        'ship_separately_length' => '\ultracart\v2\models\Distance',
        'ship_separately_package_special_type' => 'string',
        'ship_separately_width' => '\ultracart\v2\models\Distance',
        'special_product_type' => 'string',
        'track_inventory' => 'bool'
    );

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'allow_back_order' => 'allow_back_order',
        'amazon_fba' => 'amazon_fba',
        'case_inner_packs' => 'case_inner_packs',
        'case_units' => 'case_units',
        'cases' => 'cases',
        'country_code_of_origin' => 'country_code_of_origin',
        'customs_description' => 'customs_description',
        'customs_value' => 'customs_value',
        'delivery_on_friday' => 'delivery_on_friday',
        'delivery_on_monday' => 'delivery_on_monday',
        'delivery_on_saturday' => 'delivery_on_saturday',
        'delivery_on_sunday' => 'delivery_on_sunday',
        'delivery_on_thursday' => 'delivery_on_thursday',
        'delivery_on_tuesday' => 'delivery_on_tuesday',
        'delivery_on_wednesday' => 'delivery_on_wednesday',
        'destination_markups' => 'destination_markups',
        'destination_restrictions' => 'destination_restrictions',
        'distribution_centers' => 'distribution_centers',
        'eta' => 'eta',
        'free_shipping' => 'free_shipping',
        'freight_class' => 'freight_class',
        'hazmat' => 'hazmat',
        'made_to_order' => 'made_to_order',
        'made_to_order_lead_time' => 'made_to_order_lead_time',
        'max_days_time_in_transit' => 'max_days_time_in_transit',
        'methods' => 'methods',
        'no_shipping_discount' => 'no_shipping_discount',
        'package_requirements' => 'package_requirements',
        'perishable_class_name' => 'perishable_class_name',
        'perishable_class_oid' => 'perishable_class_oid',
        'preorder' => 'preorder',
        'require_delivery_date' => 'require_delivery_date',
        'restrict_shipment_on_friday' => 'restrict_shipment_on_friday',
        'restrict_shipment_on_monday' => 'restrict_shipment_on_monday',
        'restrict_shipment_on_saturday' => 'restrict_shipment_on_saturday',
        'restrict_shipment_on_sunday' => 'restrict_shipment_on_sunday',
        'restrict_shipment_on_thursday' => 'restrict_shipment_on_thursday',
        'restrict_shipment_on_tuesday' => 'restrict_shipment_on_tuesday',
        'restrict_shipment_on_wednesday' => 'restrict_shipment_on_wednesday',
        'ship_separately' => 'ship_separately',
        'ship_separately_additional_weight' => 'ship_separately_additional_weight',
        'ship_separately_height' => 'ship_separately_height',
        'ship_separately_length' => 'ship_separately_length',
        'ship_separately_package_special_type' => 'ship_separately_package_special_type',
        'ship_separately_width' => 'ship_separately_width',
        'special_product_type' => 'special_product_type',
        'track_inventory' => 'track_inventory'
    );

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'allow_back_order' => 'setAllowBackOrder',
        'amazon_fba' => 'setAmazonFba',
        'case_inner_packs' => 'setCaseInnerPacks',
        'case_units' => 'setCaseUnits',
        'cases' => 'setCases',
        'country_code_of_origin' => 'setCountryCodeOfOrigin',
        'customs_description' => 'setCustomsDescription',
        'customs_value' => 'setCustomsValue',
        'delivery_on_friday' => 'setDeliveryOnFriday',
        'delivery_on_monday' => 'setDeliveryOnMonday',
        'delivery_on_saturday' => 'setDeliveryOnSaturday',
        'delivery_on_sunday' => 'setDeliveryOnSunday',
        'delivery_on_thursday' => 'setDeliveryOnThursday',
        'delivery_on_tuesday' => 'setDeliveryOnTuesday',
        'delivery_on_wednesday' => 'setDeliveryOnWednesday',
        'destination_markups' => 'setDestinationMarkups',
        'destination_restrictions' => 'setDestinationRestrictions',
        'distribution_centers' => 'setDistributionCenters',
        'eta' => 'setEta',
        'free_shipping' => 'setFreeShipping',
        'freight_class' => 'setFreightClass',
        'hazmat' => 'setHazmat',
        'made_to_order' => 'setMadeToOrder',
        'made_to_order_lead_time' => 'setMadeToOrderLeadTime',
        'max_days_time_in_transit' => 'setMaxDaysTimeInTransit',
        'methods' => 'setMethods',
        'no_shipping_discount' => 'setNoShippingDiscount',
        'package_requirements' => 'setPackageRequirements',
        'perishable_class_name' => 'setPerishableClassName',
        'perishable_class_oid' => 'setPerishableClassOid',
        'preorder' => 'setPreorder',
        'require_delivery_date' => 'setRequireDeliveryDate',
        'restrict_shipment_on_friday' => 'setRestrictShipmentOnFriday',
        'restrict_shipment_on_monday' => 'setRestrictShipmentOnMonday',
        'restrict_shipment_on_saturday' => 'setRestrictShipmentOnSaturday',
        'restrict_shipment_on_sunday' => 'setRestrictShipmentOnSunday',
        'restrict_shipment_on_thursday' => 'setRestrictShipmentOnThursday',
        'restrict_shipment_on_tuesday' => 'setRestrictShipmentOnTuesday',
        'restrict_shipment_on_wednesday' => 'setRestrictShipmentOnWednesday',
        'ship_separately' => 'setShipSeparately',
        'ship_separately_additional_weight' => 'setShipSeparatelyAdditionalWeight',
        'ship_separately_height' => 'setShipSeparatelyHeight',
        'ship_separately_length' => 'setShipSeparatelyLength',
        'ship_separately_package_special_type' => 'setShipSeparatelyPackageSpecialType',
        'ship_separately_width' => 'setShipSeparatelyWidth',
        'special_product_type' => 'setSpecialProductType',
        'track_inventory' => 'setTrackInventory'
    );

    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'allow_back_order' => 'getAllowBackOrder',
        'amazon_fba' => 'getAmazonFba',
        'case_inner_packs' => 'getCaseInnerPacks',
        'case_units' => 'getCaseUnits',
        'cases' => 'getCases',
        'country_code_of_origin' => 'getCountryCodeOfOrigin',
        'customs_description' => 'getCustomsDescription',
        'customs_value' => 'getCustomsValue',
        'delivery_on_friday' => 'getDeliveryOnFriday',
        'delivery_on_monday' => 'getDeliveryOnMonday',
        'delivery_on_saturday' => 'getDeliveryOnSaturday',
        'delivery_on_sunday' => 'getDeliveryOnSunday',
        'delivery_on_thursday' => 'getDeliveryOnThursday',
        'delivery_on_tuesday' => 'getDeliveryOnTuesday',
        'delivery_on_wednesday' => 'getDeliveryOnWednesday',
        'destination_markups' => 'getDestinationMarkups',
        'destination_restrictions' => 'getDestinationRestrictions',
        'distribution_centers' => 'getDistributionCenters',
        'eta' => 'getEta',
        'free_shipping' => 'getFreeShipping',
        'freight_class' => 'getFreightClass',
        'hazmat' => 'getHazmat',
        'made_to_order' => 'getMadeToOrder',
        'made_to_order_lead_time' => 'getMadeToOrderLeadTime',
        'max_days_time_in_transit' => 'getMaxDaysTimeInTransit',
        'methods' => 'getMethods',
        'no_shipping_discount' => 'getNoShippingDiscount',
        'package_requirements' => 'getPackageRequirements',
        'perishable_class_name' => 'getPerishableClassName',
        'perishable_class_oid' => 'getPerishableClassOid',
        'preorder' => 'getPreorder',
        'require_delivery_date' => 'getRequireDeliveryDate',
        'restrict_shipment_on_friday' => 'getRestrictShipmentOnFriday',
        'restrict_shipment_on_monday' => 'getRestrictShipmentOnMonday',
        'restrict_shipment_on_saturday' => 'getRestrictShipmentOnSaturday',
        'restrict_shipment_on_sunday' => 'getRestrictShipmentOnSunday',
        'restrict_shipment_on_thursday' => 'getRestrictShipmentOnThursday',
        'restrict_shipment_on_tuesday' => 'getRestrictShipmentOnTuesday',
        'restrict_shipment_on_wednesday' => 'getRestrictShipmentOnWednesday',
        'ship_separately' => 'getShipSeparately',
        'ship_separately_additional_weight' => 'getShipSeparatelyAdditionalWeight',
        'ship_separately_height' => 'getShipSeparatelyHeight',
        'ship_separately_length' => 'getShipSeparatelyLength',
        'ship_separately_package_special_type' => 'getShipSeparatelyPackageSpecialType',
        'ship_separately_width' => 'getShipSeparatelyWidth',
        'special_product_type' => 'getSpecialProductType',
        'track_inventory' => 'getTrackInventory'
    );

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['allow_back_order'] = isset($data['allow_back_order']) ? $data['allow_back_order'] : null;
        $this->container['amazon_fba'] = isset($data['amazon_fba']) ? $data['amazon_fba'] : null;
        $this->container['case_inner_packs'] = isset($data['case_inner_packs']) ? $data['case_inner_packs'] : null;
        $this->container['case_units'] = isset($data['case_units']) ? $data['case_units'] : null;
        $this->container['cases'] = isset($data['cases']) ? $data['cases'] : null;
        $this->container['country_code_of_origin'] = isset($data['country_code_of_origin']) ? $data['country_code_of_origin'] : null;
        $this->container['customs_description'] = isset($data['customs_description']) ? $data['customs_description'] : null;
        $this->container['customs_value'] = isset($data['customs_value']) ? $data['customs_value'] : null;
        $this->container['delivery_on_friday'] = isset($data['delivery_on_friday']) ? $data['delivery_on_friday'] : null;
        $this->container['delivery_on_monday'] = isset($data['delivery_on_monday']) ? $data['delivery_on_monday'] : null;
        $this->container['delivery_on_saturday'] = isset($data['delivery_on_saturday']) ? $data['delivery_on_saturday'] : null;
        $this->container['delivery_on_sunday'] = isset($data['delivery_on_sunday']) ? $data['delivery_on_sunday'] : null;
        $this->container['delivery_on_thursday'] = isset($data['delivery_on_thursday']) ? $data['delivery_on_thursday'] : null;
        $this->container['delivery_on_tuesday'] = isset($data['delivery_on_tuesday']) ? $data['delivery_on_tuesday'] : null;
        $this->container['delivery_on_wednesday'] = isset($data['delivery_on_wednesday']) ? $data['delivery_on_wednesday'] : null;
        $this->container['destination_markups'] = isset($data['destination_markups']) ? $data['destination_markups'] : null;
        $this->container['destination_restrictions'] = isset($data['destination_restrictions']) ? $data['destination_restrictions'] : null;
        $this->container['distribution_centers'] = isset($data['distribution_centers']) ? $data['distribution_centers'] : null;
        $this->container['eta'] = isset($data['eta']) ? $data['eta'] : null;
        $this->container['free_shipping'] = isset($data['free_shipping']) ? $data['free_shipping'] : null;
        $this->container['freight_class'] = isset($data['freight_class']) ? $data['freight_class'] : null;
        $this->container['hazmat'] = isset($data['hazmat']) ? $data['hazmat'] : null;
        $this->container['made_to_order'] = isset($data['made_to_order']) ? $data['made_to_order'] : null;
        $this->container['made_to_order_lead_time'] = isset($data['made_to_order_lead_time']) ? $data['made_to_order_lead_time'] : null;
        $this->container['max_days_time_in_transit'] = isset($data['max_days_time_in_transit']) ? $data['max_days_time_in_transit'] : null;
        $this->container['methods'] = isset($data['methods']) ? $data['methods'] : null;
        $this->container['no_shipping_discount'] = isset($data['no_shipping_discount']) ? $data['no_shipping_discount'] : null;
        $this->container['package_requirements'] = isset($data['package_requirements']) ? $data['package_requirements'] : null;
        $this->container['perishable_class_name'] = isset($data['perishable_class_name']) ? $data['perishable_class_name'] : null;
        $this->container['perishable_class_oid'] = isset($data['perishable_class_oid']) ? $data['perishable_class_oid'] : null;
        $this->container['preorder'] = isset($data['preorder']) ? $data['preorder'] : null;
        $this->container['require_delivery_date'] = isset($data['require_delivery_date']) ? $data['require_delivery_date'] : null;
        $this->container['restrict_shipment_on_friday'] = isset($data['restrict_shipment_on_friday']) ? $data['restrict_shipment_on_friday'] : null;
        $this->container['restrict_shipment_on_monday'] = isset($data['restrict_shipment_on_monday']) ? $data['restrict_shipment_on_monday'] : null;
        $this->container['restrict_shipment_on_saturday'] = isset($data['restrict_shipment_on_saturday']) ? $data['restrict_shipment_on_saturday'] : null;
        $this->container['restrict_shipment_on_sunday'] = isset($data['restrict_shipment_on_sunday']) ? $data['restrict_shipment_on_sunday'] : null;
        $this->container['restrict_shipment_on_thursday'] = isset($data['restrict_shipment_on_thursday']) ? $data['restrict_shipment_on_thursday'] : null;
        $this->container['restrict_shipment_on_tuesday'] = isset($data['restrict_shipment_on_tuesday']) ? $data['restrict_shipment_on_tuesday'] : null;
        $this->container['restrict_shipment_on_wednesday'] = isset($data['restrict_shipment_on_wednesday']) ? $data['restrict_shipment_on_wednesday'] : null;
        $this->container['ship_separately'] = isset($data['ship_separately']) ? $data['ship_separately'] : null;
        $this->container['ship_separately_additional_weight'] = isset($data['ship_separately_additional_weight']) ? $data['ship_separately_additional_weight'] : null;
        $this->container['ship_separately_height'] = isset($data['ship_separately_height']) ? $data['ship_separately_height'] : null;
        $this->container['ship_separately_length'] = isset($data['ship_separately_length']) ? $data['ship_separately_length'] : null;
        $this->container['ship_separately_package_special_type'] = isset($data['ship_separately_package_special_type']) ? $data['ship_separately_package_special_type'] : null;
        $this->container['ship_separately_width'] = isset($data['ship_separately_width']) ? $data['ship_separately_width'] : null;
        $this->container['special_product_type'] = isset($data['special_product_type']) ? $data['special_product_type'] : null;
        $this->container['track_inventory'] = isset($data['track_inventory']) ? $data['track_inventory'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        if (!is_null($this->container['country_code_of_origin']) && (strlen($this->container['country_code_of_origin']) > 2)) {
            $invalid_properties[] = "invalid value for 'country_code_of_origin', the character length must be smaller than or equal to 2.";
        }

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if (strlen($this->container['country_code_of_origin']) > 2) {
            return false;
        }
        return true;
    }


    /**
     * Gets allow_back_order
     * @return bool
     */
    public function getAllowBackOrder()
    {
        return $this->container['allow_back_order'];
    }

    /**
     * Sets allow_back_order
     * @param bool $allow_back_order Allow back order
     * @return $this
     */
    public function setAllowBackOrder($allow_back_order)
    {
        $this->container['allow_back_order'] = $allow_back_order;

        return $this;
    }

    /**
     * Gets amazon_fba
     * @return bool
     */
    public function getAmazonFba()
    {
        return $this->container['amazon_fba'];
    }

    /**
     * Sets amazon_fba
     * @param bool $amazon_fba Fulfillment by Amazon.com
     * @return $this
     */
    public function setAmazonFba($amazon_fba)
    {
        $this->container['amazon_fba'] = $amazon_fba;

        return $this;
    }

    /**
     * Gets case_inner_packs
     * @return int
     */
    public function getCaseInnerPacks()
    {
        return $this->container['case_inner_packs'];
    }

    /**
     * Sets case_inner_packs
     * @param int $case_inner_packs Case inner packs
     * @return $this
     */
    public function setCaseInnerPacks($case_inner_packs)
    {
        $this->container['case_inner_packs'] = $case_inner_packs;

        return $this;
    }

    /**
     * Gets case_units
     * @return int
     */
    public function getCaseUnits()
    {
        return $this->container['case_units'];
    }

    /**
     * Sets case_units
     * @param int $case_units Case units
     * @return $this
     */
    public function setCaseUnits($case_units)
    {
        $this->container['case_units'] = $case_units;

        return $this;
    }

    /**
     * Gets cases
     * @return \ultracart\v2\models\ItemShippingCase[]
     */
    public function getCases()
    {
        return $this->container['cases'];
    }

    /**
     * Sets cases
     * @param \ultracart\v2\models\ItemShippingCase[] $cases Cases
     * @return $this
     */
    public function setCases($cases)
    {
        $this->container['cases'] = $cases;

        return $this;
    }

    /**
     * Gets country_code_of_origin
     * @return string
     */
    public function getCountryCodeOfOrigin()
    {
        return $this->container['country_code_of_origin'];
    }

    /**
     * Sets country_code_of_origin
     * @param string $country_code_of_origin Country code of origin for customs forms.  (ISO-3166 two letter code)
     * @return $this
     */
    public function setCountryCodeOfOrigin($country_code_of_origin)
    {
        if (strlen($country_code_of_origin) > 2) {
            throw new \InvalidArgumentException('invalid length for $country_code_of_origin when calling ItemShipping., must be smaller than or equal to 2.');
        }
        $this->container['country_code_of_origin'] = $country_code_of_origin;

        return $this;
    }

    /**
     * Gets customs_description
     * @return string
     */
    public function getCustomsDescription()
    {
        return $this->container['customs_description'];
    }

    /**
     * Sets customs_description
     * @param string $customs_description Customs description
     * @return $this
     */
    public function setCustomsDescription($customs_description)
    {
        $this->container['customs_description'] = $customs_description;

        return $this;
    }

    /**
     * Gets customs_value
     * @return float
     */
    public function getCustomsValue()
    {
        return $this->container['customs_value'];
    }

    /**
     * Sets customs_value
     * @param float $customs_value Customs value
     * @return $this
     */
    public function setCustomsValue($customs_value)
    {
        $this->container['customs_value'] = $customs_value;

        return $this;
    }

    /**
     * Gets delivery_on_friday
     * @return bool
     */
    public function getDeliveryOnFriday()
    {
        return $this->container['delivery_on_friday'];
    }

    /**
     * Sets delivery_on_friday
     * @param bool $delivery_on_friday Delivery on Friday
     * @return $this
     */
    public function setDeliveryOnFriday($delivery_on_friday)
    {
        $this->container['delivery_on_friday'] = $delivery_on_friday;

        return $this;
    }

    /**
     * Gets delivery_on_monday
     * @return bool
     */
    public function getDeliveryOnMonday()
    {
        return $this->container['delivery_on_monday'];
    }

    /**
     * Sets delivery_on_monday
     * @param bool $delivery_on_monday Delivery on Monday
     * @return $this
     */
    public function setDeliveryOnMonday($delivery_on_monday)
    {
        $this->container['delivery_on_monday'] = $delivery_on_monday;

        return $this;
    }

    /**
     * Gets delivery_on_saturday
     * @return bool
     */
    public function getDeliveryOnSaturday()
    {
        return $this->container['delivery_on_saturday'];
    }

    /**
     * Sets delivery_on_saturday
     * @param bool $delivery_on_saturday Delivery on Saturday
     * @return $this
     */
    public function setDeliveryOnSaturday($delivery_on_saturday)
    {
        $this->container['delivery_on_saturday'] = $delivery_on_saturday;

        return $this;
    }

    /**
     * Gets delivery_on_sunday
     * @return bool
     */
    public function getDeliveryOnSunday()
    {
        return $this->container['delivery_on_sunday'];
    }

    /**
     * Sets delivery_on_sunday
     * @param bool $delivery_on_sunday Delivery on Sunday
     * @return $this
     */
    public function setDeliveryOnSunday($delivery_on_sunday)
    {
        $this->container['delivery_on_sunday'] = $delivery_on_sunday;

        return $this;
    }

    /**
     * Gets delivery_on_thursday
     * @return bool
     */
    public function getDeliveryOnThursday()
    {
        return $this->container['delivery_on_thursday'];
    }

    /**
     * Sets delivery_on_thursday
     * @param bool $delivery_on_thursday Delivery on Thursday
     * @return $this
     */
    public function setDeliveryOnThursday($delivery_on_thursday)
    {
        $this->container['delivery_on_thursday'] = $delivery_on_thursday;

        return $this;
    }

    /**
     * Gets delivery_on_tuesday
     * @return bool
     */
    public function getDeliveryOnTuesday()
    {
        return $this->container['delivery_on_tuesday'];
    }

    /**
     * Sets delivery_on_tuesday
     * @param bool $delivery_on_tuesday Delivery on Tuesday
     * @return $this
     */
    public function setDeliveryOnTuesday($delivery_on_tuesday)
    {
        $this->container['delivery_on_tuesday'] = $delivery_on_tuesday;

        return $this;
    }

    /**
     * Gets delivery_on_wednesday
     * @return bool
     */
    public function getDeliveryOnWednesday()
    {
        return $this->container['delivery_on_wednesday'];
    }

    /**
     * Sets delivery_on_wednesday
     * @param bool $delivery_on_wednesday Delivery on Wednesday
     * @return $this
     */
    public function setDeliveryOnWednesday($delivery_on_wednesday)
    {
        $this->container['delivery_on_wednesday'] = $delivery_on_wednesday;

        return $this;
    }

    /**
     * Gets destination_markups
     * @return \ultracart\v2\models\ItemShippingDestinationMarkup[]
     */
    public function getDestinationMarkups()
    {
        return $this->container['destination_markups'];
    }

    /**
     * Sets destination_markups
     * @param \ultracart\v2\models\ItemShippingDestinationMarkup[] $destination_markups Destination markups
     * @return $this
     */
    public function setDestinationMarkups($destination_markups)
    {
        $this->container['destination_markups'] = $destination_markups;

        return $this;
    }

    /**
     * Gets destination_restrictions
     * @return \ultracart\v2\models\ItemShippingDestinationRestriction[]
     */
    public function getDestinationRestrictions()
    {
        return $this->container['destination_restrictions'];
    }

    /**
     * Sets destination_restrictions
     * @param \ultracart\v2\models\ItemShippingDestinationRestriction[] $destination_restrictions Destination restrictions
     * @return $this
     */
    public function setDestinationRestrictions($destination_restrictions)
    {
        $this->container['destination_restrictions'] = $destination_restrictions;

        return $this;
    }

    /**
     * Gets distribution_centers
     * @return \ultracart\v2\models\ItemShippingDistributionCenter[]
     */
    public function getDistributionCenters()
    {
        return $this->container['distribution_centers'];
    }

    /**
     * Sets distribution_centers
     * @param \ultracart\v2\models\ItemShippingDistributionCenter[] $distribution_centers Distribution centers
     * @return $this
     */
    public function setDistributionCenters($distribution_centers)
    {
        $this->container['distribution_centers'] = $distribution_centers;

        return $this;
    }

    /**
     * Gets eta
     * @return string
     */
    public function getEta()
    {
        return $this->container['eta'];
    }

    /**
     * Sets eta
     * @param string $eta Estimated time of arrival
     * @return $this
     */
    public function setEta($eta)
    {
        $this->container['eta'] = $eta;

        return $this;
    }

    /**
     * Gets free_shipping
     * @return bool
     */
    public function getFreeShipping()
    {
        return $this->container['free_shipping'];
    }

    /**
     * Sets free_shipping
     * @param bool $free_shipping Qualifies for free shipping
     * @return $this
     */
    public function setFreeShipping($free_shipping)
    {
        $this->container['free_shipping'] = $free_shipping;

        return $this;
    }

    /**
     * Gets freight_class
     * @return string
     */
    public function getFreightClass()
    {
        return $this->container['freight_class'];
    }

    /**
     * Sets freight_class
     * @param string $freight_class Freight class
     * @return $this
     */
    public function setFreightClass($freight_class)
    {
        $this->container['freight_class'] = $freight_class;

        return $this;
    }

    /**
     * Gets hazmat
     * @return bool
     */
    public function getHazmat()
    {
        return $this->container['hazmat'];
    }

    /**
     * Sets hazmat
     * @param bool $hazmat Hazardous material
     * @return $this
     */
    public function setHazmat($hazmat)
    {
        $this->container['hazmat'] = $hazmat;

        return $this;
    }

    /**
     * Gets made_to_order
     * @return bool
     */
    public function getMadeToOrder()
    {
        return $this->container['made_to_order'];
    }

    /**
     * Sets made_to_order
     * @param bool $made_to_order True if this item is made to order
     * @return $this
     */
    public function setMadeToOrder($made_to_order)
    {
        $this->container['made_to_order'] = $made_to_order;

        return $this;
    }

    /**
     * Gets made_to_order_lead_time
     * @return int
     */
    public function getMadeToOrderLeadTime()
    {
        return $this->container['made_to_order_lead_time'];
    }

    /**
     * Sets made_to_order_lead_time
     * @param int $made_to_order_lead_time Number of days lead time it takes to make the item before ite can ship
     * @return $this
     */
    public function setMadeToOrderLeadTime($made_to_order_lead_time)
    {
        $this->container['made_to_order_lead_time'] = $made_to_order_lead_time;

        return $this;
    }

    /**
     * Gets max_days_time_in_transit
     * @return int
     */
    public function getMaxDaysTimeInTransit()
    {
        return $this->container['max_days_time_in_transit'];
    }

    /**
     * Sets max_days_time_in_transit
     * @param int $max_days_time_in_transit Maximum days allowed in transit
     * @return $this
     */
    public function setMaxDaysTimeInTransit($max_days_time_in_transit)
    {
        $this->container['max_days_time_in_transit'] = $max_days_time_in_transit;

        return $this;
    }

    /**
     * Gets methods
     * @return \ultracart\v2\models\ItemShippingMethod[]
     */
    public function getMethods()
    {
        return $this->container['methods'];
    }

    /**
     * Sets methods
     * @param \ultracart\v2\models\ItemShippingMethod[] $methods Methods
     * @return $this
     */
    public function setMethods($methods)
    {
        $this->container['methods'] = $methods;

        return $this;
    }

    /**
     * Gets no_shipping_discount
     * @return bool
     */
    public function getNoShippingDiscount()
    {
        return $this->container['no_shipping_discount'];
    }

    /**
     * Sets no_shipping_discount
     * @param bool $no_shipping_discount No shipping discounts
     * @return $this
     */
    public function setNoShippingDiscount($no_shipping_discount)
    {
        $this->container['no_shipping_discount'] = $no_shipping_discount;

        return $this;
    }

    /**
     * Gets package_requirements
     * @return \ultracart\v2\models\ItemShippingPackageRequirement[]
     */
    public function getPackageRequirements()
    {
        return $this->container['package_requirements'];
    }

    /**
     * Sets package_requirements
     * @param \ultracart\v2\models\ItemShippingPackageRequirement[] $package_requirements Package requirements
     * @return $this
     */
    public function setPackageRequirements($package_requirements)
    {
        $this->container['package_requirements'] = $package_requirements;

        return $this;
    }

    /**
     * Gets perishable_class_name
     * @return string
     */
    public function getPerishableClassName()
    {
        return $this->container['perishable_class_name'];
    }

    /**
     * Sets perishable_class_name
     * @param string $perishable_class_name Perishable class name
     * @return $this
     */
    public function setPerishableClassName($perishable_class_name)
    {
        $this->container['perishable_class_name'] = $perishable_class_name;

        return $this;
    }

    /**
     * Gets perishable_class_oid
     * @return int
     */
    public function getPerishableClassOid()
    {
        return $this->container['perishable_class_oid'];
    }

    /**
     * Sets perishable_class_oid
     * @param int $perishable_class_oid Perishable class object identifier
     * @return $this
     */
    public function setPerishableClassOid($perishable_class_oid)
    {
        $this->container['perishable_class_oid'] = $perishable_class_oid;

        return $this;
    }

    /**
     * Gets preorder
     * @return bool
     */
    public function getPreorder()
    {
        return $this->container['preorder'];
    }

    /**
     * Sets preorder
     * @param bool $preorder This item is on pre-order
     * @return $this
     */
    public function setPreorder($preorder)
    {
        $this->container['preorder'] = $preorder;

        return $this;
    }

    /**
     * Gets require_delivery_date
     * @return bool
     */
    public function getRequireDeliveryDate()
    {
        return $this->container['require_delivery_date'];
    }

    /**
     * Sets require_delivery_date
     * @param bool $require_delivery_date True to require customer to select a delivery date
     * @return $this
     */
    public function setRequireDeliveryDate($require_delivery_date)
    {
        $this->container['require_delivery_date'] = $require_delivery_date;

        return $this;
    }

    /**
     * Gets restrict_shipment_on_friday
     * @return bool
     */
    public function getRestrictShipmentOnFriday()
    {
        return $this->container['restrict_shipment_on_friday'];
    }

    /**
     * Sets restrict_shipment_on_friday
     * @param bool $restrict_shipment_on_friday Restrict shipment on Friday
     * @return $this
     */
    public function setRestrictShipmentOnFriday($restrict_shipment_on_friday)
    {
        $this->container['restrict_shipment_on_friday'] = $restrict_shipment_on_friday;

        return $this;
    }

    /**
     * Gets restrict_shipment_on_monday
     * @return bool
     */
    public function getRestrictShipmentOnMonday()
    {
        return $this->container['restrict_shipment_on_monday'];
    }

    /**
     * Sets restrict_shipment_on_monday
     * @param bool $restrict_shipment_on_monday Restrict shipment on Monday
     * @return $this
     */
    public function setRestrictShipmentOnMonday($restrict_shipment_on_monday)
    {
        $this->container['restrict_shipment_on_monday'] = $restrict_shipment_on_monday;

        return $this;
    }

    /**
     * Gets restrict_shipment_on_saturday
     * @return bool
     */
    public function getRestrictShipmentOnSaturday()
    {
        return $this->container['restrict_shipment_on_saturday'];
    }

    /**
     * Sets restrict_shipment_on_saturday
     * @param bool $restrict_shipment_on_saturday Restrict shipment on Saturday
     * @return $this
     */
    public function setRestrictShipmentOnSaturday($restrict_shipment_on_saturday)
    {
        $this->container['restrict_shipment_on_saturday'] = $restrict_shipment_on_saturday;

        return $this;
    }

    /**
     * Gets restrict_shipment_on_sunday
     * @return bool
     */
    public function getRestrictShipmentOnSunday()
    {
        return $this->container['restrict_shipment_on_sunday'];
    }

    /**
     * Sets restrict_shipment_on_sunday
     * @param bool $restrict_shipment_on_sunday Restrict shipment on Sunday
     * @return $this
     */
    public function setRestrictShipmentOnSunday($restrict_shipment_on_sunday)
    {
        $this->container['restrict_shipment_on_sunday'] = $restrict_shipment_on_sunday;

        return $this;
    }

    /**
     * Gets restrict_shipment_on_thursday
     * @return bool
     */
    public function getRestrictShipmentOnThursday()
    {
        return $this->container['restrict_shipment_on_thursday'];
    }

    /**
     * Sets restrict_shipment_on_thursday
     * @param bool $restrict_shipment_on_thursday Restrict shipment on Thursday
     * @return $this
     */
    public function setRestrictShipmentOnThursday($restrict_shipment_on_thursday)
    {
        $this->container['restrict_shipment_on_thursday'] = $restrict_shipment_on_thursday;

        return $this;
    }

    /**
     * Gets restrict_shipment_on_tuesday
     * @return bool
     */
    public function getRestrictShipmentOnTuesday()
    {
        return $this->container['restrict_shipment_on_tuesday'];
    }

    /**
     * Sets restrict_shipment_on_tuesday
     * @param bool $restrict_shipment_on_tuesday Restrict shipment on Tuesday
     * @return $this
     */
    public function setRestrictShipmentOnTuesday($restrict_shipment_on_tuesday)
    {
        $this->container['restrict_shipment_on_tuesday'] = $restrict_shipment_on_tuesday;

        return $this;
    }

    /**
     * Gets restrict_shipment_on_wednesday
     * @return bool
     */
    public function getRestrictShipmentOnWednesday()
    {
        return $this->container['restrict_shipment_on_wednesday'];
    }

    /**
     * Sets restrict_shipment_on_wednesday
     * @param bool $restrict_shipment_on_wednesday Restrict shipment on Wednesday
     * @return $this
     */
    public function setRestrictShipmentOnWednesday($restrict_shipment_on_wednesday)
    {
        $this->container['restrict_shipment_on_wednesday'] = $restrict_shipment_on_wednesday;

        return $this;
    }

    /**
     * Gets ship_separately
     * @return bool
     */
    public function getShipSeparately()
    {
        return $this->container['ship_separately'];
    }

    /**
     * Sets ship_separately
     * @param bool $ship_separately Ship this item in a separate box
     * @return $this
     */
    public function setShipSeparately($ship_separately)
    {
        $this->container['ship_separately'] = $ship_separately;

        return $this;
    }

    /**
     * Gets ship_separately_additional_weight
     * @return \ultracart\v2\models\Weight
     */
    public function getShipSeparatelyAdditionalWeight()
    {
        return $this->container['ship_separately_additional_weight'];
    }

    /**
     * Sets ship_separately_additional_weight
     * @param \ultracart\v2\models\Weight $ship_separately_additional_weight
     * @return $this
     */
    public function setShipSeparatelyAdditionalWeight($ship_separately_additional_weight)
    {
        $this->container['ship_separately_additional_weight'] = $ship_separately_additional_weight;

        return $this;
    }

    /**
     * Gets ship_separately_height
     * @return \ultracart\v2\models\Distance
     */
    public function getShipSeparatelyHeight()
    {
        return $this->container['ship_separately_height'];
    }

    /**
     * Sets ship_separately_height
     * @param \ultracart\v2\models\Distance $ship_separately_height
     * @return $this
     */
    public function setShipSeparatelyHeight($ship_separately_height)
    {
        $this->container['ship_separately_height'] = $ship_separately_height;

        return $this;
    }

    /**
     * Gets ship_separately_length
     * @return \ultracart\v2\models\Distance
     */
    public function getShipSeparatelyLength()
    {
        return $this->container['ship_separately_length'];
    }

    /**
     * Sets ship_separately_length
     * @param \ultracart\v2\models\Distance $ship_separately_length
     * @return $this
     */
    public function setShipSeparatelyLength($ship_separately_length)
    {
        $this->container['ship_separately_length'] = $ship_separately_length;

        return $this;
    }

    /**
     * Gets ship_separately_package_special_type
     * @return string
     */
    public function getShipSeparatelyPackageSpecialType()
    {
        return $this->container['ship_separately_package_special_type'];
    }

    /**
     * Sets ship_separately_package_special_type
     * @param string $ship_separately_package_special_type Ship separately package special type
     * @return $this
     */
    public function setShipSeparatelyPackageSpecialType($ship_separately_package_special_type)
    {
        $this->container['ship_separately_package_special_type'] = $ship_separately_package_special_type;

        return $this;
    }

    /**
     * Gets ship_separately_width
     * @return \ultracart\v2\models\Distance
     */
    public function getShipSeparatelyWidth()
    {
        return $this->container['ship_separately_width'];
    }

    /**
     * Sets ship_separately_width
     * @param \ultracart\v2\models\Distance $ship_separately_width
     * @return $this
     */
    public function setShipSeparatelyWidth($ship_separately_width)
    {
        $this->container['ship_separately_width'] = $ship_separately_width;

        return $this;
    }

    /**
     * Gets special_product_type
     * @return string
     */
    public function getSpecialProductType()
    {
        return $this->container['special_product_type'];
    }

    /**
     * Sets special_product_type
     * @param string $special_product_type Special product type (USPS Media Mail)
     * @return $this
     */
    public function setSpecialProductType($special_product_type)
    {
        $this->container['special_product_type'] = $special_product_type;

        return $this;
    }

    /**
     * Gets track_inventory
     * @return bool
     */
    public function getTrackInventory()
    {
        return $this->container['track_inventory'];
    }

    /**
     * Sets track_inventory
     * @param bool $track_inventory Track inventory
     * @return $this
     */
    public function setTrackInventory($track_inventory)
    {
        $this->container['track_inventory'] = $track_inventory;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\ultracart\v2\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\ultracart\v2\ObjectSerializer::sanitizeForSerialization($this));
    }
}


