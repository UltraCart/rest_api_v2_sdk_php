<?php
/**
 * ScreenRecordingFilter
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace ultracart\v2\models;

use \ArrayAccess;
use \ultracart\v2\ObjectSerializer;

/**
 * ScreenRecordingFilter Class Doc Comment
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ScreenRecordingFilter implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ScreenRecordingFilter';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'affiliate_email' => 'string',
        'affiliate_id' => 'int',
        'communications_campaign_name' => 'string',
        'communications_campaign_name_filter' => 'bool',
        'communications_email_subject' => 'string',
        'communications_email_subject_filter' => 'bool',
        'communications_flow_name' => 'string',
        'communications_flow_name_filter' => 'bool',
        'email' => '\ultracart\v2\models\ScreenRecordingFilterStringSearch',
        'email_domain' => 'string',
        'email_domain_filter' => 'bool',
        'email_identified' => 'bool',
        'end_timestamp' => '\ultracart\v2\models\ScreenRecordingFilterRangeDate',
        'esp_customer_uuid' => 'string',
        'favorite' => 'bool',
        'geolocation' => '\ultracart\v2\models\ScreenRecordingFilterGeoDistance',
        'geolocation_country' => '\ultracart\v2\models\ScreenRecordingFilterStringSearch',
        'geolocation_country_filter' => 'bool',
        'geolocation_state' => '\ultracart\v2\models\ScreenRecordingFilterStringSearch',
        'geolocation_state_filter' => 'bool',
        'language_iso_code' => '\ultracart\v2\models\ScreenRecordingFilterStringSearch',
        'language_iso_code_filter' => 'bool',
        'last_x_days' => 'int',
        'max_filter_values' => 'int',
        'order_id' => '\ultracart\v2\models\ScreenRecordingFilterStringSearch',
        'page_view_count' => '\ultracart\v2\models\ScreenRecordingFilterRangeInteger',
        'page_views' => '\ultracart\v2\models\ScreenRecordingFilterPageView[]',
        'placed_order' => 'bool',
        'preferred_language' => '\ultracart\v2\models\ScreenRecordingFilterStringSearch',
        'preferred_language_filter' => 'bool',
        'referrer_domain' => 'string',
        'referrer_domain_filter' => 'bool',
        'screen_recording_uuids' => 'string[]',
        'screen_sizes' => 'string[]',
        'skip_filter_values' => 'bool',
        'skip_histogram' => 'bool',
        'skip_hits' => 'bool',
        'start_timestamp' => '\ultracart\v2\models\ScreenRecordingFilterRangeDate',
        'tags' => 'string[]',
        'time_on_site' => '\ultracart\v2\models\ScreenRecordingFilterRangeInteger',
        'time_on_site_max_filter' => 'bool',
        'time_on_site_min_filter' => 'bool',
        'url_filter' => 'bool',
        'user_agent_device_name' => 'string',
        'user_agent_device_name_filter' => 'bool',
        'user_agent_device_os_name_filter' => 'bool',
        'user_agent_device_os_version_filter' => 'bool',
        'user_agent_name' => 'string',
        'user_agent_name_filter' => 'bool',
        'user_agent_original' => '\ultracart\v2\models\ScreenRecordingFilterStringSearch',
        'user_agent_original_filter' => 'bool',
        'user_agent_os_name' => 'string',
        'user_agent_os_version' => 'string',
        'user_ip' => '\ultracart\v2\models\ScreenRecordingFilterIpSearch',
        'utm_campaign' => 'string',
        'utm_campaign_filter' => 'bool',
        'utm_source' => 'string',
        'utm_source_filter' => 'bool',
        'visitor_number' => 'int',
        'watched' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'affiliate_email' => null,
        'affiliate_id' => 'int32',
        'communications_campaign_name' => null,
        'communications_campaign_name_filter' => null,
        'communications_email_subject' => null,
        'communications_email_subject_filter' => null,
        'communications_flow_name' => null,
        'communications_flow_name_filter' => null,
        'email' => null,
        'email_domain' => null,
        'email_domain_filter' => null,
        'email_identified' => null,
        'end_timestamp' => null,
        'esp_customer_uuid' => null,
        'favorite' => null,
        'geolocation' => null,
        'geolocation_country' => null,
        'geolocation_country_filter' => null,
        'geolocation_state' => null,
        'geolocation_state_filter' => null,
        'language_iso_code' => null,
        'language_iso_code_filter' => null,
        'last_x_days' => 'int32',
        'max_filter_values' => 'int32',
        'order_id' => null,
        'page_view_count' => null,
        'page_views' => null,
        'placed_order' => null,
        'preferred_language' => null,
        'preferred_language_filter' => null,
        'referrer_domain' => null,
        'referrer_domain_filter' => null,
        'screen_recording_uuids' => null,
        'screen_sizes' => null,
        'skip_filter_values' => null,
        'skip_histogram' => null,
        'skip_hits' => null,
        'start_timestamp' => null,
        'tags' => null,
        'time_on_site' => null,
        'time_on_site_max_filter' => null,
        'time_on_site_min_filter' => null,
        'url_filter' => null,
        'user_agent_device_name' => null,
        'user_agent_device_name_filter' => null,
        'user_agent_device_os_name_filter' => null,
        'user_agent_device_os_version_filter' => null,
        'user_agent_name' => null,
        'user_agent_name_filter' => null,
        'user_agent_original' => null,
        'user_agent_original_filter' => null,
        'user_agent_os_name' => null,
        'user_agent_os_version' => null,
        'user_ip' => null,
        'utm_campaign' => null,
        'utm_campaign_filter' => null,
        'utm_source' => null,
        'utm_source_filter' => null,
        'visitor_number' => 'int32',
        'watched' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'affiliate_email' => 'affiliate_email',
        'affiliate_id' => 'affiliate_id',
        'communications_campaign_name' => 'communications_campaign_name',
        'communications_campaign_name_filter' => 'communications_campaign_name_filter',
        'communications_email_subject' => 'communications_email_subject',
        'communications_email_subject_filter' => 'communications_email_subject_filter',
        'communications_flow_name' => 'communications_flow_name',
        'communications_flow_name_filter' => 'communications_flow_name_filter',
        'email' => 'email',
        'email_domain' => 'email_domain',
        'email_domain_filter' => 'email_domain_filter',
        'email_identified' => 'email_identified',
        'end_timestamp' => 'end_timestamp',
        'esp_customer_uuid' => 'esp_customer_uuid',
        'favorite' => 'favorite',
        'geolocation' => 'geolocation',
        'geolocation_country' => 'geolocation_country',
        'geolocation_country_filter' => 'geolocation_country_filter',
        'geolocation_state' => 'geolocation_state',
        'geolocation_state_filter' => 'geolocation_state_filter',
        'language_iso_code' => 'language_iso_code',
        'language_iso_code_filter' => 'language_iso_code_filter',
        'last_x_days' => 'last_x_days',
        'max_filter_values' => 'max_filter_values',
        'order_id' => 'order_id',
        'page_view_count' => 'page_view_count',
        'page_views' => 'page_views',
        'placed_order' => 'placed_order',
        'preferred_language' => 'preferred_language',
        'preferred_language_filter' => 'preferred_language_filter',
        'referrer_domain' => 'referrer_domain',
        'referrer_domain_filter' => 'referrer_domain_filter',
        'screen_recording_uuids' => 'screen_recording_uuids',
        'screen_sizes' => 'screen_sizes',
        'skip_filter_values' => 'skip_filter_values',
        'skip_histogram' => 'skip_histogram',
        'skip_hits' => 'skip_hits',
        'start_timestamp' => 'start_timestamp',
        'tags' => 'tags',
        'time_on_site' => 'time_on_site',
        'time_on_site_max_filter' => 'time_on_site_max_filter',
        'time_on_site_min_filter' => 'time_on_site_min_filter',
        'url_filter' => 'url_filter',
        'user_agent_device_name' => 'user_agent_device_name',
        'user_agent_device_name_filter' => 'user_agent_device_name_filter',
        'user_agent_device_os_name_filter' => 'user_agent_device_os_name_filter',
        'user_agent_device_os_version_filter' => 'user_agent_device_os_version_filter',
        'user_agent_name' => 'user_agent_name',
        'user_agent_name_filter' => 'user_agent_name_filter',
        'user_agent_original' => 'user_agent_original',
        'user_agent_original_filter' => 'user_agent_original_filter',
        'user_agent_os_name' => 'user_agent_os_name',
        'user_agent_os_version' => 'user_agent_os_version',
        'user_ip' => 'user_ip',
        'utm_campaign' => 'utm_campaign',
        'utm_campaign_filter' => 'utm_campaign_filter',
        'utm_source' => 'utm_source',
        'utm_source_filter' => 'utm_source_filter',
        'visitor_number' => 'visitor_number',
        'watched' => 'watched'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'affiliate_email' => 'setAffiliateEmail',
        'affiliate_id' => 'setAffiliateId',
        'communications_campaign_name' => 'setCommunicationsCampaignName',
        'communications_campaign_name_filter' => 'setCommunicationsCampaignNameFilter',
        'communications_email_subject' => 'setCommunicationsEmailSubject',
        'communications_email_subject_filter' => 'setCommunicationsEmailSubjectFilter',
        'communications_flow_name' => 'setCommunicationsFlowName',
        'communications_flow_name_filter' => 'setCommunicationsFlowNameFilter',
        'email' => 'setEmail',
        'email_domain' => 'setEmailDomain',
        'email_domain_filter' => 'setEmailDomainFilter',
        'email_identified' => 'setEmailIdentified',
        'end_timestamp' => 'setEndTimestamp',
        'esp_customer_uuid' => 'setEspCustomerUuid',
        'favorite' => 'setFavorite',
        'geolocation' => 'setGeolocation',
        'geolocation_country' => 'setGeolocationCountry',
        'geolocation_country_filter' => 'setGeolocationCountryFilter',
        'geolocation_state' => 'setGeolocationState',
        'geolocation_state_filter' => 'setGeolocationStateFilter',
        'language_iso_code' => 'setLanguageIsoCode',
        'language_iso_code_filter' => 'setLanguageIsoCodeFilter',
        'last_x_days' => 'setLastXDays',
        'max_filter_values' => 'setMaxFilterValues',
        'order_id' => 'setOrderId',
        'page_view_count' => 'setPageViewCount',
        'page_views' => 'setPageViews',
        'placed_order' => 'setPlacedOrder',
        'preferred_language' => 'setPreferredLanguage',
        'preferred_language_filter' => 'setPreferredLanguageFilter',
        'referrer_domain' => 'setReferrerDomain',
        'referrer_domain_filter' => 'setReferrerDomainFilter',
        'screen_recording_uuids' => 'setScreenRecordingUuids',
        'screen_sizes' => 'setScreenSizes',
        'skip_filter_values' => 'setSkipFilterValues',
        'skip_histogram' => 'setSkipHistogram',
        'skip_hits' => 'setSkipHits',
        'start_timestamp' => 'setStartTimestamp',
        'tags' => 'setTags',
        'time_on_site' => 'setTimeOnSite',
        'time_on_site_max_filter' => 'setTimeOnSiteMaxFilter',
        'time_on_site_min_filter' => 'setTimeOnSiteMinFilter',
        'url_filter' => 'setUrlFilter',
        'user_agent_device_name' => 'setUserAgentDeviceName',
        'user_agent_device_name_filter' => 'setUserAgentDeviceNameFilter',
        'user_agent_device_os_name_filter' => 'setUserAgentDeviceOsNameFilter',
        'user_agent_device_os_version_filter' => 'setUserAgentDeviceOsVersionFilter',
        'user_agent_name' => 'setUserAgentName',
        'user_agent_name_filter' => 'setUserAgentNameFilter',
        'user_agent_original' => 'setUserAgentOriginal',
        'user_agent_original_filter' => 'setUserAgentOriginalFilter',
        'user_agent_os_name' => 'setUserAgentOsName',
        'user_agent_os_version' => 'setUserAgentOsVersion',
        'user_ip' => 'setUserIp',
        'utm_campaign' => 'setUtmCampaign',
        'utm_campaign_filter' => 'setUtmCampaignFilter',
        'utm_source' => 'setUtmSource',
        'utm_source_filter' => 'setUtmSourceFilter',
        'visitor_number' => 'setVisitorNumber',
        'watched' => 'setWatched'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'affiliate_email' => 'getAffiliateEmail',
        'affiliate_id' => 'getAffiliateId',
        'communications_campaign_name' => 'getCommunicationsCampaignName',
        'communications_campaign_name_filter' => 'getCommunicationsCampaignNameFilter',
        'communications_email_subject' => 'getCommunicationsEmailSubject',
        'communications_email_subject_filter' => 'getCommunicationsEmailSubjectFilter',
        'communications_flow_name' => 'getCommunicationsFlowName',
        'communications_flow_name_filter' => 'getCommunicationsFlowNameFilter',
        'email' => 'getEmail',
        'email_domain' => 'getEmailDomain',
        'email_domain_filter' => 'getEmailDomainFilter',
        'email_identified' => 'getEmailIdentified',
        'end_timestamp' => 'getEndTimestamp',
        'esp_customer_uuid' => 'getEspCustomerUuid',
        'favorite' => 'getFavorite',
        'geolocation' => 'getGeolocation',
        'geolocation_country' => 'getGeolocationCountry',
        'geolocation_country_filter' => 'getGeolocationCountryFilter',
        'geolocation_state' => 'getGeolocationState',
        'geolocation_state_filter' => 'getGeolocationStateFilter',
        'language_iso_code' => 'getLanguageIsoCode',
        'language_iso_code_filter' => 'getLanguageIsoCodeFilter',
        'last_x_days' => 'getLastXDays',
        'max_filter_values' => 'getMaxFilterValues',
        'order_id' => 'getOrderId',
        'page_view_count' => 'getPageViewCount',
        'page_views' => 'getPageViews',
        'placed_order' => 'getPlacedOrder',
        'preferred_language' => 'getPreferredLanguage',
        'preferred_language_filter' => 'getPreferredLanguageFilter',
        'referrer_domain' => 'getReferrerDomain',
        'referrer_domain_filter' => 'getReferrerDomainFilter',
        'screen_recording_uuids' => 'getScreenRecordingUuids',
        'screen_sizes' => 'getScreenSizes',
        'skip_filter_values' => 'getSkipFilterValues',
        'skip_histogram' => 'getSkipHistogram',
        'skip_hits' => 'getSkipHits',
        'start_timestamp' => 'getStartTimestamp',
        'tags' => 'getTags',
        'time_on_site' => 'getTimeOnSite',
        'time_on_site_max_filter' => 'getTimeOnSiteMaxFilter',
        'time_on_site_min_filter' => 'getTimeOnSiteMinFilter',
        'url_filter' => 'getUrlFilter',
        'user_agent_device_name' => 'getUserAgentDeviceName',
        'user_agent_device_name_filter' => 'getUserAgentDeviceNameFilter',
        'user_agent_device_os_name_filter' => 'getUserAgentDeviceOsNameFilter',
        'user_agent_device_os_version_filter' => 'getUserAgentDeviceOsVersionFilter',
        'user_agent_name' => 'getUserAgentName',
        'user_agent_name_filter' => 'getUserAgentNameFilter',
        'user_agent_original' => 'getUserAgentOriginal',
        'user_agent_original_filter' => 'getUserAgentOriginalFilter',
        'user_agent_os_name' => 'getUserAgentOsName',
        'user_agent_os_version' => 'getUserAgentOsVersion',
        'user_ip' => 'getUserIp',
        'utm_campaign' => 'getUtmCampaign',
        'utm_campaign_filter' => 'getUtmCampaignFilter',
        'utm_source' => 'getUtmSource',
        'utm_source_filter' => 'getUtmSourceFilter',
        'visitor_number' => 'getVisitorNumber',
        'watched' => 'getWatched'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['affiliate_email'] = $data['affiliate_email'] ?? null;
        $this->container['affiliate_id'] = $data['affiliate_id'] ?? null;
        $this->container['communications_campaign_name'] = $data['communications_campaign_name'] ?? null;
        $this->container['communications_campaign_name_filter'] = $data['communications_campaign_name_filter'] ?? null;
        $this->container['communications_email_subject'] = $data['communications_email_subject'] ?? null;
        $this->container['communications_email_subject_filter'] = $data['communications_email_subject_filter'] ?? null;
        $this->container['communications_flow_name'] = $data['communications_flow_name'] ?? null;
        $this->container['communications_flow_name_filter'] = $data['communications_flow_name_filter'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['email_domain'] = $data['email_domain'] ?? null;
        $this->container['email_domain_filter'] = $data['email_domain_filter'] ?? null;
        $this->container['email_identified'] = $data['email_identified'] ?? null;
        $this->container['end_timestamp'] = $data['end_timestamp'] ?? null;
        $this->container['esp_customer_uuid'] = $data['esp_customer_uuid'] ?? null;
        $this->container['favorite'] = $data['favorite'] ?? null;
        $this->container['geolocation'] = $data['geolocation'] ?? null;
        $this->container['geolocation_country'] = $data['geolocation_country'] ?? null;
        $this->container['geolocation_country_filter'] = $data['geolocation_country_filter'] ?? null;
        $this->container['geolocation_state'] = $data['geolocation_state'] ?? null;
        $this->container['geolocation_state_filter'] = $data['geolocation_state_filter'] ?? null;
        $this->container['language_iso_code'] = $data['language_iso_code'] ?? null;
        $this->container['language_iso_code_filter'] = $data['language_iso_code_filter'] ?? null;
        $this->container['last_x_days'] = $data['last_x_days'] ?? null;
        $this->container['max_filter_values'] = $data['max_filter_values'] ?? null;
        $this->container['order_id'] = $data['order_id'] ?? null;
        $this->container['page_view_count'] = $data['page_view_count'] ?? null;
        $this->container['page_views'] = $data['page_views'] ?? null;
        $this->container['placed_order'] = $data['placed_order'] ?? null;
        $this->container['preferred_language'] = $data['preferred_language'] ?? null;
        $this->container['preferred_language_filter'] = $data['preferred_language_filter'] ?? null;
        $this->container['referrer_domain'] = $data['referrer_domain'] ?? null;
        $this->container['referrer_domain_filter'] = $data['referrer_domain_filter'] ?? null;
        $this->container['screen_recording_uuids'] = $data['screen_recording_uuids'] ?? null;
        $this->container['screen_sizes'] = $data['screen_sizes'] ?? null;
        $this->container['skip_filter_values'] = $data['skip_filter_values'] ?? null;
        $this->container['skip_histogram'] = $data['skip_histogram'] ?? null;
        $this->container['skip_hits'] = $data['skip_hits'] ?? null;
        $this->container['start_timestamp'] = $data['start_timestamp'] ?? null;
        $this->container['tags'] = $data['tags'] ?? null;
        $this->container['time_on_site'] = $data['time_on_site'] ?? null;
        $this->container['time_on_site_max_filter'] = $data['time_on_site_max_filter'] ?? null;
        $this->container['time_on_site_min_filter'] = $data['time_on_site_min_filter'] ?? null;
        $this->container['url_filter'] = $data['url_filter'] ?? null;
        $this->container['user_agent_device_name'] = $data['user_agent_device_name'] ?? null;
        $this->container['user_agent_device_name_filter'] = $data['user_agent_device_name_filter'] ?? null;
        $this->container['user_agent_device_os_name_filter'] = $data['user_agent_device_os_name_filter'] ?? null;
        $this->container['user_agent_device_os_version_filter'] = $data['user_agent_device_os_version_filter'] ?? null;
        $this->container['user_agent_name'] = $data['user_agent_name'] ?? null;
        $this->container['user_agent_name_filter'] = $data['user_agent_name_filter'] ?? null;
        $this->container['user_agent_original'] = $data['user_agent_original'] ?? null;
        $this->container['user_agent_original_filter'] = $data['user_agent_original_filter'] ?? null;
        $this->container['user_agent_os_name'] = $data['user_agent_os_name'] ?? null;
        $this->container['user_agent_os_version'] = $data['user_agent_os_version'] ?? null;
        $this->container['user_ip'] = $data['user_ip'] ?? null;
        $this->container['utm_campaign'] = $data['utm_campaign'] ?? null;
        $this->container['utm_campaign_filter'] = $data['utm_campaign_filter'] ?? null;
        $this->container['utm_source'] = $data['utm_source'] ?? null;
        $this->container['utm_source_filter'] = $data['utm_source_filter'] ?? null;
        $this->container['visitor_number'] = $data['visitor_number'] ?? null;
        $this->container['watched'] = $data['watched'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets affiliate_email
     *
     * @return string|null
     */
    public function getAffiliateEmail()
    {
        return $this->container['affiliate_email'];
    }

    /**
     * Sets affiliate_email
     *
     * @param string|null $affiliate_email affiliate_email
     *
     * @return self
     */
    public function setAffiliateEmail($affiliate_email)
    {
        $this->container['affiliate_email'] = $affiliate_email;

        return $this;
    }

    /**
     * Gets affiliate_id
     *
     * @return int|null
     */
    public function getAffiliateId()
    {
        return $this->container['affiliate_id'];
    }

    /**
     * Sets affiliate_id
     *
     * @param int|null $affiliate_id affiliate_id
     *
     * @return self
     */
    public function setAffiliateId($affiliate_id)
    {
        $this->container['affiliate_id'] = $affiliate_id;

        return $this;
    }

    /**
     * Gets communications_campaign_name
     *
     * @return string|null
     */
    public function getCommunicationsCampaignName()
    {
        return $this->container['communications_campaign_name'];
    }

    /**
     * Sets communications_campaign_name
     *
     * @param string|null $communications_campaign_name communications_campaign_name
     *
     * @return self
     */
    public function setCommunicationsCampaignName($communications_campaign_name)
    {
        $this->container['communications_campaign_name'] = $communications_campaign_name;

        return $this;
    }

    /**
     * Gets communications_campaign_name_filter
     *
     * @return bool|null
     */
    public function getCommunicationsCampaignNameFilter()
    {
        return $this->container['communications_campaign_name_filter'];
    }

    /**
     * Sets communications_campaign_name_filter
     *
     * @param bool|null $communications_campaign_name_filter communications_campaign_name_filter
     *
     * @return self
     */
    public function setCommunicationsCampaignNameFilter($communications_campaign_name_filter)
    {
        $this->container['communications_campaign_name_filter'] = $communications_campaign_name_filter;

        return $this;
    }

    /**
     * Gets communications_email_subject
     *
     * @return string|null
     */
    public function getCommunicationsEmailSubject()
    {
        return $this->container['communications_email_subject'];
    }

    /**
     * Sets communications_email_subject
     *
     * @param string|null $communications_email_subject communications_email_subject
     *
     * @return self
     */
    public function setCommunicationsEmailSubject($communications_email_subject)
    {
        $this->container['communications_email_subject'] = $communications_email_subject;

        return $this;
    }

    /**
     * Gets communications_email_subject_filter
     *
     * @return bool|null
     */
    public function getCommunicationsEmailSubjectFilter()
    {
        return $this->container['communications_email_subject_filter'];
    }

    /**
     * Sets communications_email_subject_filter
     *
     * @param bool|null $communications_email_subject_filter communications_email_subject_filter
     *
     * @return self
     */
    public function setCommunicationsEmailSubjectFilter($communications_email_subject_filter)
    {
        $this->container['communications_email_subject_filter'] = $communications_email_subject_filter;

        return $this;
    }

    /**
     * Gets communications_flow_name
     *
     * @return string|null
     */
    public function getCommunicationsFlowName()
    {
        return $this->container['communications_flow_name'];
    }

    /**
     * Sets communications_flow_name
     *
     * @param string|null $communications_flow_name communications_flow_name
     *
     * @return self
     */
    public function setCommunicationsFlowName($communications_flow_name)
    {
        $this->container['communications_flow_name'] = $communications_flow_name;

        return $this;
    }

    /**
     * Gets communications_flow_name_filter
     *
     * @return bool|null
     */
    public function getCommunicationsFlowNameFilter()
    {
        return $this->container['communications_flow_name_filter'];
    }

    /**
     * Sets communications_flow_name_filter
     *
     * @param bool|null $communications_flow_name_filter communications_flow_name_filter
     *
     * @return self
     */
    public function setCommunicationsFlowNameFilter($communications_flow_name_filter)
    {
        $this->container['communications_flow_name_filter'] = $communications_flow_name_filter;

        return $this;
    }

    /**
     * Gets email
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterStringSearch|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterStringSearch|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets email_domain
     *
     * @return string|null
     */
    public function getEmailDomain()
    {
        return $this->container['email_domain'];
    }

    /**
     * Sets email_domain
     *
     * @param string|null $email_domain email_domain
     *
     * @return self
     */
    public function setEmailDomain($email_domain)
    {
        $this->container['email_domain'] = $email_domain;

        return $this;
    }

    /**
     * Gets email_domain_filter
     *
     * @return bool|null
     */
    public function getEmailDomainFilter()
    {
        return $this->container['email_domain_filter'];
    }

    /**
     * Sets email_domain_filter
     *
     * @param bool|null $email_domain_filter email_domain_filter
     *
     * @return self
     */
    public function setEmailDomainFilter($email_domain_filter)
    {
        $this->container['email_domain_filter'] = $email_domain_filter;

        return $this;
    }

    /**
     * Gets email_identified
     *
     * @return bool|null
     */
    public function getEmailIdentified()
    {
        return $this->container['email_identified'];
    }

    /**
     * Sets email_identified
     *
     * @param bool|null $email_identified email_identified
     *
     * @return self
     */
    public function setEmailIdentified($email_identified)
    {
        $this->container['email_identified'] = $email_identified;

        return $this;
    }

    /**
     * Gets end_timestamp
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterRangeDate|null
     */
    public function getEndTimestamp()
    {
        return $this->container['end_timestamp'];
    }

    /**
     * Sets end_timestamp
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterRangeDate|null $end_timestamp end_timestamp
     *
     * @return self
     */
    public function setEndTimestamp($end_timestamp)
    {
        $this->container['end_timestamp'] = $end_timestamp;

        return $this;
    }

    /**
     * Gets esp_customer_uuid
     *
     * @return string|null
     */
    public function getEspCustomerUuid()
    {
        return $this->container['esp_customer_uuid'];
    }

    /**
     * Sets esp_customer_uuid
     *
     * @param string|null $esp_customer_uuid esp_customer_uuid
     *
     * @return self
     */
    public function setEspCustomerUuid($esp_customer_uuid)
    {
        $this->container['esp_customer_uuid'] = $esp_customer_uuid;

        return $this;
    }

    /**
     * Gets favorite
     *
     * @return bool|null
     */
    public function getFavorite()
    {
        return $this->container['favorite'];
    }

    /**
     * Sets favorite
     *
     * @param bool|null $favorite favorite
     *
     * @return self
     */
    public function setFavorite($favorite)
    {
        $this->container['favorite'] = $favorite;

        return $this;
    }

    /**
     * Gets geolocation
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterGeoDistance|null
     */
    public function getGeolocation()
    {
        return $this->container['geolocation'];
    }

    /**
     * Sets geolocation
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterGeoDistance|null $geolocation geolocation
     *
     * @return self
     */
    public function setGeolocation($geolocation)
    {
        $this->container['geolocation'] = $geolocation;

        return $this;
    }

    /**
     * Gets geolocation_country
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterStringSearch|null
     */
    public function getGeolocationCountry()
    {
        return $this->container['geolocation_country'];
    }

    /**
     * Sets geolocation_country
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterStringSearch|null $geolocation_country geolocation_country
     *
     * @return self
     */
    public function setGeolocationCountry($geolocation_country)
    {
        $this->container['geolocation_country'] = $geolocation_country;

        return $this;
    }

    /**
     * Gets geolocation_country_filter
     *
     * @return bool|null
     */
    public function getGeolocationCountryFilter()
    {
        return $this->container['geolocation_country_filter'];
    }

    /**
     * Sets geolocation_country_filter
     *
     * @param bool|null $geolocation_country_filter geolocation_country_filter
     *
     * @return self
     */
    public function setGeolocationCountryFilter($geolocation_country_filter)
    {
        $this->container['geolocation_country_filter'] = $geolocation_country_filter;

        return $this;
    }

    /**
     * Gets geolocation_state
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterStringSearch|null
     */
    public function getGeolocationState()
    {
        return $this->container['geolocation_state'];
    }

    /**
     * Sets geolocation_state
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterStringSearch|null $geolocation_state geolocation_state
     *
     * @return self
     */
    public function setGeolocationState($geolocation_state)
    {
        $this->container['geolocation_state'] = $geolocation_state;

        return $this;
    }

    /**
     * Gets geolocation_state_filter
     *
     * @return bool|null
     */
    public function getGeolocationStateFilter()
    {
        return $this->container['geolocation_state_filter'];
    }

    /**
     * Sets geolocation_state_filter
     *
     * @param bool|null $geolocation_state_filter geolocation_state_filter
     *
     * @return self
     */
    public function setGeolocationStateFilter($geolocation_state_filter)
    {
        $this->container['geolocation_state_filter'] = $geolocation_state_filter;

        return $this;
    }

    /**
     * Gets language_iso_code
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterStringSearch|null
     */
    public function getLanguageIsoCode()
    {
        return $this->container['language_iso_code'];
    }

    /**
     * Sets language_iso_code
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterStringSearch|null $language_iso_code language_iso_code
     *
     * @return self
     */
    public function setLanguageIsoCode($language_iso_code)
    {
        $this->container['language_iso_code'] = $language_iso_code;

        return $this;
    }

    /**
     * Gets language_iso_code_filter
     *
     * @return bool|null
     */
    public function getLanguageIsoCodeFilter()
    {
        return $this->container['language_iso_code_filter'];
    }

    /**
     * Sets language_iso_code_filter
     *
     * @param bool|null $language_iso_code_filter language_iso_code_filter
     *
     * @return self
     */
    public function setLanguageIsoCodeFilter($language_iso_code_filter)
    {
        $this->container['language_iso_code_filter'] = $language_iso_code_filter;

        return $this;
    }

    /**
     * Gets last_x_days
     *
     * @return int|null
     */
    public function getLastXDays()
    {
        return $this->container['last_x_days'];
    }

    /**
     * Sets last_x_days
     *
     * @param int|null $last_x_days last_x_days
     *
     * @return self
     */
    public function setLastXDays($last_x_days)
    {
        $this->container['last_x_days'] = $last_x_days;

        return $this;
    }

    /**
     * Gets max_filter_values
     *
     * @return int|null
     */
    public function getMaxFilterValues()
    {
        return $this->container['max_filter_values'];
    }

    /**
     * Sets max_filter_values
     *
     * @param int|null $max_filter_values max_filter_values
     *
     * @return self
     */
    public function setMaxFilterValues($max_filter_values)
    {
        $this->container['max_filter_values'] = $max_filter_values;

        return $this;
    }

    /**
     * Gets order_id
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterStringSearch|null
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterStringSearch|null $order_id order_id
     *
     * @return self
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets page_view_count
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterRangeInteger|null
     */
    public function getPageViewCount()
    {
        return $this->container['page_view_count'];
    }

    /**
     * Sets page_view_count
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterRangeInteger|null $page_view_count page_view_count
     *
     * @return self
     */
    public function setPageViewCount($page_view_count)
    {
        $this->container['page_view_count'] = $page_view_count;

        return $this;
    }

    /**
     * Gets page_views
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterPageView[]|null
     */
    public function getPageViews()
    {
        return $this->container['page_views'];
    }

    /**
     * Sets page_views
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterPageView[]|null $page_views page_views
     *
     * @return self
     */
    public function setPageViews($page_views)
    {
        $this->container['page_views'] = $page_views;

        return $this;
    }

    /**
     * Gets placed_order
     *
     * @return bool|null
     */
    public function getPlacedOrder()
    {
        return $this->container['placed_order'];
    }

    /**
     * Sets placed_order
     *
     * @param bool|null $placed_order placed_order
     *
     * @return self
     */
    public function setPlacedOrder($placed_order)
    {
        $this->container['placed_order'] = $placed_order;

        return $this;
    }

    /**
     * Gets preferred_language
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterStringSearch|null
     */
    public function getPreferredLanguage()
    {
        return $this->container['preferred_language'];
    }

    /**
     * Sets preferred_language
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterStringSearch|null $preferred_language preferred_language
     *
     * @return self
     */
    public function setPreferredLanguage($preferred_language)
    {
        $this->container['preferred_language'] = $preferred_language;

        return $this;
    }

    /**
     * Gets preferred_language_filter
     *
     * @return bool|null
     */
    public function getPreferredLanguageFilter()
    {
        return $this->container['preferred_language_filter'];
    }

    /**
     * Sets preferred_language_filter
     *
     * @param bool|null $preferred_language_filter preferred_language_filter
     *
     * @return self
     */
    public function setPreferredLanguageFilter($preferred_language_filter)
    {
        $this->container['preferred_language_filter'] = $preferred_language_filter;

        return $this;
    }

    /**
     * Gets referrer_domain
     *
     * @return string|null
     */
    public function getReferrerDomain()
    {
        return $this->container['referrer_domain'];
    }

    /**
     * Sets referrer_domain
     *
     * @param string|null $referrer_domain referrer_domain
     *
     * @return self
     */
    public function setReferrerDomain($referrer_domain)
    {
        $this->container['referrer_domain'] = $referrer_domain;

        return $this;
    }

    /**
     * Gets referrer_domain_filter
     *
     * @return bool|null
     */
    public function getReferrerDomainFilter()
    {
        return $this->container['referrer_domain_filter'];
    }

    /**
     * Sets referrer_domain_filter
     *
     * @param bool|null $referrer_domain_filter referrer_domain_filter
     *
     * @return self
     */
    public function setReferrerDomainFilter($referrer_domain_filter)
    {
        $this->container['referrer_domain_filter'] = $referrer_domain_filter;

        return $this;
    }

    /**
     * Gets screen_recording_uuids
     *
     * @return string[]|null
     */
    public function getScreenRecordingUuids()
    {
        return $this->container['screen_recording_uuids'];
    }

    /**
     * Sets screen_recording_uuids
     *
     * @param string[]|null $screen_recording_uuids screen_recording_uuids
     *
     * @return self
     */
    public function setScreenRecordingUuids($screen_recording_uuids)
    {
        $this->container['screen_recording_uuids'] = $screen_recording_uuids;

        return $this;
    }

    /**
     * Gets screen_sizes
     *
     * @return string[]|null
     */
    public function getScreenSizes()
    {
        return $this->container['screen_sizes'];
    }

    /**
     * Sets screen_sizes
     *
     * @param string[]|null $screen_sizes screen_sizes
     *
     * @return self
     */
    public function setScreenSizes($screen_sizes)
    {
        $this->container['screen_sizes'] = $screen_sizes;

        return $this;
    }

    /**
     * Gets skip_filter_values
     *
     * @return bool|null
     */
    public function getSkipFilterValues()
    {
        return $this->container['skip_filter_values'];
    }

    /**
     * Sets skip_filter_values
     *
     * @param bool|null $skip_filter_values skip_filter_values
     *
     * @return self
     */
    public function setSkipFilterValues($skip_filter_values)
    {
        $this->container['skip_filter_values'] = $skip_filter_values;

        return $this;
    }

    /**
     * Gets skip_histogram
     *
     * @return bool|null
     */
    public function getSkipHistogram()
    {
        return $this->container['skip_histogram'];
    }

    /**
     * Sets skip_histogram
     *
     * @param bool|null $skip_histogram skip_histogram
     *
     * @return self
     */
    public function setSkipHistogram($skip_histogram)
    {
        $this->container['skip_histogram'] = $skip_histogram;

        return $this;
    }

    /**
     * Gets skip_hits
     *
     * @return bool|null
     */
    public function getSkipHits()
    {
        return $this->container['skip_hits'];
    }

    /**
     * Sets skip_hits
     *
     * @param bool|null $skip_hits skip_hits
     *
     * @return self
     */
    public function setSkipHits($skip_hits)
    {
        $this->container['skip_hits'] = $skip_hits;

        return $this;
    }

    /**
     * Gets start_timestamp
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterRangeDate|null
     */
    public function getStartTimestamp()
    {
        return $this->container['start_timestamp'];
    }

    /**
     * Sets start_timestamp
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterRangeDate|null $start_timestamp start_timestamp
     *
     * @return self
     */
    public function setStartTimestamp($start_timestamp)
    {
        $this->container['start_timestamp'] = $start_timestamp;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return string[]|null
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param string[]|null $tags tags
     *
     * @return self
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets time_on_site
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterRangeInteger|null
     */
    public function getTimeOnSite()
    {
        return $this->container['time_on_site'];
    }

    /**
     * Sets time_on_site
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterRangeInteger|null $time_on_site time_on_site
     *
     * @return self
     */
    public function setTimeOnSite($time_on_site)
    {
        $this->container['time_on_site'] = $time_on_site;

        return $this;
    }

    /**
     * Gets time_on_site_max_filter
     *
     * @return bool|null
     */
    public function getTimeOnSiteMaxFilter()
    {
        return $this->container['time_on_site_max_filter'];
    }

    /**
     * Sets time_on_site_max_filter
     *
     * @param bool|null $time_on_site_max_filter time_on_site_max_filter
     *
     * @return self
     */
    public function setTimeOnSiteMaxFilter($time_on_site_max_filter)
    {
        $this->container['time_on_site_max_filter'] = $time_on_site_max_filter;

        return $this;
    }

    /**
     * Gets time_on_site_min_filter
     *
     * @return bool|null
     */
    public function getTimeOnSiteMinFilter()
    {
        return $this->container['time_on_site_min_filter'];
    }

    /**
     * Sets time_on_site_min_filter
     *
     * @param bool|null $time_on_site_min_filter time_on_site_min_filter
     *
     * @return self
     */
    public function setTimeOnSiteMinFilter($time_on_site_min_filter)
    {
        $this->container['time_on_site_min_filter'] = $time_on_site_min_filter;

        return $this;
    }

    /**
     * Gets url_filter
     *
     * @return bool|null
     */
    public function getUrlFilter()
    {
        return $this->container['url_filter'];
    }

    /**
     * Sets url_filter
     *
     * @param bool|null $url_filter url_filter
     *
     * @return self
     */
    public function setUrlFilter($url_filter)
    {
        $this->container['url_filter'] = $url_filter;

        return $this;
    }

    /**
     * Gets user_agent_device_name
     *
     * @return string|null
     */
    public function getUserAgentDeviceName()
    {
        return $this->container['user_agent_device_name'];
    }

    /**
     * Sets user_agent_device_name
     *
     * @param string|null $user_agent_device_name user_agent_device_name
     *
     * @return self
     */
    public function setUserAgentDeviceName($user_agent_device_name)
    {
        $this->container['user_agent_device_name'] = $user_agent_device_name;

        return $this;
    }

    /**
     * Gets user_agent_device_name_filter
     *
     * @return bool|null
     */
    public function getUserAgentDeviceNameFilter()
    {
        return $this->container['user_agent_device_name_filter'];
    }

    /**
     * Sets user_agent_device_name_filter
     *
     * @param bool|null $user_agent_device_name_filter user_agent_device_name_filter
     *
     * @return self
     */
    public function setUserAgentDeviceNameFilter($user_agent_device_name_filter)
    {
        $this->container['user_agent_device_name_filter'] = $user_agent_device_name_filter;

        return $this;
    }

    /**
     * Gets user_agent_device_os_name_filter
     *
     * @return bool|null
     */
    public function getUserAgentDeviceOsNameFilter()
    {
        return $this->container['user_agent_device_os_name_filter'];
    }

    /**
     * Sets user_agent_device_os_name_filter
     *
     * @param bool|null $user_agent_device_os_name_filter user_agent_device_os_name_filter
     *
     * @return self
     */
    public function setUserAgentDeviceOsNameFilter($user_agent_device_os_name_filter)
    {
        $this->container['user_agent_device_os_name_filter'] = $user_agent_device_os_name_filter;

        return $this;
    }

    /**
     * Gets user_agent_device_os_version_filter
     *
     * @return bool|null
     */
    public function getUserAgentDeviceOsVersionFilter()
    {
        return $this->container['user_agent_device_os_version_filter'];
    }

    /**
     * Sets user_agent_device_os_version_filter
     *
     * @param bool|null $user_agent_device_os_version_filter user_agent_device_os_version_filter
     *
     * @return self
     */
    public function setUserAgentDeviceOsVersionFilter($user_agent_device_os_version_filter)
    {
        $this->container['user_agent_device_os_version_filter'] = $user_agent_device_os_version_filter;

        return $this;
    }

    /**
     * Gets user_agent_name
     *
     * @return string|null
     */
    public function getUserAgentName()
    {
        return $this->container['user_agent_name'];
    }

    /**
     * Sets user_agent_name
     *
     * @param string|null $user_agent_name user_agent_name
     *
     * @return self
     */
    public function setUserAgentName($user_agent_name)
    {
        $this->container['user_agent_name'] = $user_agent_name;

        return $this;
    }

    /**
     * Gets user_agent_name_filter
     *
     * @return bool|null
     */
    public function getUserAgentNameFilter()
    {
        return $this->container['user_agent_name_filter'];
    }

    /**
     * Sets user_agent_name_filter
     *
     * @param bool|null $user_agent_name_filter user_agent_name_filter
     *
     * @return self
     */
    public function setUserAgentNameFilter($user_agent_name_filter)
    {
        $this->container['user_agent_name_filter'] = $user_agent_name_filter;

        return $this;
    }

    /**
     * Gets user_agent_original
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterStringSearch|null
     */
    public function getUserAgentOriginal()
    {
        return $this->container['user_agent_original'];
    }

    /**
     * Sets user_agent_original
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterStringSearch|null $user_agent_original user_agent_original
     *
     * @return self
     */
    public function setUserAgentOriginal($user_agent_original)
    {
        $this->container['user_agent_original'] = $user_agent_original;

        return $this;
    }

    /**
     * Gets user_agent_original_filter
     *
     * @return bool|null
     */
    public function getUserAgentOriginalFilter()
    {
        return $this->container['user_agent_original_filter'];
    }

    /**
     * Sets user_agent_original_filter
     *
     * @param bool|null $user_agent_original_filter user_agent_original_filter
     *
     * @return self
     */
    public function setUserAgentOriginalFilter($user_agent_original_filter)
    {
        $this->container['user_agent_original_filter'] = $user_agent_original_filter;

        return $this;
    }

    /**
     * Gets user_agent_os_name
     *
     * @return string|null
     */
    public function getUserAgentOsName()
    {
        return $this->container['user_agent_os_name'];
    }

    /**
     * Sets user_agent_os_name
     *
     * @param string|null $user_agent_os_name user_agent_os_name
     *
     * @return self
     */
    public function setUserAgentOsName($user_agent_os_name)
    {
        $this->container['user_agent_os_name'] = $user_agent_os_name;

        return $this;
    }

    /**
     * Gets user_agent_os_version
     *
     * @return string|null
     */
    public function getUserAgentOsVersion()
    {
        return $this->container['user_agent_os_version'];
    }

    /**
     * Sets user_agent_os_version
     *
     * @param string|null $user_agent_os_version user_agent_os_version
     *
     * @return self
     */
    public function setUserAgentOsVersion($user_agent_os_version)
    {
        $this->container['user_agent_os_version'] = $user_agent_os_version;

        return $this;
    }

    /**
     * Gets user_ip
     *
     * @return \ultracart\v2\models\ScreenRecordingFilterIpSearch|null
     */
    public function getUserIp()
    {
        return $this->container['user_ip'];
    }

    /**
     * Sets user_ip
     *
     * @param \ultracart\v2\models\ScreenRecordingFilterIpSearch|null $user_ip user_ip
     *
     * @return self
     */
    public function setUserIp($user_ip)
    {
        $this->container['user_ip'] = $user_ip;

        return $this;
    }

    /**
     * Gets utm_campaign
     *
     * @return string|null
     */
    public function getUtmCampaign()
    {
        return $this->container['utm_campaign'];
    }

    /**
     * Sets utm_campaign
     *
     * @param string|null $utm_campaign utm_campaign
     *
     * @return self
     */
    public function setUtmCampaign($utm_campaign)
    {
        $this->container['utm_campaign'] = $utm_campaign;

        return $this;
    }

    /**
     * Gets utm_campaign_filter
     *
     * @return bool|null
     */
    public function getUtmCampaignFilter()
    {
        return $this->container['utm_campaign_filter'];
    }

    /**
     * Sets utm_campaign_filter
     *
     * @param bool|null $utm_campaign_filter utm_campaign_filter
     *
     * @return self
     */
    public function setUtmCampaignFilter($utm_campaign_filter)
    {
        $this->container['utm_campaign_filter'] = $utm_campaign_filter;

        return $this;
    }

    /**
     * Gets utm_source
     *
     * @return string|null
     */
    public function getUtmSource()
    {
        return $this->container['utm_source'];
    }

    /**
     * Sets utm_source
     *
     * @param string|null $utm_source utm_source
     *
     * @return self
     */
    public function setUtmSource($utm_source)
    {
        $this->container['utm_source'] = $utm_source;

        return $this;
    }

    /**
     * Gets utm_source_filter
     *
     * @return bool|null
     */
    public function getUtmSourceFilter()
    {
        return $this->container['utm_source_filter'];
    }

    /**
     * Sets utm_source_filter
     *
     * @param bool|null $utm_source_filter utm_source_filter
     *
     * @return self
     */
    public function setUtmSourceFilter($utm_source_filter)
    {
        $this->container['utm_source_filter'] = $utm_source_filter;

        return $this;
    }

    /**
     * Gets visitor_number
     *
     * @return int|null
     */
    public function getVisitorNumber()
    {
        return $this->container['visitor_number'];
    }

    /**
     * Sets visitor_number
     *
     * @param int|null $visitor_number visitor_number
     *
     * @return self
     */
    public function setVisitorNumber($visitor_number)
    {
        $this->container['visitor_number'] = $visitor_number;

        return $this;
    }

    /**
     * Gets watched
     *
     * @return bool|null
     */
    public function getWatched()
    {
        return $this->container['watched'];
    }

    /**
     * Sets watched
     *
     * @param bool|null $watched watched
     *
     * @return self
     */
    public function setWatched($watched)
    {
        $this->container['watched'] = $watched;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


