<?php
/**
 * EmailCommseqStep
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace ultracart\v2\models;

use \ArrayAccess;
use \ultracart\v2\ObjectSerializer;

/**
 * EmailCommseqStep Class Doc Comment
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EmailCommseqStep implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'EmailCommseqStep';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'alt_child_email_communication_sequence_steps' => '\ultracart\v2\models\EmailCommseqStep[]',
        'child_email_communication_sequence_steps' => '\ultracart\v2\models\EmailCommseqStep[]',
        'email_communication_sequence_step_uuid' => 'string',
        'email_pending_review' => 'bool',
        'email_rejected' => 'bool',
        'email_requires_review' => 'bool',
        'filter_profile_equation_json' => 'string',
        'merchant_notes' => 'string',
        'step_config_json' => 'string',
        'type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'alt_child_email_communication_sequence_steps' => null,
        'child_email_communication_sequence_steps' => null,
        'email_communication_sequence_step_uuid' => null,
        'email_pending_review' => null,
        'email_rejected' => null,
        'email_requires_review' => null,
        'filter_profile_equation_json' => null,
        'merchant_notes' => null,
        'step_config_json' => null,
        'type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'alt_child_email_communication_sequence_steps' => 'alt_child_email_communication_sequence_steps',
        'child_email_communication_sequence_steps' => 'child_email_communication_sequence_steps',
        'email_communication_sequence_step_uuid' => 'email_communication_sequence_step_uuid',
        'email_pending_review' => 'email_pending_review',
        'email_rejected' => 'email_rejected',
        'email_requires_review' => 'email_requires_review',
        'filter_profile_equation_json' => 'filter_profile_equation_json',
        'merchant_notes' => 'merchant_notes',
        'step_config_json' => 'step_config_json',
        'type' => 'type'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'alt_child_email_communication_sequence_steps' => 'setAltChildEmailCommunicationSequenceSteps',
        'child_email_communication_sequence_steps' => 'setChildEmailCommunicationSequenceSteps',
        'email_communication_sequence_step_uuid' => 'setEmailCommunicationSequenceStepUuid',
        'email_pending_review' => 'setEmailPendingReview',
        'email_rejected' => 'setEmailRejected',
        'email_requires_review' => 'setEmailRequiresReview',
        'filter_profile_equation_json' => 'setFilterProfileEquationJson',
        'merchant_notes' => 'setMerchantNotes',
        'step_config_json' => 'setStepConfigJson',
        'type' => 'setType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'alt_child_email_communication_sequence_steps' => 'getAltChildEmailCommunicationSequenceSteps',
        'child_email_communication_sequence_steps' => 'getChildEmailCommunicationSequenceSteps',
        'email_communication_sequence_step_uuid' => 'getEmailCommunicationSequenceStepUuid',
        'email_pending_review' => 'getEmailPendingReview',
        'email_rejected' => 'getEmailRejected',
        'email_requires_review' => 'getEmailRequiresReview',
        'filter_profile_equation_json' => 'getFilterProfileEquationJson',
        'merchant_notes' => 'getMerchantNotes',
        'step_config_json' => 'getStepConfigJson',
        'type' => 'getType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    public const TYPE_BEGIN = 'begin';
    public const TYPE_WAIT = 'wait';
    public const TYPE_EMAIL = 'email';
    public const TYPE_MERGE = 'merge';
    public const TYPE_CONDITION = 'condition';
    public const TYPE_END = 'end';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getTypeAllowableValues()
    {
        return [
            self::TYPE_BEGIN,
            self::TYPE_WAIT,
            self::TYPE_EMAIL,
            self::TYPE_MERGE,
            self::TYPE_CONDITION,
            self::TYPE_END,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['alt_child_email_communication_sequence_steps'] = $data['alt_child_email_communication_sequence_steps'] ?? null;
        $this->container['child_email_communication_sequence_steps'] = $data['child_email_communication_sequence_steps'] ?? null;
        $this->container['email_communication_sequence_step_uuid'] = $data['email_communication_sequence_step_uuid'] ?? null;
        $this->container['email_pending_review'] = $data['email_pending_review'] ?? null;
        $this->container['email_rejected'] = $data['email_rejected'] ?? null;
        $this->container['email_requires_review'] = $data['email_requires_review'] ?? null;
        $this->container['filter_profile_equation_json'] = $data['filter_profile_equation_json'] ?? null;
        $this->container['merchant_notes'] = $data['merchant_notes'] ?? null;
        $this->container['step_config_json'] = $data['step_config_json'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getTypeAllowableValues();
        if (!is_null($this->container['type']) && !in_array($this->container['type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'type', must be one of '%s'",
                $this->container['type'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets alt_child_email_communication_sequence_steps
     *
     * @return \ultracart\v2\models\EmailCommseqStep[]|null
     */
    public function getAltChildEmailCommunicationSequenceSteps()
    {
        return $this->container['alt_child_email_communication_sequence_steps'];
    }

    /**
     * Sets alt_child_email_communication_sequence_steps
     *
     * @param \ultracart\v2\models\EmailCommseqStep[]|null $alt_child_email_communication_sequence_steps Array of child steps for the alternate path
     *
     * @return self
     */
    public function setAltChildEmailCommunicationSequenceSteps($alt_child_email_communication_sequence_steps)
    {
        $this->container['alt_child_email_communication_sequence_steps'] = $alt_child_email_communication_sequence_steps;

        return $this;
    }

    /**
     * Gets child_email_communication_sequence_steps
     *
     * @return \ultracart\v2\models\EmailCommseqStep[]|null
     */
    public function getChildEmailCommunicationSequenceSteps()
    {
        return $this->container['child_email_communication_sequence_steps'];
    }

    /**
     * Sets child_email_communication_sequence_steps
     *
     * @param \ultracart\v2\models\EmailCommseqStep[]|null $child_email_communication_sequence_steps Array of child steps
     *
     * @return self
     */
    public function setChildEmailCommunicationSequenceSteps($child_email_communication_sequence_steps)
    {
        $this->container['child_email_communication_sequence_steps'] = $child_email_communication_sequence_steps;

        return $this;
    }

    /**
     * Gets email_communication_sequence_step_uuid
     *
     * @return string|null
     */
    public function getEmailCommunicationSequenceStepUuid()
    {
        return $this->container['email_communication_sequence_step_uuid'];
    }

    /**
     * Sets email_communication_sequence_step_uuid
     *
     * @param string|null $email_communication_sequence_step_uuid Email commseq step UUID
     *
     * @return self
     */
    public function setEmailCommunicationSequenceStepUuid($email_communication_sequence_step_uuid)
    {
        $this->container['email_communication_sequence_step_uuid'] = $email_communication_sequence_step_uuid;

        return $this;
    }

    /**
     * Gets email_pending_review
     *
     * @return bool|null
     */
    public function getEmailPendingReview()
    {
        return $this->container['email_pending_review'];
    }

    /**
     * Sets email_pending_review
     *
     * @param bool|null $email_pending_review True if the content of the email associated with this step is pending review by UltraCart
     *
     * @return self
     */
    public function setEmailPendingReview($email_pending_review)
    {
        $this->container['email_pending_review'] = $email_pending_review;

        return $this;
    }

    /**
     * Gets email_rejected
     *
     * @return bool|null
     */
    public function getEmailRejected()
    {
        return $this->container['email_rejected'];
    }

    /**
     * Sets email_rejected
     *
     * @param bool|null $email_rejected True if the content of the email associated with this step was rejected during review by UltraCart
     *
     * @return self
     */
    public function setEmailRejected($email_rejected)
    {
        $this->container['email_rejected'] = $email_rejected;

        return $this;
    }

    /**
     * Gets email_requires_review
     *
     * @return bool|null
     */
    public function getEmailRequiresReview()
    {
        return $this->container['email_requires_review'];
    }

    /**
     * Sets email_requires_review
     *
     * @param bool|null $email_requires_review True if the content of the email associated with this step requires review by UltraCart
     *
     * @return self
     */
    public function setEmailRequiresReview($email_requires_review)
    {
        $this->container['email_requires_review'] = $email_requires_review;

        return $this;
    }

    /**
     * Gets filter_profile_equation_json
     *
     * @return string|null
     */
    public function getFilterProfileEquationJson()
    {
        return $this->container['filter_profile_equation_json'];
    }

    /**
     * Sets filter_profile_equation_json
     *
     * @param string|null $filter_profile_equation_json Filter profile equation JSON
     *
     * @return self
     */
    public function setFilterProfileEquationJson($filter_profile_equation_json)
    {
        $this->container['filter_profile_equation_json'] = $filter_profile_equation_json;

        return $this;
    }

    /**
     * Gets merchant_notes
     *
     * @return string|null
     */
    public function getMerchantNotes()
    {
        return $this->container['merchant_notes'];
    }

    /**
     * Sets merchant_notes
     *
     * @param string|null $merchant_notes Internal merchant notes
     *
     * @return self
     */
    public function setMerchantNotes($merchant_notes)
    {
        $this->container['merchant_notes'] = $merchant_notes;

        return $this;
    }

    /**
     * Gets step_config_json
     *
     * @return string|null
     */
    public function getStepConfigJson()
    {
        return $this->container['step_config_json'];
    }

    /**
     * Sets step_config_json
     *
     * @param string|null $step_config_json Arbitrary Configuration for a step
     *
     * @return self
     */
    public function setStepConfigJson($step_config_json)
    {
        $this->container['step_config_json'] = $step_config_json;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type Type of step
     *
     * @return self
     */
    public function setType($type)
    {
        $allowedValues = $this->getTypeAllowableValues();
        if (!is_null($type) && !in_array($type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'type', must be one of '%s'",
                    $type,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['type'] = $type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


