<?php
/**
 * EmailSettings
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace ultracart\v2\models;

use \ArrayAccess;
use \ultracart\v2\ObjectSerializer;

/**
 * EmailSettings Class Doc Comment
 *
 * @category Class
 * @package  ultracart\v2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class EmailSettings implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'EmailSettings';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'emails_per_day' => 'int',
        'emails_per_hour' => 'int',
        'emails_per_month' => 'int',
        'marketing_esp_domain_user' => 'string',
        'marketing_esp_domain_uuid' => 'string',
        'marketing_esp_friendly_name' => 'string',
        'postcard_from_address1' => 'string',
        'postcard_from_address2' => 'string',
        'postcard_from_city' => 'string',
        'postcard_from_name' => 'string',
        'postcard_from_postal_code' => 'string',
        'postcard_from_state' => 'string',
        'require_order_within_last' => 'int',
        'reviews_io_configured' => 'bool',
        'sms_esp_twilio_uuid' => 'string',
        'sms_phone_number' => 'string',
        'transactional_esp_domain_user' => 'string',
        'transactional_esp_domain_uuid' => 'string',
        'transactional_esp_friendly_name' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'emails_per_day' => 'int32',
        'emails_per_hour' => 'int32',
        'emails_per_month' => 'int32',
        'marketing_esp_domain_user' => null,
        'marketing_esp_domain_uuid' => null,
        'marketing_esp_friendly_name' => null,
        'postcard_from_address1' => null,
        'postcard_from_address2' => null,
        'postcard_from_city' => null,
        'postcard_from_name' => null,
        'postcard_from_postal_code' => null,
        'postcard_from_state' => null,
        'require_order_within_last' => 'int32',
        'reviews_io_configured' => null,
        'sms_esp_twilio_uuid' => null,
        'sms_phone_number' => null,
        'transactional_esp_domain_user' => null,
        'transactional_esp_domain_uuid' => null,
        'transactional_esp_friendly_name' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'emails_per_day' => 'emails_per_day',
        'emails_per_hour' => 'emails_per_hour',
        'emails_per_month' => 'emails_per_month',
        'marketing_esp_domain_user' => 'marketing_esp_domain_user',
        'marketing_esp_domain_uuid' => 'marketing_esp_domain_uuid',
        'marketing_esp_friendly_name' => 'marketing_esp_friendly_name',
        'postcard_from_address1' => 'postcard_from_address1',
        'postcard_from_address2' => 'postcard_from_address2',
        'postcard_from_city' => 'postcard_from_city',
        'postcard_from_name' => 'postcard_from_name',
        'postcard_from_postal_code' => 'postcard_from_postal_code',
        'postcard_from_state' => 'postcard_from_state',
        'require_order_within_last' => 'require_order_within_last',
        'reviews_io_configured' => 'reviews_io_configured',
        'sms_esp_twilio_uuid' => 'sms_esp_twilio_uuid',
        'sms_phone_number' => 'sms_phone_number',
        'transactional_esp_domain_user' => 'transactional_esp_domain_user',
        'transactional_esp_domain_uuid' => 'transactional_esp_domain_uuid',
        'transactional_esp_friendly_name' => 'transactional_esp_friendly_name'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'emails_per_day' => 'setEmailsPerDay',
        'emails_per_hour' => 'setEmailsPerHour',
        'emails_per_month' => 'setEmailsPerMonth',
        'marketing_esp_domain_user' => 'setMarketingEspDomainUser',
        'marketing_esp_domain_uuid' => 'setMarketingEspDomainUuid',
        'marketing_esp_friendly_name' => 'setMarketingEspFriendlyName',
        'postcard_from_address1' => 'setPostcardFromAddress1',
        'postcard_from_address2' => 'setPostcardFromAddress2',
        'postcard_from_city' => 'setPostcardFromCity',
        'postcard_from_name' => 'setPostcardFromName',
        'postcard_from_postal_code' => 'setPostcardFromPostalCode',
        'postcard_from_state' => 'setPostcardFromState',
        'require_order_within_last' => 'setRequireOrderWithinLast',
        'reviews_io_configured' => 'setReviewsIoConfigured',
        'sms_esp_twilio_uuid' => 'setSmsEspTwilioUuid',
        'sms_phone_number' => 'setSmsPhoneNumber',
        'transactional_esp_domain_user' => 'setTransactionalEspDomainUser',
        'transactional_esp_domain_uuid' => 'setTransactionalEspDomainUuid',
        'transactional_esp_friendly_name' => 'setTransactionalEspFriendlyName'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'emails_per_day' => 'getEmailsPerDay',
        'emails_per_hour' => 'getEmailsPerHour',
        'emails_per_month' => 'getEmailsPerMonth',
        'marketing_esp_domain_user' => 'getMarketingEspDomainUser',
        'marketing_esp_domain_uuid' => 'getMarketingEspDomainUuid',
        'marketing_esp_friendly_name' => 'getMarketingEspFriendlyName',
        'postcard_from_address1' => 'getPostcardFromAddress1',
        'postcard_from_address2' => 'getPostcardFromAddress2',
        'postcard_from_city' => 'getPostcardFromCity',
        'postcard_from_name' => 'getPostcardFromName',
        'postcard_from_postal_code' => 'getPostcardFromPostalCode',
        'postcard_from_state' => 'getPostcardFromState',
        'require_order_within_last' => 'getRequireOrderWithinLast',
        'reviews_io_configured' => 'getReviewsIoConfigured',
        'sms_esp_twilio_uuid' => 'getSmsEspTwilioUuid',
        'sms_phone_number' => 'getSmsPhoneNumber',
        'transactional_esp_domain_user' => 'getTransactionalEspDomainUser',
        'transactional_esp_domain_uuid' => 'getTransactionalEspDomainUuid',
        'transactional_esp_friendly_name' => 'getTransactionalEspFriendlyName'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['emails_per_day'] = $data['emails_per_day'] ?? null;
        $this->container['emails_per_hour'] = $data['emails_per_hour'] ?? null;
        $this->container['emails_per_month'] = $data['emails_per_month'] ?? null;
        $this->container['marketing_esp_domain_user'] = $data['marketing_esp_domain_user'] ?? null;
        $this->container['marketing_esp_domain_uuid'] = $data['marketing_esp_domain_uuid'] ?? null;
        $this->container['marketing_esp_friendly_name'] = $data['marketing_esp_friendly_name'] ?? null;
        $this->container['postcard_from_address1'] = $data['postcard_from_address1'] ?? null;
        $this->container['postcard_from_address2'] = $data['postcard_from_address2'] ?? null;
        $this->container['postcard_from_city'] = $data['postcard_from_city'] ?? null;
        $this->container['postcard_from_name'] = $data['postcard_from_name'] ?? null;
        $this->container['postcard_from_postal_code'] = $data['postcard_from_postal_code'] ?? null;
        $this->container['postcard_from_state'] = $data['postcard_from_state'] ?? null;
        $this->container['require_order_within_last'] = $data['require_order_within_last'] ?? null;
        $this->container['reviews_io_configured'] = $data['reviews_io_configured'] ?? null;
        $this->container['sms_esp_twilio_uuid'] = $data['sms_esp_twilio_uuid'] ?? null;
        $this->container['sms_phone_number'] = $data['sms_phone_number'] ?? null;
        $this->container['transactional_esp_domain_user'] = $data['transactional_esp_domain_user'] ?? null;
        $this->container['transactional_esp_domain_uuid'] = $data['transactional_esp_domain_uuid'] ?? null;
        $this->container['transactional_esp_friendly_name'] = $data['transactional_esp_friendly_name'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets emails_per_day
     *
     * @return int|null
     */
    public function getEmailsPerDay()
    {
        return $this->container['emails_per_day'];
    }

    /**
     * Sets emails_per_day
     *
     * @param int|null $emails_per_day Emails per day allowed
     *
     * @return self
     */
    public function setEmailsPerDay($emails_per_day)
    {
        $this->container['emails_per_day'] = $emails_per_day;

        return $this;
    }

    /**
     * Gets emails_per_hour
     *
     * @return int|null
     */
    public function getEmailsPerHour()
    {
        return $this->container['emails_per_hour'];
    }

    /**
     * Sets emails_per_hour
     *
     * @param int|null $emails_per_hour Emails per hour allowed
     *
     * @return self
     */
    public function setEmailsPerHour($emails_per_hour)
    {
        $this->container['emails_per_hour'] = $emails_per_hour;

        return $this;
    }

    /**
     * Gets emails_per_month
     *
     * @return int|null
     */
    public function getEmailsPerMonth()
    {
        return $this->container['emails_per_month'];
    }

    /**
     * Sets emails_per_month
     *
     * @param int|null $emails_per_month Emails per month allowed
     *
     * @return self
     */
    public function setEmailsPerMonth($emails_per_month)
    {
        $this->container['emails_per_month'] = $emails_per_month;

        return $this;
    }

    /**
     * Gets marketing_esp_domain_user
     *
     * @return string|null
     */
    public function getMarketingEspDomainUser()
    {
        return $this->container['marketing_esp_domain_user'];
    }

    /**
     * Sets marketing_esp_domain_user
     *
     * @param string|null $marketing_esp_domain_user marketing_esp_domain_user
     *
     * @return self
     */
    public function setMarketingEspDomainUser($marketing_esp_domain_user)
    {
        $this->container['marketing_esp_domain_user'] = $marketing_esp_domain_user;

        return $this;
    }

    /**
     * Gets marketing_esp_domain_uuid
     *
     * @return string|null
     */
    public function getMarketingEspDomainUuid()
    {
        return $this->container['marketing_esp_domain_uuid'];
    }

    /**
     * Sets marketing_esp_domain_uuid
     *
     * @param string|null $marketing_esp_domain_uuid marketing_esp_domain_uuid
     *
     * @return self
     */
    public function setMarketingEspDomainUuid($marketing_esp_domain_uuid)
    {
        $this->container['marketing_esp_domain_uuid'] = $marketing_esp_domain_uuid;

        return $this;
    }

    /**
     * Gets marketing_esp_friendly_name
     *
     * @return string|null
     */
    public function getMarketingEspFriendlyName()
    {
        return $this->container['marketing_esp_friendly_name'];
    }

    /**
     * Sets marketing_esp_friendly_name
     *
     * @param string|null $marketing_esp_friendly_name marketing_esp_friendly_name
     *
     * @return self
     */
    public function setMarketingEspFriendlyName($marketing_esp_friendly_name)
    {
        $this->container['marketing_esp_friendly_name'] = $marketing_esp_friendly_name;

        return $this;
    }

    /**
     * Gets postcard_from_address1
     *
     * @return string|null
     */
    public function getPostcardFromAddress1()
    {
        return $this->container['postcard_from_address1'];
    }

    /**
     * Sets postcard_from_address1
     *
     * @param string|null $postcard_from_address1 postcard_from_address1
     *
     * @return self
     */
    public function setPostcardFromAddress1($postcard_from_address1)
    {
        $this->container['postcard_from_address1'] = $postcard_from_address1;

        return $this;
    }

    /**
     * Gets postcard_from_address2
     *
     * @return string|null
     */
    public function getPostcardFromAddress2()
    {
        return $this->container['postcard_from_address2'];
    }

    /**
     * Sets postcard_from_address2
     *
     * @param string|null $postcard_from_address2 postcard_from_address2
     *
     * @return self
     */
    public function setPostcardFromAddress2($postcard_from_address2)
    {
        $this->container['postcard_from_address2'] = $postcard_from_address2;

        return $this;
    }

    /**
     * Gets postcard_from_city
     *
     * @return string|null
     */
    public function getPostcardFromCity()
    {
        return $this->container['postcard_from_city'];
    }

    /**
     * Sets postcard_from_city
     *
     * @param string|null $postcard_from_city postcard_from_city
     *
     * @return self
     */
    public function setPostcardFromCity($postcard_from_city)
    {
        $this->container['postcard_from_city'] = $postcard_from_city;

        return $this;
    }

    /**
     * Gets postcard_from_name
     *
     * @return string|null
     */
    public function getPostcardFromName()
    {
        return $this->container['postcard_from_name'];
    }

    /**
     * Sets postcard_from_name
     *
     * @param string|null $postcard_from_name postcard_from_name
     *
     * @return self
     */
    public function setPostcardFromName($postcard_from_name)
    {
        $this->container['postcard_from_name'] = $postcard_from_name;

        return $this;
    }

    /**
     * Gets postcard_from_postal_code
     *
     * @return string|null
     */
    public function getPostcardFromPostalCode()
    {
        return $this->container['postcard_from_postal_code'];
    }

    /**
     * Sets postcard_from_postal_code
     *
     * @param string|null $postcard_from_postal_code postcard_from_postal_code
     *
     * @return self
     */
    public function setPostcardFromPostalCode($postcard_from_postal_code)
    {
        $this->container['postcard_from_postal_code'] = $postcard_from_postal_code;

        return $this;
    }

    /**
     * Gets postcard_from_state
     *
     * @return string|null
     */
    public function getPostcardFromState()
    {
        return $this->container['postcard_from_state'];
    }

    /**
     * Sets postcard_from_state
     *
     * @param string|null $postcard_from_state postcard_from_state
     *
     * @return self
     */
    public function setPostcardFromState($postcard_from_state)
    {
        $this->container['postcard_from_state'] = $postcard_from_state;

        return $this;
    }

    /**
     * Gets require_order_within_last
     *
     * @return int|null
     */
    public function getRequireOrderWithinLast()
    {
        return $this->container['require_order_within_last'];
    }

    /**
     * Sets require_order_within_last
     *
     * @param int|null $require_order_within_last Require order within last
     *
     * @return self
     */
    public function setRequireOrderWithinLast($require_order_within_last)
    {
        $this->container['require_order_within_last'] = $require_order_within_last;

        return $this;
    }

    /**
     * Gets reviews_io_configured
     *
     * @return bool|null
     */
    public function getReviewsIoConfigured()
    {
        return $this->container['reviews_io_configured'];
    }

    /**
     * Sets reviews_io_configured
     *
     * @param bool|null $reviews_io_configured True if the Reviews.io integration is configured
     *
     * @return self
     */
    public function setReviewsIoConfigured($reviews_io_configured)
    {
        $this->container['reviews_io_configured'] = $reviews_io_configured;

        return $this;
    }

    /**
     * Gets sms_esp_twilio_uuid
     *
     * @return string|null
     */
    public function getSmsEspTwilioUuid()
    {
        return $this->container['sms_esp_twilio_uuid'];
    }

    /**
     * Sets sms_esp_twilio_uuid
     *
     * @param string|null $sms_esp_twilio_uuid sms_esp_twilio_uuid
     *
     * @return self
     */
    public function setSmsEspTwilioUuid($sms_esp_twilio_uuid)
    {
        $this->container['sms_esp_twilio_uuid'] = $sms_esp_twilio_uuid;

        return $this;
    }

    /**
     * Gets sms_phone_number
     *
     * @return string|null
     */
    public function getSmsPhoneNumber()
    {
        return $this->container['sms_phone_number'];
    }

    /**
     * Sets sms_phone_number
     *
     * @param string|null $sms_phone_number sms_phone_number
     *
     * @return self
     */
    public function setSmsPhoneNumber($sms_phone_number)
    {
        $this->container['sms_phone_number'] = $sms_phone_number;

        return $this;
    }

    /**
     * Gets transactional_esp_domain_user
     *
     * @return string|null
     */
    public function getTransactionalEspDomainUser()
    {
        return $this->container['transactional_esp_domain_user'];
    }

    /**
     * Sets transactional_esp_domain_user
     *
     * @param string|null $transactional_esp_domain_user transactional_esp_domain_user
     *
     * @return self
     */
    public function setTransactionalEspDomainUser($transactional_esp_domain_user)
    {
        $this->container['transactional_esp_domain_user'] = $transactional_esp_domain_user;

        return $this;
    }

    /**
     * Gets transactional_esp_domain_uuid
     *
     * @return string|null
     */
    public function getTransactionalEspDomainUuid()
    {
        return $this->container['transactional_esp_domain_uuid'];
    }

    /**
     * Sets transactional_esp_domain_uuid
     *
     * @param string|null $transactional_esp_domain_uuid transactional_esp_domain_uuid
     *
     * @return self
     */
    public function setTransactionalEspDomainUuid($transactional_esp_domain_uuid)
    {
        $this->container['transactional_esp_domain_uuid'] = $transactional_esp_domain_uuid;

        return $this;
    }

    /**
     * Gets transactional_esp_friendly_name
     *
     * @return string|null
     */
    public function getTransactionalEspFriendlyName()
    {
        return $this->container['transactional_esp_friendly_name'];
    }

    /**
     * Sets transactional_esp_friendly_name
     *
     * @param string|null $transactional_esp_friendly_name transactional_esp_friendly_name
     *
     * @return self
     */
    public function setTransactionalEspFriendlyName($transactional_esp_friendly_name)
    {
        $this->container['transactional_esp_friendly_name'] = $transactional_esp_friendly_name;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


