<?php
/**
 * Coupon
 *
 * PHP version 5
 *
 * @category Class
 * @package  ultracart\v2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * UltraCart Rest API V2
 *
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ultracart\v2\models;

use \ArrayAccess;
use \ultracart\v2\ObjectSerializer;

/**
 * Coupon Class Doc Comment
 *
 * @category Class
 * @package  ultracart\v2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Coupon implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Coupon';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'affiliate_oid' => 'int',
        'allow_multiple_one_time_codes' => 'bool',
        'amount_off_items' => '\ultracart\v2\models\CouponAmountOffItems',
        'amount_off_shipping' => '\ultracart\v2\models\CouponAmountOffShipping',
        'amount_off_shipping_with_items_purchase' => '\ultracart\v2\models\CouponAmountOffShippingWithItemsPurchase',
        'amount_off_subtotal' => '\ultracart\v2\models\CouponAmountOffSubtotal',
        'amount_off_subtotal_and_free_shipping' => '\ultracart\v2\models\CouponAmountOffSubtotalFreeShippingWithPurchase',
        'amount_off_subtotal_and_shipping' => '\ultracart\v2\models\CouponAmountOffSubtotalAndShipping',
        'amount_off_subtotal_with_block_purchase' => '\ultracart\v2\models\CouponAmountOffSubtotalWithBlockPurchase',
        'amount_off_subtotal_with_items_purchase' => '\ultracart\v2\models\CouponAmountOffSubtotalWithItemsPurchase',
        'automatically_apply_coupon_codes' => '\ultracart\v2\models\CouponAutomaticallyApplyCouponCodes',
        'calculated_description' => 'string',
        'can_be_used_with_other_coupons' => 'bool',
        'coupon_oid' => 'int',
        'coupon_type' => 'string',
        'description' => 'string',
        'discount_item_with_item_purchase' => '\ultracart\v2\models\CouponDiscountItemWithItemPurchase',
        'discount_items' => '\ultracart\v2\models\CouponDiscountItems',
        'expiration_dts' => 'string',
        'free_item_and_shipping_with_subtotal' => '\ultracart\v2\models\CouponFreeItemAndShippingWithSubtotal',
        'free_item_with_item_purchase' => '\ultracart\v2\models\CouponFreeItemWithItemPurchase',
        'free_item_with_subtotal' => '\ultracart\v2\models\CouponFreeItemWithSubtotal',
        'free_items_with_item_purchase' => '\ultracart\v2\models\CouponFreeItemsWithItemPurchase',
        'free_items_with_mixmatch_purchase' => '\ultracart\v2\models\CouponFreeItemsWithMixMatchPurchase',
        'free_shipping' => '\ultracart\v2\models\CouponFreeShipping',
        'free_shipping_specific_items' => '\ultracart\v2\models\CouponFreeShippingSpecificItems',
        'free_shipping_with_items_purchase' => '\ultracart\v2\models\CouponFreeShippingWithItemsPurchase',
        'free_shipping_with_subtotal' => '\ultracart\v2\models\CouponFreeShippingWithSubtotal',
        'merchant_code' => 'string',
        'multiple_amounts_off_items' => '\ultracart\v2\models\CouponMultipleAmountsOffItems',
        'no_discount' => '\ultracart\v2\models\CouponNoDiscount',
        'percent_off_item_with_items_quantity_purchase' => '\ultracart\v2\models\CouponPercentOffItemWithItemsQuantityPurchase',
        'percent_off_items' => '\ultracart\v2\models\CouponPercentOffItems',
        'percent_off_items_and_free_shipping' => '\ultracart\v2\models\CouponPercentOffItemsAndFreeShipping',
        'percent_off_items_with_items_purchase' => '\ultracart\v2\models\CouponPercentOffItemsWithItemsPurchase',
        'percent_off_retail_price_items' => '\ultracart\v2\models\CouponPercentOffRetailPriceItems',
        'percent_off_shipping' => '\ultracart\v2\models\CouponPercentOffShipping',
        'percent_off_subtotal' => '\ultracart\v2\models\CouponPercentOffSubtotal',
        'percent_off_subtotal_and_free_shipping' => '\ultracart\v2\models\CouponPercentOffSubtotalAndFreeShipping',
        'percent_off_subtotal_limit' => '\ultracart\v2\models\CouponPercentOffSubtotalLimit',
        'percent_off_subtotal_with_items_purchase' => '\ultracart\v2\models\CouponPercentOffSubtotalWithItemsPurchase',
        'percent_off_subtotal_with_subtotal' => '\ultracart\v2\models\CouponPercentOffSubtotalWithSubtotal',
        'quickbooks_code' => 'string',
        'start_dts' => 'string',
        'tiered_amount_off_item' => '\ultracart\v2\models\CouponTieredAmountOffItem',
        'tiered_amount_off_subtotal' => '\ultracart\v2\models\CouponTieredAmountOffSubtotal',
        'tiered_percent_off_items' => '\ultracart\v2\models\CouponTieredPercentOffItems',
        'tiered_percent_off_shipping' => '\ultracart\v2\models\CouponTieredPercentOffShipping',
        'tiered_percent_off_subtotal' => '\ultracart\v2\models\CouponTieredPercentOffSubtotal',
        'usable_by' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'affiliate_oid' => 'int32',
        'allow_multiple_one_time_codes' => null,
        'amount_off_items' => null,
        'amount_off_shipping' => null,
        'amount_off_shipping_with_items_purchase' => null,
        'amount_off_subtotal' => null,
        'amount_off_subtotal_and_free_shipping' => null,
        'amount_off_subtotal_and_shipping' => null,
        'amount_off_subtotal_with_block_purchase' => null,
        'amount_off_subtotal_with_items_purchase' => null,
        'automatically_apply_coupon_codes' => null,
        'calculated_description' => null,
        'can_be_used_with_other_coupons' => null,
        'coupon_oid' => 'int32',
        'coupon_type' => null,
        'description' => null,
        'discount_item_with_item_purchase' => null,
        'discount_items' => null,
        'expiration_dts' => 'dateTime',
        'free_item_and_shipping_with_subtotal' => null,
        'free_item_with_item_purchase' => null,
        'free_item_with_subtotal' => null,
        'free_items_with_item_purchase' => null,
        'free_items_with_mixmatch_purchase' => null,
        'free_shipping' => null,
        'free_shipping_specific_items' => null,
        'free_shipping_with_items_purchase' => null,
        'free_shipping_with_subtotal' => null,
        'merchant_code' => null,
        'multiple_amounts_off_items' => null,
        'no_discount' => null,
        'percent_off_item_with_items_quantity_purchase' => null,
        'percent_off_items' => null,
        'percent_off_items_and_free_shipping' => null,
        'percent_off_items_with_items_purchase' => null,
        'percent_off_retail_price_items' => null,
        'percent_off_shipping' => null,
        'percent_off_subtotal' => null,
        'percent_off_subtotal_and_free_shipping' => null,
        'percent_off_subtotal_limit' => null,
        'percent_off_subtotal_with_items_purchase' => null,
        'percent_off_subtotal_with_subtotal' => null,
        'quickbooks_code' => null,
        'start_dts' => 'dateTime',
        'tiered_amount_off_item' => null,
        'tiered_amount_off_subtotal' => null,
        'tiered_percent_off_items' => null,
        'tiered_percent_off_shipping' => null,
        'tiered_percent_off_subtotal' => null,
        'usable_by' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'affiliate_oid' => 'affiliate_oid',
        'allow_multiple_one_time_codes' => 'allow_multiple_one_time_codes',
        'amount_off_items' => 'amount_off_items',
        'amount_off_shipping' => 'amount_off_shipping',
        'amount_off_shipping_with_items_purchase' => 'amount_off_shipping_with_items_purchase',
        'amount_off_subtotal' => 'amount_off_subtotal',
        'amount_off_subtotal_and_free_shipping' => 'amount_off_subtotal_and_free_shipping',
        'amount_off_subtotal_and_shipping' => 'amount_off_subtotal_and_shipping',
        'amount_off_subtotal_with_block_purchase' => 'amount_off_subtotal_with_block_purchase',
        'amount_off_subtotal_with_items_purchase' => 'amount_off_subtotal_with_items_purchase',
        'automatically_apply_coupon_codes' => 'automatically_apply_coupon_codes',
        'calculated_description' => 'calculated_)description',
        'can_be_used_with_other_coupons' => 'can_be_used_with_other_coupons',
        'coupon_oid' => 'coupon_oid',
        'coupon_type' => 'coupon_type',
        'description' => 'description',
        'discount_item_with_item_purchase' => 'discount_item_with_item_purchase',
        'discount_items' => 'discount_items',
        'expiration_dts' => 'expiration_dts',
        'free_item_and_shipping_with_subtotal' => 'free_item_and_shipping_with_subtotal',
        'free_item_with_item_purchase' => 'free_item_with_item_purchase',
        'free_item_with_subtotal' => 'free_item_with_subtotal',
        'free_items_with_item_purchase' => 'free_items_with_item_purchase',
        'free_items_with_mixmatch_purchase' => 'free_items_with_mixmatch_purchase',
        'free_shipping' => 'free_shipping',
        'free_shipping_specific_items' => 'free_shipping_specific_items',
        'free_shipping_with_items_purchase' => 'free_shipping_with_items_purchase',
        'free_shipping_with_subtotal' => 'free_shipping_with_subtotal',
        'merchant_code' => 'merchant_code',
        'multiple_amounts_off_items' => 'multiple_amounts_off_items',
        'no_discount' => 'no_discount',
        'percent_off_item_with_items_quantity_purchase' => 'percent_off_item_with_items_quantity_purchase',
        'percent_off_items' => 'percent_off_items',
        'percent_off_items_and_free_shipping' => 'percent_off_items_and_free_shipping',
        'percent_off_items_with_items_purchase' => 'percent_off_items_with_items_purchase',
        'percent_off_retail_price_items' => 'percent_off_retail_price_items',
        'percent_off_shipping' => 'percent_off_shipping',
        'percent_off_subtotal' => 'percent_off_subtotal',
        'percent_off_subtotal_and_free_shipping' => 'percent_off_subtotal_and_free_shipping',
        'percent_off_subtotal_limit' => 'percent_off_subtotal_limit',
        'percent_off_subtotal_with_items_purchase' => 'percent_off_subtotal_with_items purchase',
        'percent_off_subtotal_with_subtotal' => 'percent_off_subtotal_with_subtotal',
        'quickbooks_code' => 'quickbooks_code',
        'start_dts' => 'start_dts',
        'tiered_amount_off_item' => 'tiered_amount_off_item',
        'tiered_amount_off_subtotal' => 'tiered_amount_off_subtotal',
        'tiered_percent_off_items' => 'tiered_percent_off_items',
        'tiered_percent_off_shipping' => 'tiered_percent_off_shipping',
        'tiered_percent_off_subtotal' => 'tiered_percent_off_subtotal',
        'usable_by' => 'usable_by'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'affiliate_oid' => 'setAffiliateOid',
        'allow_multiple_one_time_codes' => 'setAllowMultipleOneTimeCodes',
        'amount_off_items' => 'setAmountOffItems',
        'amount_off_shipping' => 'setAmountOffShipping',
        'amount_off_shipping_with_items_purchase' => 'setAmountOffShippingWithItemsPurchase',
        'amount_off_subtotal' => 'setAmountOffSubtotal',
        'amount_off_subtotal_and_free_shipping' => 'setAmountOffSubtotalAndFreeShipping',
        'amount_off_subtotal_and_shipping' => 'setAmountOffSubtotalAndShipping',
        'amount_off_subtotal_with_block_purchase' => 'setAmountOffSubtotalWithBlockPurchase',
        'amount_off_subtotal_with_items_purchase' => 'setAmountOffSubtotalWithItemsPurchase',
        'automatically_apply_coupon_codes' => 'setAutomaticallyApplyCouponCodes',
        'calculated_description' => 'setCalculatedDescription',
        'can_be_used_with_other_coupons' => 'setCanBeUsedWithOtherCoupons',
        'coupon_oid' => 'setCouponOid',
        'coupon_type' => 'setCouponType',
        'description' => 'setDescription',
        'discount_item_with_item_purchase' => 'setDiscountItemWithItemPurchase',
        'discount_items' => 'setDiscountItems',
        'expiration_dts' => 'setExpirationDts',
        'free_item_and_shipping_with_subtotal' => 'setFreeItemAndShippingWithSubtotal',
        'free_item_with_item_purchase' => 'setFreeItemWithItemPurchase',
        'free_item_with_subtotal' => 'setFreeItemWithSubtotal',
        'free_items_with_item_purchase' => 'setFreeItemsWithItemPurchase',
        'free_items_with_mixmatch_purchase' => 'setFreeItemsWithMixmatchPurchase',
        'free_shipping' => 'setFreeShipping',
        'free_shipping_specific_items' => 'setFreeShippingSpecificItems',
        'free_shipping_with_items_purchase' => 'setFreeShippingWithItemsPurchase',
        'free_shipping_with_subtotal' => 'setFreeShippingWithSubtotal',
        'merchant_code' => 'setMerchantCode',
        'multiple_amounts_off_items' => 'setMultipleAmountsOffItems',
        'no_discount' => 'setNoDiscount',
        'percent_off_item_with_items_quantity_purchase' => 'setPercentOffItemWithItemsQuantityPurchase',
        'percent_off_items' => 'setPercentOffItems',
        'percent_off_items_and_free_shipping' => 'setPercentOffItemsAndFreeShipping',
        'percent_off_items_with_items_purchase' => 'setPercentOffItemsWithItemsPurchase',
        'percent_off_retail_price_items' => 'setPercentOffRetailPriceItems',
        'percent_off_shipping' => 'setPercentOffShipping',
        'percent_off_subtotal' => 'setPercentOffSubtotal',
        'percent_off_subtotal_and_free_shipping' => 'setPercentOffSubtotalAndFreeShipping',
        'percent_off_subtotal_limit' => 'setPercentOffSubtotalLimit',
        'percent_off_subtotal_with_items_purchase' => 'setPercentOffSubtotalWithItemsPurchase',
        'percent_off_subtotal_with_subtotal' => 'setPercentOffSubtotalWithSubtotal',
        'quickbooks_code' => 'setQuickbooksCode',
        'start_dts' => 'setStartDts',
        'tiered_amount_off_item' => 'setTieredAmountOffItem',
        'tiered_amount_off_subtotal' => 'setTieredAmountOffSubtotal',
        'tiered_percent_off_items' => 'setTieredPercentOffItems',
        'tiered_percent_off_shipping' => 'setTieredPercentOffShipping',
        'tiered_percent_off_subtotal' => 'setTieredPercentOffSubtotal',
        'usable_by' => 'setUsableBy'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'affiliate_oid' => 'getAffiliateOid',
        'allow_multiple_one_time_codes' => 'getAllowMultipleOneTimeCodes',
        'amount_off_items' => 'getAmountOffItems',
        'amount_off_shipping' => 'getAmountOffShipping',
        'amount_off_shipping_with_items_purchase' => 'getAmountOffShippingWithItemsPurchase',
        'amount_off_subtotal' => 'getAmountOffSubtotal',
        'amount_off_subtotal_and_free_shipping' => 'getAmountOffSubtotalAndFreeShipping',
        'amount_off_subtotal_and_shipping' => 'getAmountOffSubtotalAndShipping',
        'amount_off_subtotal_with_block_purchase' => 'getAmountOffSubtotalWithBlockPurchase',
        'amount_off_subtotal_with_items_purchase' => 'getAmountOffSubtotalWithItemsPurchase',
        'automatically_apply_coupon_codes' => 'getAutomaticallyApplyCouponCodes',
        'calculated_description' => 'getCalculatedDescription',
        'can_be_used_with_other_coupons' => 'getCanBeUsedWithOtherCoupons',
        'coupon_oid' => 'getCouponOid',
        'coupon_type' => 'getCouponType',
        'description' => 'getDescription',
        'discount_item_with_item_purchase' => 'getDiscountItemWithItemPurchase',
        'discount_items' => 'getDiscountItems',
        'expiration_dts' => 'getExpirationDts',
        'free_item_and_shipping_with_subtotal' => 'getFreeItemAndShippingWithSubtotal',
        'free_item_with_item_purchase' => 'getFreeItemWithItemPurchase',
        'free_item_with_subtotal' => 'getFreeItemWithSubtotal',
        'free_items_with_item_purchase' => 'getFreeItemsWithItemPurchase',
        'free_items_with_mixmatch_purchase' => 'getFreeItemsWithMixmatchPurchase',
        'free_shipping' => 'getFreeShipping',
        'free_shipping_specific_items' => 'getFreeShippingSpecificItems',
        'free_shipping_with_items_purchase' => 'getFreeShippingWithItemsPurchase',
        'free_shipping_with_subtotal' => 'getFreeShippingWithSubtotal',
        'merchant_code' => 'getMerchantCode',
        'multiple_amounts_off_items' => 'getMultipleAmountsOffItems',
        'no_discount' => 'getNoDiscount',
        'percent_off_item_with_items_quantity_purchase' => 'getPercentOffItemWithItemsQuantityPurchase',
        'percent_off_items' => 'getPercentOffItems',
        'percent_off_items_and_free_shipping' => 'getPercentOffItemsAndFreeShipping',
        'percent_off_items_with_items_purchase' => 'getPercentOffItemsWithItemsPurchase',
        'percent_off_retail_price_items' => 'getPercentOffRetailPriceItems',
        'percent_off_shipping' => 'getPercentOffShipping',
        'percent_off_subtotal' => 'getPercentOffSubtotal',
        'percent_off_subtotal_and_free_shipping' => 'getPercentOffSubtotalAndFreeShipping',
        'percent_off_subtotal_limit' => 'getPercentOffSubtotalLimit',
        'percent_off_subtotal_with_items_purchase' => 'getPercentOffSubtotalWithItemsPurchase',
        'percent_off_subtotal_with_subtotal' => 'getPercentOffSubtotalWithSubtotal',
        'quickbooks_code' => 'getQuickbooksCode',
        'start_dts' => 'getStartDts',
        'tiered_amount_off_item' => 'getTieredAmountOffItem',
        'tiered_amount_off_subtotal' => 'getTieredAmountOffSubtotal',
        'tiered_percent_off_items' => 'getTieredPercentOffItems',
        'tiered_percent_off_shipping' => 'getTieredPercentOffShipping',
        'tiered_percent_off_subtotal' => 'getTieredPercentOffSubtotal',
        'usable_by' => 'getUsableBy'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['affiliate_oid'] = isset($data['affiliate_oid']) ? $data['affiliate_oid'] : null;
        $this->container['allow_multiple_one_time_codes'] = isset($data['allow_multiple_one_time_codes']) ? $data['allow_multiple_one_time_codes'] : null;
        $this->container['amount_off_items'] = isset($data['amount_off_items']) ? $data['amount_off_items'] : null;
        $this->container['amount_off_shipping'] = isset($data['amount_off_shipping']) ? $data['amount_off_shipping'] : null;
        $this->container['amount_off_shipping_with_items_purchase'] = isset($data['amount_off_shipping_with_items_purchase']) ? $data['amount_off_shipping_with_items_purchase'] : null;
        $this->container['amount_off_subtotal'] = isset($data['amount_off_subtotal']) ? $data['amount_off_subtotal'] : null;
        $this->container['amount_off_subtotal_and_free_shipping'] = isset($data['amount_off_subtotal_and_free_shipping']) ? $data['amount_off_subtotal_and_free_shipping'] : null;
        $this->container['amount_off_subtotal_and_shipping'] = isset($data['amount_off_subtotal_and_shipping']) ? $data['amount_off_subtotal_and_shipping'] : null;
        $this->container['amount_off_subtotal_with_block_purchase'] = isset($data['amount_off_subtotal_with_block_purchase']) ? $data['amount_off_subtotal_with_block_purchase'] : null;
        $this->container['amount_off_subtotal_with_items_purchase'] = isset($data['amount_off_subtotal_with_items_purchase']) ? $data['amount_off_subtotal_with_items_purchase'] : null;
        $this->container['automatically_apply_coupon_codes'] = isset($data['automatically_apply_coupon_codes']) ? $data['automatically_apply_coupon_codes'] : null;
        $this->container['calculated_description'] = isset($data['calculated_description']) ? $data['calculated_description'] : null;
        $this->container['can_be_used_with_other_coupons'] = isset($data['can_be_used_with_other_coupons']) ? $data['can_be_used_with_other_coupons'] : null;
        $this->container['coupon_oid'] = isset($data['coupon_oid']) ? $data['coupon_oid'] : null;
        $this->container['coupon_type'] = isset($data['coupon_type']) ? $data['coupon_type'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['discount_item_with_item_purchase'] = isset($data['discount_item_with_item_purchase']) ? $data['discount_item_with_item_purchase'] : null;
        $this->container['discount_items'] = isset($data['discount_items']) ? $data['discount_items'] : null;
        $this->container['expiration_dts'] = isset($data['expiration_dts']) ? $data['expiration_dts'] : null;
        $this->container['free_item_and_shipping_with_subtotal'] = isset($data['free_item_and_shipping_with_subtotal']) ? $data['free_item_and_shipping_with_subtotal'] : null;
        $this->container['free_item_with_item_purchase'] = isset($data['free_item_with_item_purchase']) ? $data['free_item_with_item_purchase'] : null;
        $this->container['free_item_with_subtotal'] = isset($data['free_item_with_subtotal']) ? $data['free_item_with_subtotal'] : null;
        $this->container['free_items_with_item_purchase'] = isset($data['free_items_with_item_purchase']) ? $data['free_items_with_item_purchase'] : null;
        $this->container['free_items_with_mixmatch_purchase'] = isset($data['free_items_with_mixmatch_purchase']) ? $data['free_items_with_mixmatch_purchase'] : null;
        $this->container['free_shipping'] = isset($data['free_shipping']) ? $data['free_shipping'] : null;
        $this->container['free_shipping_specific_items'] = isset($data['free_shipping_specific_items']) ? $data['free_shipping_specific_items'] : null;
        $this->container['free_shipping_with_items_purchase'] = isset($data['free_shipping_with_items_purchase']) ? $data['free_shipping_with_items_purchase'] : null;
        $this->container['free_shipping_with_subtotal'] = isset($data['free_shipping_with_subtotal']) ? $data['free_shipping_with_subtotal'] : null;
        $this->container['merchant_code'] = isset($data['merchant_code']) ? $data['merchant_code'] : null;
        $this->container['multiple_amounts_off_items'] = isset($data['multiple_amounts_off_items']) ? $data['multiple_amounts_off_items'] : null;
        $this->container['no_discount'] = isset($data['no_discount']) ? $data['no_discount'] : null;
        $this->container['percent_off_item_with_items_quantity_purchase'] = isset($data['percent_off_item_with_items_quantity_purchase']) ? $data['percent_off_item_with_items_quantity_purchase'] : null;
        $this->container['percent_off_items'] = isset($data['percent_off_items']) ? $data['percent_off_items'] : null;
        $this->container['percent_off_items_and_free_shipping'] = isset($data['percent_off_items_and_free_shipping']) ? $data['percent_off_items_and_free_shipping'] : null;
        $this->container['percent_off_items_with_items_purchase'] = isset($data['percent_off_items_with_items_purchase']) ? $data['percent_off_items_with_items_purchase'] : null;
        $this->container['percent_off_retail_price_items'] = isset($data['percent_off_retail_price_items']) ? $data['percent_off_retail_price_items'] : null;
        $this->container['percent_off_shipping'] = isset($data['percent_off_shipping']) ? $data['percent_off_shipping'] : null;
        $this->container['percent_off_subtotal'] = isset($data['percent_off_subtotal']) ? $data['percent_off_subtotal'] : null;
        $this->container['percent_off_subtotal_and_free_shipping'] = isset($data['percent_off_subtotal_and_free_shipping']) ? $data['percent_off_subtotal_and_free_shipping'] : null;
        $this->container['percent_off_subtotal_limit'] = isset($data['percent_off_subtotal_limit']) ? $data['percent_off_subtotal_limit'] : null;
        $this->container['percent_off_subtotal_with_items_purchase'] = isset($data['percent_off_subtotal_with_items_purchase']) ? $data['percent_off_subtotal_with_items_purchase'] : null;
        $this->container['percent_off_subtotal_with_subtotal'] = isset($data['percent_off_subtotal_with_subtotal']) ? $data['percent_off_subtotal_with_subtotal'] : null;
        $this->container['quickbooks_code'] = isset($data['quickbooks_code']) ? $data['quickbooks_code'] : null;
        $this->container['start_dts'] = isset($data['start_dts']) ? $data['start_dts'] : null;
        $this->container['tiered_amount_off_item'] = isset($data['tiered_amount_off_item']) ? $data['tiered_amount_off_item'] : null;
        $this->container['tiered_amount_off_subtotal'] = isset($data['tiered_amount_off_subtotal']) ? $data['tiered_amount_off_subtotal'] : null;
        $this->container['tiered_percent_off_items'] = isset($data['tiered_percent_off_items']) ? $data['tiered_percent_off_items'] : null;
        $this->container['tiered_percent_off_shipping'] = isset($data['tiered_percent_off_shipping']) ? $data['tiered_percent_off_shipping'] : null;
        $this->container['tiered_percent_off_subtotal'] = isset($data['tiered_percent_off_subtotal']) ? $data['tiered_percent_off_subtotal'] : null;
        $this->container['usable_by'] = isset($data['usable_by']) ? $data['usable_by'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['coupon_type']) && (mb_strlen($this->container['coupon_type']) > 65)) {
            $invalidProperties[] = "invalid value for 'coupon_type', the character length must be smaller than or equal to 65.";
        }

        if (!is_null($this->container['description']) && (mb_strlen($this->container['description']) > 50)) {
            $invalidProperties[] = "invalid value for 'description', the character length must be smaller than or equal to 50.";
        }

        if (!is_null($this->container['merchant_code']) && (mb_strlen($this->container['merchant_code']) > 20)) {
            $invalidProperties[] = "invalid value for 'merchant_code', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['quickbooks_code']) && (mb_strlen($this->container['quickbooks_code']) > 20)) {
            $invalidProperties[] = "invalid value for 'quickbooks_code', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['usable_by']) && (mb_strlen($this->container['usable_by']) > 50)) {
            $invalidProperties[] = "invalid value for 'usable_by', the character length must be smaller than or equal to 50.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if (mb_strlen($this->container['coupon_type']) > 65) {
            return false;
        }
        if (mb_strlen($this->container['description']) > 50) {
            return false;
        }
        if (mb_strlen($this->container['merchant_code']) > 20) {
            return false;
        }
        if (mb_strlen($this->container['quickbooks_code']) > 20) {
            return false;
        }
        if (mb_strlen($this->container['usable_by']) > 50) {
            return false;
        }
        return true;
    }


    /**
     * Gets affiliate_oid
     *
     * @return int
     */
    public function getAffiliateOid()
    {
        return $this->container['affiliate_oid'];
    }

    /**
     * Sets affiliate_oid
     *
     * @param int $affiliate_oid Associates an order with an affiliate when this value is set.
     *
     * @return $this
     */
    public function setAffiliateOid($affiliate_oid)
    {
        $this->container['affiliate_oid'] = $affiliate_oid;

        return $this;
    }

    /**
     * Gets allow_multiple_one_time_codes
     *
     * @return bool
     */
    public function getAllowMultipleOneTimeCodes()
    {
        return $this->container['allow_multiple_one_time_codes'];
    }

    /**
     * Sets allow_multiple_one_time_codes
     *
     * @param bool $allow_multiple_one_time_codes True if multiple one time codes for this coupon can be used on a cart at the same time.
     *
     * @return $this
     */
    public function setAllowMultipleOneTimeCodes($allow_multiple_one_time_codes)
    {
        $this->container['allow_multiple_one_time_codes'] = $allow_multiple_one_time_codes;

        return $this;
    }

    /**
     * Gets amount_off_items
     *
     * @return \ultracart\v2\models\CouponAmountOffItems
     */
    public function getAmountOffItems()
    {
        return $this->container['amount_off_items'];
    }

    /**
     * Sets amount_off_items
     *
     * @param \ultracart\v2\models\CouponAmountOffItems $amount_off_items amount_off_items
     *
     * @return $this
     */
    public function setAmountOffItems($amount_off_items)
    {
        $this->container['amount_off_items'] = $amount_off_items;

        return $this;
    }

    /**
     * Gets amount_off_shipping
     *
     * @return \ultracart\v2\models\CouponAmountOffShipping
     */
    public function getAmountOffShipping()
    {
        return $this->container['amount_off_shipping'];
    }

    /**
     * Sets amount_off_shipping
     *
     * @param \ultracart\v2\models\CouponAmountOffShipping $amount_off_shipping amount_off_shipping
     *
     * @return $this
     */
    public function setAmountOffShipping($amount_off_shipping)
    {
        $this->container['amount_off_shipping'] = $amount_off_shipping;

        return $this;
    }

    /**
     * Gets amount_off_shipping_with_items_purchase
     *
     * @return \ultracart\v2\models\CouponAmountOffShippingWithItemsPurchase
     */
    public function getAmountOffShippingWithItemsPurchase()
    {
        return $this->container['amount_off_shipping_with_items_purchase'];
    }

    /**
     * Sets amount_off_shipping_with_items_purchase
     *
     * @param \ultracart\v2\models\CouponAmountOffShippingWithItemsPurchase $amount_off_shipping_with_items_purchase amount_off_shipping_with_items_purchase
     *
     * @return $this
     */
    public function setAmountOffShippingWithItemsPurchase($amount_off_shipping_with_items_purchase)
    {
        $this->container['amount_off_shipping_with_items_purchase'] = $amount_off_shipping_with_items_purchase;

        return $this;
    }

    /**
     * Gets amount_off_subtotal
     *
     * @return \ultracart\v2\models\CouponAmountOffSubtotal
     */
    public function getAmountOffSubtotal()
    {
        return $this->container['amount_off_subtotal'];
    }

    /**
     * Sets amount_off_subtotal
     *
     * @param \ultracart\v2\models\CouponAmountOffSubtotal $amount_off_subtotal amount_off_subtotal
     *
     * @return $this
     */
    public function setAmountOffSubtotal($amount_off_subtotal)
    {
        $this->container['amount_off_subtotal'] = $amount_off_subtotal;

        return $this;
    }

    /**
     * Gets amount_off_subtotal_and_free_shipping
     *
     * @return \ultracart\v2\models\CouponAmountOffSubtotalFreeShippingWithPurchase
     */
    public function getAmountOffSubtotalAndFreeShipping()
    {
        return $this->container['amount_off_subtotal_and_free_shipping'];
    }

    /**
     * Sets amount_off_subtotal_and_free_shipping
     *
     * @param \ultracart\v2\models\CouponAmountOffSubtotalFreeShippingWithPurchase $amount_off_subtotal_and_free_shipping amount_off_subtotal_and_free_shipping
     *
     * @return $this
     */
    public function setAmountOffSubtotalAndFreeShipping($amount_off_subtotal_and_free_shipping)
    {
        $this->container['amount_off_subtotal_and_free_shipping'] = $amount_off_subtotal_and_free_shipping;

        return $this;
    }

    /**
     * Gets amount_off_subtotal_and_shipping
     *
     * @return \ultracart\v2\models\CouponAmountOffSubtotalAndShipping
     */
    public function getAmountOffSubtotalAndShipping()
    {
        return $this->container['amount_off_subtotal_and_shipping'];
    }

    /**
     * Sets amount_off_subtotal_and_shipping
     *
     * @param \ultracart\v2\models\CouponAmountOffSubtotalAndShipping $amount_off_subtotal_and_shipping amount_off_subtotal_and_shipping
     *
     * @return $this
     */
    public function setAmountOffSubtotalAndShipping($amount_off_subtotal_and_shipping)
    {
        $this->container['amount_off_subtotal_and_shipping'] = $amount_off_subtotal_and_shipping;

        return $this;
    }

    /**
     * Gets amount_off_subtotal_with_block_purchase
     *
     * @return \ultracart\v2\models\CouponAmountOffSubtotalWithBlockPurchase
     */
    public function getAmountOffSubtotalWithBlockPurchase()
    {
        return $this->container['amount_off_subtotal_with_block_purchase'];
    }

    /**
     * Sets amount_off_subtotal_with_block_purchase
     *
     * @param \ultracart\v2\models\CouponAmountOffSubtotalWithBlockPurchase $amount_off_subtotal_with_block_purchase amount_off_subtotal_with_block_purchase
     *
     * @return $this
     */
    public function setAmountOffSubtotalWithBlockPurchase($amount_off_subtotal_with_block_purchase)
    {
        $this->container['amount_off_subtotal_with_block_purchase'] = $amount_off_subtotal_with_block_purchase;

        return $this;
    }

    /**
     * Gets amount_off_subtotal_with_items_purchase
     *
     * @return \ultracart\v2\models\CouponAmountOffSubtotalWithItemsPurchase
     */
    public function getAmountOffSubtotalWithItemsPurchase()
    {
        return $this->container['amount_off_subtotal_with_items_purchase'];
    }

    /**
     * Sets amount_off_subtotal_with_items_purchase
     *
     * @param \ultracart\v2\models\CouponAmountOffSubtotalWithItemsPurchase $amount_off_subtotal_with_items_purchase amount_off_subtotal_with_items_purchase
     *
     * @return $this
     */
    public function setAmountOffSubtotalWithItemsPurchase($amount_off_subtotal_with_items_purchase)
    {
        $this->container['amount_off_subtotal_with_items_purchase'] = $amount_off_subtotal_with_items_purchase;

        return $this;
    }

    /**
     * Gets automatically_apply_coupon_codes
     *
     * @return \ultracart\v2\models\CouponAutomaticallyApplyCouponCodes
     */
    public function getAutomaticallyApplyCouponCodes()
    {
        return $this->container['automatically_apply_coupon_codes'];
    }

    /**
     * Sets automatically_apply_coupon_codes
     *
     * @param \ultracart\v2\models\CouponAutomaticallyApplyCouponCodes $automatically_apply_coupon_codes automatically_apply_coupon_codes
     *
     * @return $this
     */
    public function setAutomaticallyApplyCouponCodes($automatically_apply_coupon_codes)
    {
        $this->container['automatically_apply_coupon_codes'] = $automatically_apply_coupon_codes;

        return $this;
    }

    /**
     * Gets calculated_description
     *
     * @return string
     */
    public function getCalculatedDescription()
    {
        return $this->container['calculated_description'];
    }

    /**
     * Sets calculated_description
     *
     * @param string $calculated_description Calculated description displayed to the customer if no description is specified.
     *
     * @return $this
     */
    public function setCalculatedDescription($calculated_description)
    {
        $this->container['calculated_description'] = $calculated_description;

        return $this;
    }

    /**
     * Gets can_be_used_with_other_coupons
     *
     * @return bool
     */
    public function getCanBeUsedWithOtherCoupons()
    {
        return $this->container['can_be_used_with_other_coupons'];
    }

    /**
     * Sets can_be_used_with_other_coupons
     *
     * @param bool $can_be_used_with_other_coupons True if this coupon can be used with other coupons in a single order.
     *
     * @return $this
     */
    public function setCanBeUsedWithOtherCoupons($can_be_used_with_other_coupons)
    {
        $this->container['can_be_used_with_other_coupons'] = $can_be_used_with_other_coupons;

        return $this;
    }

    /**
     * Gets coupon_oid
     *
     * @return int
     */
    public function getCouponOid()
    {
        return $this->container['coupon_oid'];
    }

    /**
     * Sets coupon_oid
     *
     * @param int $coupon_oid Coupon oid.
     *
     * @return $this
     */
    public function setCouponOid($coupon_oid)
    {
        $this->container['coupon_oid'] = $coupon_oid;

        return $this;
    }

    /**
     * Gets coupon_type
     *
     * @return string
     */
    public function getCouponType()
    {
        return $this->container['coupon_type'];
    }

    /**
     * Sets coupon_type
     *
     * @param string $coupon_type Coupon type.
     *
     * @return $this
     */
    public function setCouponType($coupon_type)
    {
        if (!is_null($coupon_type) && (mb_strlen($coupon_type) > 65)) {
            throw new \InvalidArgumentException('invalid length for $coupon_type when calling Coupon., must be smaller than or equal to 65.');
        }

        $this->container['coupon_type'] = $coupon_type;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description Description of the coupon up to 50 characters.
     *
     * @return $this
     */
    public function setDescription($description)
    {
        if (!is_null($description) && (mb_strlen($description) > 50)) {
            throw new \InvalidArgumentException('invalid length for $description when calling Coupon., must be smaller than or equal to 50.');
        }

        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets discount_item_with_item_purchase
     *
     * @return \ultracart\v2\models\CouponDiscountItemWithItemPurchase
     */
    public function getDiscountItemWithItemPurchase()
    {
        return $this->container['discount_item_with_item_purchase'];
    }

    /**
     * Sets discount_item_with_item_purchase
     *
     * @param \ultracart\v2\models\CouponDiscountItemWithItemPurchase $discount_item_with_item_purchase discount_item_with_item_purchase
     *
     * @return $this
     */
    public function setDiscountItemWithItemPurchase($discount_item_with_item_purchase)
    {
        $this->container['discount_item_with_item_purchase'] = $discount_item_with_item_purchase;

        return $this;
    }

    /**
     * Gets discount_items
     *
     * @return \ultracart\v2\models\CouponDiscountItems
     */
    public function getDiscountItems()
    {
        return $this->container['discount_items'];
    }

    /**
     * Sets discount_items
     *
     * @param \ultracart\v2\models\CouponDiscountItems $discount_items discount_items
     *
     * @return $this
     */
    public function setDiscountItems($discount_items)
    {
        $this->container['discount_items'] = $discount_items;

        return $this;
    }

    /**
     * Gets expiration_dts
     *
     * @return string
     */
    public function getExpirationDts()
    {
        return $this->container['expiration_dts'];
    }

    /**
     * Sets expiration_dts
     *
     * @param string $expiration_dts Date/time when coupon expires
     *
     * @return $this
     */
    public function setExpirationDts($expiration_dts)
    {
        $this->container['expiration_dts'] = $expiration_dts;

        return $this;
    }

    /**
     * Gets free_item_and_shipping_with_subtotal
     *
     * @return \ultracart\v2\models\CouponFreeItemAndShippingWithSubtotal
     */
    public function getFreeItemAndShippingWithSubtotal()
    {
        return $this->container['free_item_and_shipping_with_subtotal'];
    }

    /**
     * Sets free_item_and_shipping_with_subtotal
     *
     * @param \ultracart\v2\models\CouponFreeItemAndShippingWithSubtotal $free_item_and_shipping_with_subtotal free_item_and_shipping_with_subtotal
     *
     * @return $this
     */
    public function setFreeItemAndShippingWithSubtotal($free_item_and_shipping_with_subtotal)
    {
        $this->container['free_item_and_shipping_with_subtotal'] = $free_item_and_shipping_with_subtotal;

        return $this;
    }

    /**
     * Gets free_item_with_item_purchase
     *
     * @return \ultracart\v2\models\CouponFreeItemWithItemPurchase
     */
    public function getFreeItemWithItemPurchase()
    {
        return $this->container['free_item_with_item_purchase'];
    }

    /**
     * Sets free_item_with_item_purchase
     *
     * @param \ultracart\v2\models\CouponFreeItemWithItemPurchase $free_item_with_item_purchase free_item_with_item_purchase
     *
     * @return $this
     */
    public function setFreeItemWithItemPurchase($free_item_with_item_purchase)
    {
        $this->container['free_item_with_item_purchase'] = $free_item_with_item_purchase;

        return $this;
    }

    /**
     * Gets free_item_with_subtotal
     *
     * @return \ultracart\v2\models\CouponFreeItemWithSubtotal
     */
    public function getFreeItemWithSubtotal()
    {
        return $this->container['free_item_with_subtotal'];
    }

    /**
     * Sets free_item_with_subtotal
     *
     * @param \ultracart\v2\models\CouponFreeItemWithSubtotal $free_item_with_subtotal free_item_with_subtotal
     *
     * @return $this
     */
    public function setFreeItemWithSubtotal($free_item_with_subtotal)
    {
        $this->container['free_item_with_subtotal'] = $free_item_with_subtotal;

        return $this;
    }

    /**
     * Gets free_items_with_item_purchase
     *
     * @return \ultracart\v2\models\CouponFreeItemsWithItemPurchase
     */
    public function getFreeItemsWithItemPurchase()
    {
        return $this->container['free_items_with_item_purchase'];
    }

    /**
     * Sets free_items_with_item_purchase
     *
     * @param \ultracart\v2\models\CouponFreeItemsWithItemPurchase $free_items_with_item_purchase free_items_with_item_purchase
     *
     * @return $this
     */
    public function setFreeItemsWithItemPurchase($free_items_with_item_purchase)
    {
        $this->container['free_items_with_item_purchase'] = $free_items_with_item_purchase;

        return $this;
    }

    /**
     * Gets free_items_with_mixmatch_purchase
     *
     * @return \ultracart\v2\models\CouponFreeItemsWithMixMatchPurchase
     */
    public function getFreeItemsWithMixmatchPurchase()
    {
        return $this->container['free_items_with_mixmatch_purchase'];
    }

    /**
     * Sets free_items_with_mixmatch_purchase
     *
     * @param \ultracart\v2\models\CouponFreeItemsWithMixMatchPurchase $free_items_with_mixmatch_purchase free_items_with_mixmatch_purchase
     *
     * @return $this
     */
    public function setFreeItemsWithMixmatchPurchase($free_items_with_mixmatch_purchase)
    {
        $this->container['free_items_with_mixmatch_purchase'] = $free_items_with_mixmatch_purchase;

        return $this;
    }

    /**
     * Gets free_shipping
     *
     * @return \ultracart\v2\models\CouponFreeShipping
     */
    public function getFreeShipping()
    {
        return $this->container['free_shipping'];
    }

    /**
     * Sets free_shipping
     *
     * @param \ultracart\v2\models\CouponFreeShipping $free_shipping free_shipping
     *
     * @return $this
     */
    public function setFreeShipping($free_shipping)
    {
        $this->container['free_shipping'] = $free_shipping;

        return $this;
    }

    /**
     * Gets free_shipping_specific_items
     *
     * @return \ultracart\v2\models\CouponFreeShippingSpecificItems
     */
    public function getFreeShippingSpecificItems()
    {
        return $this->container['free_shipping_specific_items'];
    }

    /**
     * Sets free_shipping_specific_items
     *
     * @param \ultracart\v2\models\CouponFreeShippingSpecificItems $free_shipping_specific_items free_shipping_specific_items
     *
     * @return $this
     */
    public function setFreeShippingSpecificItems($free_shipping_specific_items)
    {
        $this->container['free_shipping_specific_items'] = $free_shipping_specific_items;

        return $this;
    }

    /**
     * Gets free_shipping_with_items_purchase
     *
     * @return \ultracart\v2\models\CouponFreeShippingWithItemsPurchase
     */
    public function getFreeShippingWithItemsPurchase()
    {
        return $this->container['free_shipping_with_items_purchase'];
    }

    /**
     * Sets free_shipping_with_items_purchase
     *
     * @param \ultracart\v2\models\CouponFreeShippingWithItemsPurchase $free_shipping_with_items_purchase free_shipping_with_items_purchase
     *
     * @return $this
     */
    public function setFreeShippingWithItemsPurchase($free_shipping_with_items_purchase)
    {
        $this->container['free_shipping_with_items_purchase'] = $free_shipping_with_items_purchase;

        return $this;
    }

    /**
     * Gets free_shipping_with_subtotal
     *
     * @return \ultracart\v2\models\CouponFreeShippingWithSubtotal
     */
    public function getFreeShippingWithSubtotal()
    {
        return $this->container['free_shipping_with_subtotal'];
    }

    /**
     * Sets free_shipping_with_subtotal
     *
     * @param \ultracart\v2\models\CouponFreeShippingWithSubtotal $free_shipping_with_subtotal free_shipping_with_subtotal
     *
     * @return $this
     */
    public function setFreeShippingWithSubtotal($free_shipping_with_subtotal)
    {
        $this->container['free_shipping_with_subtotal'] = $free_shipping_with_subtotal;

        return $this;
    }

    /**
     * Gets merchant_code
     *
     * @return string
     */
    public function getMerchantCode()
    {
        return $this->container['merchant_code'];
    }

    /**
     * Sets merchant_code
     *
     * @param string $merchant_code Merchant code of coupon up to 20 characters.
     *
     * @return $this
     */
    public function setMerchantCode($merchant_code)
    {
        if (!is_null($merchant_code) && (mb_strlen($merchant_code) > 20)) {
            throw new \InvalidArgumentException('invalid length for $merchant_code when calling Coupon., must be smaller than or equal to 20.');
        }

        $this->container['merchant_code'] = $merchant_code;

        return $this;
    }

    /**
     * Gets multiple_amounts_off_items
     *
     * @return \ultracart\v2\models\CouponMultipleAmountsOffItems
     */
    public function getMultipleAmountsOffItems()
    {
        return $this->container['multiple_amounts_off_items'];
    }

    /**
     * Sets multiple_amounts_off_items
     *
     * @param \ultracart\v2\models\CouponMultipleAmountsOffItems $multiple_amounts_off_items multiple_amounts_off_items
     *
     * @return $this
     */
    public function setMultipleAmountsOffItems($multiple_amounts_off_items)
    {
        $this->container['multiple_amounts_off_items'] = $multiple_amounts_off_items;

        return $this;
    }

    /**
     * Gets no_discount
     *
     * @return \ultracart\v2\models\CouponNoDiscount
     */
    public function getNoDiscount()
    {
        return $this->container['no_discount'];
    }

    /**
     * Sets no_discount
     *
     * @param \ultracart\v2\models\CouponNoDiscount $no_discount no_discount
     *
     * @return $this
     */
    public function setNoDiscount($no_discount)
    {
        $this->container['no_discount'] = $no_discount;

        return $this;
    }

    /**
     * Gets percent_off_item_with_items_quantity_purchase
     *
     * @return \ultracart\v2\models\CouponPercentOffItemWithItemsQuantityPurchase
     */
    public function getPercentOffItemWithItemsQuantityPurchase()
    {
        return $this->container['percent_off_item_with_items_quantity_purchase'];
    }

    /**
     * Sets percent_off_item_with_items_quantity_purchase
     *
     * @param \ultracart\v2\models\CouponPercentOffItemWithItemsQuantityPurchase $percent_off_item_with_items_quantity_purchase percent_off_item_with_items_quantity_purchase
     *
     * @return $this
     */
    public function setPercentOffItemWithItemsQuantityPurchase($percent_off_item_with_items_quantity_purchase)
    {
        $this->container['percent_off_item_with_items_quantity_purchase'] = $percent_off_item_with_items_quantity_purchase;

        return $this;
    }

    /**
     * Gets percent_off_items
     *
     * @return \ultracart\v2\models\CouponPercentOffItems
     */
    public function getPercentOffItems()
    {
        return $this->container['percent_off_items'];
    }

    /**
     * Sets percent_off_items
     *
     * @param \ultracart\v2\models\CouponPercentOffItems $percent_off_items percent_off_items
     *
     * @return $this
     */
    public function setPercentOffItems($percent_off_items)
    {
        $this->container['percent_off_items'] = $percent_off_items;

        return $this;
    }

    /**
     * Gets percent_off_items_and_free_shipping
     *
     * @return \ultracart\v2\models\CouponPercentOffItemsAndFreeShipping
     */
    public function getPercentOffItemsAndFreeShipping()
    {
        return $this->container['percent_off_items_and_free_shipping'];
    }

    /**
     * Sets percent_off_items_and_free_shipping
     *
     * @param \ultracart\v2\models\CouponPercentOffItemsAndFreeShipping $percent_off_items_and_free_shipping percent_off_items_and_free_shipping
     *
     * @return $this
     */
    public function setPercentOffItemsAndFreeShipping($percent_off_items_and_free_shipping)
    {
        $this->container['percent_off_items_and_free_shipping'] = $percent_off_items_and_free_shipping;

        return $this;
    }

    /**
     * Gets percent_off_items_with_items_purchase
     *
     * @return \ultracart\v2\models\CouponPercentOffItemsWithItemsPurchase
     */
    public function getPercentOffItemsWithItemsPurchase()
    {
        return $this->container['percent_off_items_with_items_purchase'];
    }

    /**
     * Sets percent_off_items_with_items_purchase
     *
     * @param \ultracart\v2\models\CouponPercentOffItemsWithItemsPurchase $percent_off_items_with_items_purchase percent_off_items_with_items_purchase
     *
     * @return $this
     */
    public function setPercentOffItemsWithItemsPurchase($percent_off_items_with_items_purchase)
    {
        $this->container['percent_off_items_with_items_purchase'] = $percent_off_items_with_items_purchase;

        return $this;
    }

    /**
     * Gets percent_off_retail_price_items
     *
     * @return \ultracart\v2\models\CouponPercentOffRetailPriceItems
     */
    public function getPercentOffRetailPriceItems()
    {
        return $this->container['percent_off_retail_price_items'];
    }

    /**
     * Sets percent_off_retail_price_items
     *
     * @param \ultracart\v2\models\CouponPercentOffRetailPriceItems $percent_off_retail_price_items percent_off_retail_price_items
     *
     * @return $this
     */
    public function setPercentOffRetailPriceItems($percent_off_retail_price_items)
    {
        $this->container['percent_off_retail_price_items'] = $percent_off_retail_price_items;

        return $this;
    }

    /**
     * Gets percent_off_shipping
     *
     * @return \ultracart\v2\models\CouponPercentOffShipping
     */
    public function getPercentOffShipping()
    {
        return $this->container['percent_off_shipping'];
    }

    /**
     * Sets percent_off_shipping
     *
     * @param \ultracart\v2\models\CouponPercentOffShipping $percent_off_shipping percent_off_shipping
     *
     * @return $this
     */
    public function setPercentOffShipping($percent_off_shipping)
    {
        $this->container['percent_off_shipping'] = $percent_off_shipping;

        return $this;
    }

    /**
     * Gets percent_off_subtotal
     *
     * @return \ultracart\v2\models\CouponPercentOffSubtotal
     */
    public function getPercentOffSubtotal()
    {
        return $this->container['percent_off_subtotal'];
    }

    /**
     * Sets percent_off_subtotal
     *
     * @param \ultracart\v2\models\CouponPercentOffSubtotal $percent_off_subtotal percent_off_subtotal
     *
     * @return $this
     */
    public function setPercentOffSubtotal($percent_off_subtotal)
    {
        $this->container['percent_off_subtotal'] = $percent_off_subtotal;

        return $this;
    }

    /**
     * Gets percent_off_subtotal_and_free_shipping
     *
     * @return \ultracart\v2\models\CouponPercentOffSubtotalAndFreeShipping
     */
    public function getPercentOffSubtotalAndFreeShipping()
    {
        return $this->container['percent_off_subtotal_and_free_shipping'];
    }

    /**
     * Sets percent_off_subtotal_and_free_shipping
     *
     * @param \ultracart\v2\models\CouponPercentOffSubtotalAndFreeShipping $percent_off_subtotal_and_free_shipping percent_off_subtotal_and_free_shipping
     *
     * @return $this
     */
    public function setPercentOffSubtotalAndFreeShipping($percent_off_subtotal_and_free_shipping)
    {
        $this->container['percent_off_subtotal_and_free_shipping'] = $percent_off_subtotal_and_free_shipping;

        return $this;
    }

    /**
     * Gets percent_off_subtotal_limit
     *
     * @return \ultracart\v2\models\CouponPercentOffSubtotalLimit
     */
    public function getPercentOffSubtotalLimit()
    {
        return $this->container['percent_off_subtotal_limit'];
    }

    /**
     * Sets percent_off_subtotal_limit
     *
     * @param \ultracart\v2\models\CouponPercentOffSubtotalLimit $percent_off_subtotal_limit percent_off_subtotal_limit
     *
     * @return $this
     */
    public function setPercentOffSubtotalLimit($percent_off_subtotal_limit)
    {
        $this->container['percent_off_subtotal_limit'] = $percent_off_subtotal_limit;

        return $this;
    }

    /**
     * Gets percent_off_subtotal_with_items_purchase
     *
     * @return \ultracart\v2\models\CouponPercentOffSubtotalWithItemsPurchase
     */
    public function getPercentOffSubtotalWithItemsPurchase()
    {
        return $this->container['percent_off_subtotal_with_items_purchase'];
    }

    /**
     * Sets percent_off_subtotal_with_items_purchase
     *
     * @param \ultracart\v2\models\CouponPercentOffSubtotalWithItemsPurchase $percent_off_subtotal_with_items_purchase percent_off_subtotal_with_items_purchase
     *
     * @return $this
     */
    public function setPercentOffSubtotalWithItemsPurchase($percent_off_subtotal_with_items_purchase)
    {
        $this->container['percent_off_subtotal_with_items_purchase'] = $percent_off_subtotal_with_items_purchase;

        return $this;
    }

    /**
     * Gets percent_off_subtotal_with_subtotal
     *
     * @return \ultracart\v2\models\CouponPercentOffSubtotalWithSubtotal
     */
    public function getPercentOffSubtotalWithSubtotal()
    {
        return $this->container['percent_off_subtotal_with_subtotal'];
    }

    /**
     * Sets percent_off_subtotal_with_subtotal
     *
     * @param \ultracart\v2\models\CouponPercentOffSubtotalWithSubtotal $percent_off_subtotal_with_subtotal percent_off_subtotal_with_subtotal
     *
     * @return $this
     */
    public function setPercentOffSubtotalWithSubtotal($percent_off_subtotal_with_subtotal)
    {
        $this->container['percent_off_subtotal_with_subtotal'] = $percent_off_subtotal_with_subtotal;

        return $this;
    }

    /**
     * Gets quickbooks_code
     *
     * @return string
     */
    public function getQuickbooksCode()
    {
        return $this->container['quickbooks_code'];
    }

    /**
     * Sets quickbooks_code
     *
     * @param string $quickbooks_code Quickbooks accounting code.
     *
     * @return $this
     */
    public function setQuickbooksCode($quickbooks_code)
    {
        if (!is_null($quickbooks_code) && (mb_strlen($quickbooks_code) > 20)) {
            throw new \InvalidArgumentException('invalid length for $quickbooks_code when calling Coupon., must be smaller than or equal to 20.');
        }

        $this->container['quickbooks_code'] = $quickbooks_code;

        return $this;
    }

    /**
     * Gets start_dts
     *
     * @return string
     */
    public function getStartDts()
    {
        return $this->container['start_dts'];
    }

    /**
     * Sets start_dts
     *
     * @param string $start_dts Date/time when coupon is valid
     *
     * @return $this
     */
    public function setStartDts($start_dts)
    {
        $this->container['start_dts'] = $start_dts;

        return $this;
    }

    /**
     * Gets tiered_amount_off_item
     *
     * @return \ultracart\v2\models\CouponTieredAmountOffItem
     */
    public function getTieredAmountOffItem()
    {
        return $this->container['tiered_amount_off_item'];
    }

    /**
     * Sets tiered_amount_off_item
     *
     * @param \ultracart\v2\models\CouponTieredAmountOffItem $tiered_amount_off_item tiered_amount_off_item
     *
     * @return $this
     */
    public function setTieredAmountOffItem($tiered_amount_off_item)
    {
        $this->container['tiered_amount_off_item'] = $tiered_amount_off_item;

        return $this;
    }

    /**
     * Gets tiered_amount_off_subtotal
     *
     * @return \ultracart\v2\models\CouponTieredAmountOffSubtotal
     */
    public function getTieredAmountOffSubtotal()
    {
        return $this->container['tiered_amount_off_subtotal'];
    }

    /**
     * Sets tiered_amount_off_subtotal
     *
     * @param \ultracart\v2\models\CouponTieredAmountOffSubtotal $tiered_amount_off_subtotal tiered_amount_off_subtotal
     *
     * @return $this
     */
    public function setTieredAmountOffSubtotal($tiered_amount_off_subtotal)
    {
        $this->container['tiered_amount_off_subtotal'] = $tiered_amount_off_subtotal;

        return $this;
    }

    /**
     * Gets tiered_percent_off_items
     *
     * @return \ultracart\v2\models\CouponTieredPercentOffItems
     */
    public function getTieredPercentOffItems()
    {
        return $this->container['tiered_percent_off_items'];
    }

    /**
     * Sets tiered_percent_off_items
     *
     * @param \ultracart\v2\models\CouponTieredPercentOffItems $tiered_percent_off_items tiered_percent_off_items
     *
     * @return $this
     */
    public function setTieredPercentOffItems($tiered_percent_off_items)
    {
        $this->container['tiered_percent_off_items'] = $tiered_percent_off_items;

        return $this;
    }

    /**
     * Gets tiered_percent_off_shipping
     *
     * @return \ultracart\v2\models\CouponTieredPercentOffShipping
     */
    public function getTieredPercentOffShipping()
    {
        return $this->container['tiered_percent_off_shipping'];
    }

    /**
     * Sets tiered_percent_off_shipping
     *
     * @param \ultracart\v2\models\CouponTieredPercentOffShipping $tiered_percent_off_shipping tiered_percent_off_shipping
     *
     * @return $this
     */
    public function setTieredPercentOffShipping($tiered_percent_off_shipping)
    {
        $this->container['tiered_percent_off_shipping'] = $tiered_percent_off_shipping;

        return $this;
    }

    /**
     * Gets tiered_percent_off_subtotal
     *
     * @return \ultracart\v2\models\CouponTieredPercentOffSubtotal
     */
    public function getTieredPercentOffSubtotal()
    {
        return $this->container['tiered_percent_off_subtotal'];
    }

    /**
     * Sets tiered_percent_off_subtotal
     *
     * @param \ultracart\v2\models\CouponTieredPercentOffSubtotal $tiered_percent_off_subtotal tiered_percent_off_subtotal
     *
     * @return $this
     */
    public function setTieredPercentOffSubtotal($tiered_percent_off_subtotal)
    {
        $this->container['tiered_percent_off_subtotal'] = $tiered_percent_off_subtotal;

        return $this;
    }

    /**
     * Gets usable_by
     *
     * @return string
     */
    public function getUsableBy()
    {
        return $this->container['usable_by'];
    }

    /**
     * Sets usable_by
     *
     * @param string $usable_by Who may use this coupon.
     *
     * @return $this
     */
    public function setUsableBy($usable_by)
    {
        if (!is_null($usable_by) && (mb_strlen($usable_by) > 50)) {
            throw new \InvalidArgumentException('invalid length for $usable_by when calling Coupon., must be smaller than or equal to 50.');
        }

        $this->container['usable_by'] = $usable_by;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


